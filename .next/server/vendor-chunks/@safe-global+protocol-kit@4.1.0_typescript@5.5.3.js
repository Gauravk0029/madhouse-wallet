"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@safe-global+protocol-kit@4.1.0_typescript@5.5.3";
exports.ids = ["vendor-chunks/@safe-global+protocol-kit@4.1.0_typescript@5.5.3"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/Safe.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/Safe.js ***!
  \*************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Safe_instances, _Safe_predictedSafe, _Safe_safeProvider, _Safe_contractManager, _Safe_ownerManager, _Safe_moduleManager, _Safe_guardManager, _Safe_fallbackHandlerManager, _Safe_MAGIC_VALUE, _Safe_MAGIC_VALUE_BYTES, _Safe_initializeProtocolKit, _Safe_getFallbackHandlerContract;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\nconst utils_1 = __webpack_require__(/*! ./contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst config_1 = __webpack_require__(/*! ./contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\nconst contractManager_1 = __importDefault(__webpack_require__(/*! ./managers/contractManager */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/contractManager.js\"));\nconst fallbackHandlerManager_1 = __importDefault(__webpack_require__(/*! ./managers/fallbackHandlerManager */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/fallbackHandlerManager.js\"));\nconst guardManager_1 = __importDefault(__webpack_require__(/*! ./managers/guardManager */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/guardManager.js\"));\nconst moduleManager_1 = __importDefault(__webpack_require__(/*! ./managers/moduleManager */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/moduleManager.js\"));\nconst ownerManager_1 = __importDefault(__webpack_require__(/*! ./managers/ownerManager */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/ownerManager.js\"));\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/index.js\");\nconst utils_2 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst SafeTransaction_1 = __importDefault(__webpack_require__(/*! ./utils/transactions/SafeTransaction */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/SafeTransaction.js\"));\nconst utils_3 = __webpack_require__(/*! ./utils/transactions/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/utils.js\");\nconst types_2 = __webpack_require__(/*! ./utils/types */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/types.js\");\nconst safeDeploymentContracts_1 = __webpack_require__(/*! ./contracts/safeDeploymentContracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js\");\nconst SafeMessage_1 = __importDefault(__webpack_require__(/*! ./utils/messages/SafeMessage */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/messages/SafeMessage.js\"));\nconst satisfies_1 = __importDefault(__webpack_require__(/*! semver/functions/satisfies */ \"(ssr)/./node_modules/.pnpm/semver@7.6.2/node_modules/semver/functions/satisfies.js\"));\nconst SafeProvider_1 = __importDefault(__webpack_require__(/*! ./SafeProvider */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js\"));\nconst getPasskeyOwnerAddress_1 = __importDefault(__webpack_require__(/*! ./utils/passkeys/getPasskeyOwnerAddress */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/getPasskeyOwnerAddress.js\"));\nconst createPasskeyDeploymentTransaction_1 = __importDefault(__webpack_require__(/*! ./utils/passkeys/createPasskeyDeploymentTransaction */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/createPasskeyDeploymentTransaction.js\"));\nconst EQ_OR_GT_1_4_1 = '>=1.4.1';\nconst EQ_OR_GT_1_3_0 = '>=1.3.0';\nclass Safe {\n    constructor() {\n        _Safe_instances.add(this);\n        _Safe_predictedSafe.set(this, void 0);\n        _Safe_safeProvider.set(this, void 0);\n        _Safe_contractManager.set(this, void 0);\n        _Safe_ownerManager.set(this, void 0);\n        _Safe_moduleManager.set(this, void 0);\n        _Safe_guardManager.set(this, void 0);\n        _Safe_fallbackHandlerManager.set(this, void 0);\n        _Safe_MAGIC_VALUE.set(this, '0x1626ba7e');\n        _Safe_MAGIC_VALUE_BYTES.set(this, '0x20c13b0b'\n        /**\n         * Creates an instance of the Safe Core SDK.\n         * @param config - Ethers Safe configuration\n         * @returns The Safe Core SDK instance\n         * @throws \"The SDK must be initialized with a safeAddress or a predictedSafe\"\n         * @throws \"SafeProxy contract is not deployed on the current network\"\n         * @throws \"MultiSend contract is not deployed on the current network\"\n         * @throws \"MultiSendCallOnly contract is not deployed on the current network\"\n         */\n        );\n        /**\n         * Call the CompatibilityFallbackHandler getMessageHash method\n         *\n         * @param messageHash The hash of the message\n         * @returns Returns the Safe message hash to be signed\n         * @link https://github.com/safe-global/safe-contracts/blob/8ffae95faa815acf86ec8b50021ebe9f96abde10/contracts/handler/CompatibilityFallbackHandler.sol#L26-L28\n         */\n        this.getSafeMessageHash = async (messageHash) => {\n            const safeAddress = await this.getAddress();\n            const safeVersion = await this.getContractVersion();\n            const chainId = await this.getChainId();\n            return (0, utils_2.calculateSafeMessageHash)(safeAddress, messageHash, safeVersion, chainId);\n        };\n        /**\n         * Call the CompatibilityFallbackHandler isValidSignature method\n         *\n         * @param messageHash The hash of the message\n         * @param signature The signature to be validated or '0x'. You can send as signature one of the following:\n         *  1) An array of SafeSignature. In this case the signatures are concatenated for validation (buildSignatureBytes())\n         *  2) The concatenated signatures as string\n         *  3) '0x' if you want to validate an onchain message (Approved hash)\n         * @returns A boolean indicating if the signature is valid\n         * @link https://github.com/safe-global/safe-contracts/blob/main/contracts/handler/CompatibilityFallbackHandler.sol\n         */\n        this.isValidSignature = async (messageHash, signature = '0x') => {\n            const safeAddress = await this.getAddress();\n            const fallbackHandler = await __classPrivateFieldGet(this, _Safe_instances, \"m\", _Safe_getFallbackHandlerContract).call(this);\n            const signatureToCheck = signature && Array.isArray(signature) ? (0, utils_2.buildSignatureBytes)(signature) : signature;\n            // @ts-expect-error Argument of type isValidSignature(bytes32,bytes) is not assignable to parameter of type isValidSignature\n            const data = fallbackHandler.encode('isValidSignature(bytes32,bytes)', [\n                messageHash,\n                signatureToCheck\n            ]);\n            // @ts-expect-error Argument of type isValidSignature(bytes32,bytes) is not assignable to parameter of type isValidSignature\n            const bytesData = fallbackHandler.encode('isValidSignature(bytes,bytes)', [\n                messageHash,\n                signatureToCheck\n            ]);\n            try {\n                const isValidSignatureResponse = await Promise.all([\n                    __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").call({\n                        from: safeAddress,\n                        to: safeAddress,\n                        data: data\n                    }),\n                    __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").call({\n                        from: safeAddress,\n                        to: safeAddress,\n                        data: bytesData\n                    })\n                ]);\n                return (!!isValidSignatureResponse.length &&\n                    (isValidSignatureResponse[0].slice(0, 10).toLowerCase() === __classPrivateFieldGet(this, _Safe_MAGIC_VALUE, \"f\") ||\n                        isValidSignatureResponse[1].slice(0, 10).toLowerCase() === __classPrivateFieldGet(this, _Safe_MAGIC_VALUE_BYTES, \"f\")));\n            }\n            catch (error) {\n                return false;\n            }\n        };\n    }\n    /**\n     * Creates an instance of the Safe Core SDK.\n     * @param config - Ethers Safe configuration\n     * @returns The Safe Core SDK instance\n     * @throws \"The SDK must be initialized with a safeAddress or a predictedSafe\"\n     * @throws \"SafeProxy contract is not deployed on the current network\"\n     * @throws \"MultiSend contract is not deployed on the current network\"\n     * @throws \"MultiSendCallOnly contract is not deployed on the current network\"\n     */\n    static async init(config) {\n        const protocolKit = new Safe();\n        await __classPrivateFieldGet(protocolKit, _Safe_instances, \"m\", _Safe_initializeProtocolKit).call(protocolKit, config);\n        return protocolKit;\n    }\n    /**\n     * Returns a new instance of the Safe Core SDK.\n     * @param config - Connect Safe configuration\n     * @throws \"A safeAddress and a predictedSafe cannot be connected at the same time\"\n     * @throws \"SafeProxy contract is not deployed on the current network\"\n     * @throws \"MultiSend contract is not deployed on the current network\"\n     * @throws \"MultiSendCallOnly contract is not deployed on the current network\"\n     */\n    async connect(config) {\n        const { provider, signer, safeAddress, predictedSafe, isL1SafeSingleton, contractNetworks } = config;\n        const configProps = {\n            provider: provider || __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").provider,\n            signer,\n            isL1SafeSingleton: isL1SafeSingleton || __classPrivateFieldGet(this, _Safe_contractManager, \"f\").isL1SafeSingleton,\n            contractNetworks: contractNetworks || __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks\n        };\n        // A new existing Safe is connected to the Signer\n        if (safeAddress) {\n            return await Safe.init({\n                safeAddress,\n                ...configProps\n            });\n        }\n        // A new predicted Safe is connected to the Signer\n        if (predictedSafe) {\n            return await Safe.init({\n                predictedSafe,\n                ...configProps\n            });\n        }\n        // The previous predicted Safe is connected to a new Signer\n        if (__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")) {\n            return await Safe.init({\n                predictedSafe: __classPrivateFieldGet(this, _Safe_predictedSafe, \"f\"),\n                ...configProps\n            });\n        }\n        // The previous existing Safe is connected to a new Signer\n        return await Safe.init({\n            safeAddress: await this.getAddress(),\n            ...configProps\n        });\n    }\n    /**\n     * Returns the initialization code to deploy a Safe account based on the predicted address.\n     *\n     * @returns The Safe configuration\n     */\n    async getInitCode() {\n        if (!__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")) {\n            throw new Error('The Safe already exists');\n        }\n        const chainId = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getChainId();\n        return (0, utils_1.getPredictedSafeAddressInitCode)({\n            safeProvider: __classPrivateFieldGet(this, _Safe_safeProvider, \"f\"),\n            chainId,\n            customContracts: __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks?.[chainId.toString()],\n            ...__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")\n        });\n    }\n    /**\n     * Returns the predicted Safe configuration.\n     * @returns {PredictedSafeProps | undefined} The predicted Safe configuration\n     */\n    getPredictedSafe() {\n        return __classPrivateFieldGet(this, _Safe_predictedSafe, \"f\");\n    }\n    /**\n     * Returns the address of the current SafeProxy contract.\n     *\n     * @returns The address of the SafeProxy contract\n     */\n    async getAddress() {\n        if (__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")) {\n            const safeVersion = await this.getContractVersion();\n            if (!(0, utils_2.hasSafeFeature)(utils_2.SAFE_FEATURES.ACCOUNT_ABSTRACTION, safeVersion)) {\n                throw new Error('Account Abstraction functionality is not available for Safes with version lower than v1.3.0');\n            }\n            const chainId = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getChainId();\n            return (0, utils_1.predictSafeAddress)({\n                safeProvider: __classPrivateFieldGet(this, _Safe_safeProvider, \"f\"),\n                chainId,\n                customContracts: __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks?.[chainId.toString()],\n                ...__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")\n            });\n        }\n        if (!__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n            throw new Error('Safe is not deployed');\n        }\n        return await __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract.getAddress();\n    }\n    /**\n     * Returns the ContractManager\n     *\n     * @returns The current ContractManager\n     * */\n    getContractManager() {\n        return __classPrivateFieldGet(this, _Safe_contractManager, \"f\");\n    }\n    /**\n     * Returns the current SafeProvider.\n     *\n     * @returns The current SafeProvider\n     */\n    getSafeProvider() {\n        return __classPrivateFieldGet(this, _Safe_safeProvider, \"f\");\n    }\n    /**\n     * Returns the address of the MultiSend contract.\n     *\n     * @returns The address of the MultiSend contract\n     */\n    async getMultiSendAddress() {\n        return await __classPrivateFieldGet(this, _Safe_contractManager, \"f\").multiSendContract.getAddress();\n    }\n    /**\n     * Returns the address of the MultiSendCallOnly contract.\n     *\n     * @returns The address of the MultiSendCallOnly contract\n     */\n    async getMultiSendCallOnlyAddress() {\n        return await __classPrivateFieldGet(this, _Safe_contractManager, \"f\").multiSendCallOnlyContract.getAddress();\n    }\n    /**\n     * Checks if the current Safe is deployed.\n     *\n     * @returns TRUE if the Safe contract is deployed\n     */\n    async isSafeDeployed() {\n        const safeAddress = await this.getAddress();\n        const isSafeDeployed = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").isContractDeployed(safeAddress);\n        return isSafeDeployed;\n    }\n    /**\n     * Returns the Safe Singleton contract version.\n     *\n     * @returns The Safe Singleton contract version\n     */\n    async getContractVersion() {\n        if (__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n            return __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract.getVersion();\n        }\n        if (__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")?.safeDeploymentConfig?.safeVersion) {\n            return Promise.resolve(__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\").safeDeploymentConfig.safeVersion);\n        }\n        return Promise.resolve(config_1.DEFAULT_SAFE_VERSION);\n    }\n    /**\n     * Returns the list of Safe owner accounts.\n     *\n     * @returns The list of owners\n     */\n    async getOwners() {\n        if (__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")?.safeAccountConfig.owners) {\n            return Promise.resolve(__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\").safeAccountConfig.owners);\n        }\n        return __classPrivateFieldGet(this, _Safe_ownerManager, \"f\").getOwners();\n    }\n    /**\n     * Returns the Safe nonce.\n     *\n     * @returns The Safe nonce\n     */\n    async getNonce() {\n        if (!__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n            return Promise.resolve(0);\n        }\n        const nonce = await __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract.getNonce();\n        return Number(nonce);\n    }\n    /**\n     * Returns the Safe threshold.\n     *\n     * @returns The Safe threshold\n     */\n    async getThreshold() {\n        if (__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")?.safeAccountConfig.threshold) {\n            return Promise.resolve(__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\").safeAccountConfig.threshold);\n        }\n        return __classPrivateFieldGet(this, _Safe_ownerManager, \"f\").getThreshold();\n    }\n    /**\n     * Returns the chainId of the connected network.\n     *\n     * @returns The chainId of the connected network\n     */\n    async getChainId() {\n        return __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getChainId();\n    }\n    /**\n     * Returns the ETH balance of the Safe.\n     *\n     * @returns The ETH balance of the Safe\n     */\n    async getBalance() {\n        return __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getBalance(await this.getAddress());\n    }\n    /**\n     * Returns the address of the FallbackHandler contract.\n     *\n     * @returns The address of the FallbackHandler contract\n     */\n    getFallbackHandler() {\n        return __classPrivateFieldGet(this, _Safe_fallbackHandlerManager, \"f\").getFallbackHandler();\n    }\n    /**\n     * Returns the enabled Safe guard or 0x address if no guards are enabled.\n     *\n     * @returns The address of the enabled Safe guard\n     * @throws \"Current version of the Safe does not support Safe transaction guards functionality\"\n     */\n    async getGuard() {\n        return __classPrivateFieldGet(this, _Safe_guardManager, \"f\").getGuard();\n    }\n    /**\n     * Returns the list of addresses of all the enabled Safe modules.\n     *\n     * @returns The list of addresses of all the enabled Safe modules\n     */\n    async getModules() {\n        return __classPrivateFieldGet(this, _Safe_moduleManager, \"f\").getModules();\n    }\n    /**\n     * Returns the list of addresses of all the enabled Safe modules. The list will start on the next position address in relation to start.\n     *\n     * @param start - The address to be \"offsetted\" from the list, should be SENTINEL_ADDRESS otherwise.\n     * @param pageSize - The size of the page. It will be the max length of the returning array. Must be greater then 0.\n     * @returns The list of addresses of all the enabled Safe modules\n     */\n    async getModulesPaginated(start, pageSize = 10) {\n        return __classPrivateFieldGet(this, _Safe_moduleManager, \"f\").getModulesPaginated(start, pageSize);\n    }\n    /**\n     * Checks if a specific Safe module is enabled for the current Safe.\n     *\n     * @param moduleAddress - The desired module address\n     * @returns TRUE if the module is enabled\n     */\n    async isModuleEnabled(moduleAddress) {\n        return __classPrivateFieldGet(this, _Safe_moduleManager, \"f\").isModuleEnabled(moduleAddress);\n    }\n    /**\n     * Checks if a specific address is an owner of the current Safe.\n     *\n     * @param ownerAddress - The account address\n     * @returns TRUE if the account is an owner\n     */\n    async isOwner(ownerAddress) {\n        if (__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")?.safeAccountConfig.owners) {\n            return Promise.resolve(__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")?.safeAccountConfig.owners.some((owner) => (0, utils_2.sameString)(owner, ownerAddress)));\n        }\n        return __classPrivateFieldGet(this, _Safe_ownerManager, \"f\").isOwner(ownerAddress);\n    }\n    /**\n     * Returns a Safe transaction ready to be signed by the owners.\n     *\n     * @param createTransactionProps - The createTransaction props\n     * @returns The Safe transaction\n     * @throws \"Invalid empty array of transactions\"\n     */\n    async createTransaction({ transactions, onlyCalls = false, options }) {\n        const safeVersion = await this.getContractVersion();\n        if (__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\") && !(0, utils_2.hasSafeFeature)(utils_2.SAFE_FEATURES.ACCOUNT_ABSTRACTION, safeVersion)) {\n            throw new Error('Account Abstraction functionality is not available for Safes with version lower than v1.3.0');\n        }\n        if (transactions.length === 0) {\n            throw new Error('Invalid empty array of transactions');\n        }\n        let newTransaction;\n        if (transactions.length > 1) {\n            const multiSendContract = onlyCalls\n                ? __classPrivateFieldGet(this, _Safe_contractManager, \"f\").multiSendCallOnlyContract\n                : __classPrivateFieldGet(this, _Safe_contractManager, \"f\").multiSendContract;\n            const multiSendData = (0, utils_3.encodeMultiSendData)(transactions.map(utils_3.standardizeMetaTransactionData));\n            const multiSendTransaction = {\n                ...options,\n                to: await multiSendContract.getAddress(),\n                value: '0',\n                data: multiSendContract.encode('multiSend', [multiSendData]),\n                operation: safe_core_sdk_types_1.OperationType.DelegateCall\n            };\n            newTransaction = multiSendTransaction;\n        }\n        else {\n            newTransaction = { ...options, ...transactions[0] };\n        }\n        if (__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")) {\n            return new SafeTransaction_1.default(await (0, utils_3.standardizeSafeTransactionData)({\n                predictedSafe: __classPrivateFieldGet(this, _Safe_predictedSafe, \"f\"),\n                provider: __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").provider,\n                tx: newTransaction,\n                contractNetworks: __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks\n            }));\n        }\n        if (!__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n            throw new Error('Safe is not deployed');\n        }\n        return new SafeTransaction_1.default(await (0, utils_3.standardizeSafeTransactionData)({\n            safeContract: __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract,\n            provider: __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").provider,\n            tx: newTransaction,\n            contractNetworks: __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks\n        }));\n    }\n    /**\n     * Returns a Safe transaction ready to be signed by the owners that invalidates the pending Safe transaction/s with a specific nonce.\n     *\n     * @param nonce - The nonce of the transaction/s that are going to be rejected\n     * @returns The Safe transaction that invalidates the pending Safe transaction/s\n     */\n    async createRejectionTransaction(nonce) {\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: '0x'\n        };\n        const options = {\n            nonce,\n            safeTxGas: '0'\n        };\n        return this.createTransaction({ transactions: [safeTransactionData], options });\n    }\n    /**\n     * Copies a Safe transaction\n     *\n     * @param safeTransaction - The Safe transaction\n     * @returns The new Safe transaction\n     */\n    async copyTransaction(safeTransaction) {\n        const { to, value, data, operation, ...options } = safeTransaction.data;\n        const safeTransactionData = {\n            to,\n            value,\n            data,\n            operation\n        };\n        const signedSafeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        safeTransaction.signatures.forEach((signature) => {\n            signedSafeTransaction.addSignature(signature);\n        });\n        return signedSafeTransaction;\n    }\n    /**\n     * Returns the transaction hash of a Safe transaction.\n     *\n     * @param safeTransaction - The Safe transaction\n     * @returns The hash of the Safe transaction\n     */\n    async getTransactionHash(safeTransaction) {\n        const safeAddress = await this.getAddress();\n        const safeVersion = await this.getContractVersion();\n        const chainId = await this.getChainId();\n        return (0, utils_2.calculateSafeTransactionHash)(safeAddress, safeTransaction.data, safeVersion, chainId);\n    }\n    /**\n     * Signs a hash using the current signer account.\n     *\n     * @param hash - The hash to sign\n     * @returns The Safe signature\n     */\n    async signHash(hash) {\n        const isPasskeySigner = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").isPasskeySigner();\n        const signerAddress = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getSignerAddress();\n        if (isPasskeySigner && signerAddress) {\n            let signature = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").signMessage(hash);\n            signature = (0, utils_2.adjustVInSignature)(types_1.SigningMethod.ETH_SIGN, signature, hash, signerAddress);\n            const safeSignature = new utils_2.EthSafeSignature(signerAddress, signature, true);\n            return safeSignature;\n        }\n        const signature = await (0, utils_2.generateSignature)(__classPrivateFieldGet(this, _Safe_safeProvider, \"f\"), hash);\n        return signature;\n    }\n    /**\n     * Returns a Safe message ready to be signed by the owners.\n     *\n     * @param message - The message\n     * @returns The Safe message\n     */\n    createMessage(message) {\n        return new SafeMessage_1.default(message);\n    }\n    /**\n     * Returns the Safe message with a new signature\n     *\n     * @param message The message to be signed\n     * @param signingMethod The signature type\n     * @param preimageSafeAddress If the preimage is required, the address of the Safe that will be used to calculate the preimage.\n     * This field is mandatory for 1.4.1 contract versions Because the safe uses the old EIP-1271 interface which uses `bytes` instead of `bytes32` for the message\n     * we need to use the pre-image of the message to calculate the message hash\n     * https://github.com/safe-global/safe-contracts/blob/192c7dc67290940fcbc75165522bb86a37187069/test/core/Safe.Signatures.spec.ts#L229-L233\n     * @returns The signed Safe message\n     */\n    async signMessage(message, signingMethod = types_1.SigningMethod.ETH_SIGN_TYPED_DATA_V4, preimageSafeAddress) {\n        const owners = await this.getOwners();\n        const signerAddress = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getSignerAddress();\n        if (!signerAddress) {\n            throw new Error('SafeProvider must be initialized with a signer to use this method');\n        }\n        const addressIsOwner = owners.some((owner) => signerAddress && (0, utils_2.sameString)(owner, signerAddress));\n        if (!addressIsOwner) {\n            throw new Error('Messages can only be signed by Safe owners');\n        }\n        const safeVersion = await this.getContractVersion();\n        if (signingMethod === types_1.SigningMethod.SAFE_SIGNATURE &&\n            (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_4_1) &&\n            !preimageSafeAddress) {\n            throw new Error('The parent Safe account address is mandatory for contract signatures');\n        }\n        let signature;\n        if (signingMethod === types_1.SigningMethod.ETH_SIGN_TYPED_DATA_V4) {\n            signature = await this.signTypedData(message, 'v4');\n        }\n        else if (signingMethod === types_1.SigningMethod.ETH_SIGN_TYPED_DATA_V3) {\n            signature = await this.signTypedData(message, 'v3');\n        }\n        else if (signingMethod === types_1.SigningMethod.ETH_SIGN_TYPED_DATA) {\n            signature = await this.signTypedData(message, undefined);\n        }\n        else {\n            const chainId = await this.getChainId();\n            if (!(0, utils_2.hasSafeFeature)(utils_2.SAFE_FEATURES.ETH_SIGN, safeVersion)) {\n                throw new Error('eth_sign is only supported by Safes >= v1.1.0');\n            }\n            let safeMessageHash;\n            if (signingMethod === types_1.SigningMethod.SAFE_SIGNATURE &&\n                preimageSafeAddress &&\n                (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_4_1)) {\n                const messageHashData = (0, utils_2.preimageSafeMessageHash)(preimageSafeAddress, (0, utils_2.hashSafeMessage)(message.data), safeVersion, chainId);\n                safeMessageHash = await this.getSafeMessageHash(messageHashData);\n            }\n            else {\n                safeMessageHash = await this.getSafeMessageHash((0, utils_2.hashSafeMessage)(message.data));\n            }\n            signature = await this.signHash(safeMessageHash);\n        }\n        const signedSafeMessage = this.createMessage(message.data);\n        message.signatures.forEach((signature) => {\n            signedSafeMessage.addSignature(signature);\n        });\n        signedSafeMessage.addSignature(signature);\n        return signedSafeMessage;\n    }\n    /**\n     * Signs a transaction according to the EIP-712 using the current signer account.\n     *\n     * @param eip712Data - The Safe Transaction or message hash to be signed\n     * @param methodVersion - EIP-712 version. Optional\n     * @returns The Safe signature\n     */\n    async signTypedData(eip712Data, methodVersion) {\n        const safeEIP712Args = {\n            safeAddress: await this.getAddress(),\n            safeVersion: await this.getContractVersion(),\n            chainId: await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getChainId(),\n            data: eip712Data.data\n        };\n        return (0, utils_2.generateEIP712Signature)(__classPrivateFieldGet(this, _Safe_safeProvider, \"f\"), safeEIP712Args, methodVersion);\n    }\n    /**\n     * Adds the signature of the current signer to the Safe transaction object.\n     *\n     * @param safeTransaction - The Safe transaction to be signed\n     * @param signingMethod - Method followed to sign a transaction. Optional. Default value is \"eth_sign\"\n     * @param preimageSafeAddress - If the preimage is required, the address of the Safe that will be used to calculate the preimage\n     * This field is mandatory for 1.3.0 and 1.4.1 contract versions Because the safe uses the old EIP-1271 interface which uses `bytes` instead of `bytes32` for the message\n     * we need to use the pre-image of the message to calculate the message hash\n     * https://github.com/safe-global/safe-contracts/blob/192c7dc67290940fcbc75165522bb86a37187069/test/core/Safe.Signatures.spec.ts#L229-L233\n     * @returns The signed Safe transaction\n     * @throws \"Transactions can only be signed by Safe owners\"\n     */\n    async signTransaction(safeTransaction, signingMethod = types_1.SigningMethod.ETH_SIGN_TYPED_DATA_V4, preimageSafeAddress) {\n        const transaction = (0, utils_2.isSafeMultisigTransactionResponse)(safeTransaction)\n            ? await this.toSafeTransactionType(safeTransaction)\n            : safeTransaction;\n        const owners = await this.getOwners();\n        const signerAddress = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getSignerAddress();\n        if (!signerAddress) {\n            throw new Error('SafeProvider must be initialized with a signer to use this method');\n        }\n        const addressIsOwner = owners.some((owner) => signerAddress && (0, utils_2.sameString)(owner, signerAddress));\n        if (!addressIsOwner) {\n            throw new Error('Transactions can only be signed by Safe owners');\n        }\n        const safeVersion = await this.getContractVersion();\n        if (signingMethod === types_1.SigningMethod.SAFE_SIGNATURE &&\n            (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_3_0) &&\n            !preimageSafeAddress) {\n            throw new Error('The parent Safe account address is mandatory for contract signatures');\n        }\n        let signature;\n        const isPasskeySigner = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").isPasskeySigner();\n        if (isPasskeySigner) {\n            const txHash = await this.getTransactionHash(transaction);\n            signature = await this.signHash(txHash);\n        }\n        else if (signingMethod === types_1.SigningMethod.ETH_SIGN_TYPED_DATA_V4) {\n            signature = await this.signTypedData(transaction, 'v4');\n        }\n        else if (signingMethod === types_1.SigningMethod.ETH_SIGN_TYPED_DATA_V3) {\n            signature = await this.signTypedData(transaction, 'v3');\n        }\n        else if (signingMethod === types_1.SigningMethod.ETH_SIGN_TYPED_DATA) {\n            signature = await this.signTypedData(transaction, undefined);\n        }\n        else {\n            const safeVersion = await this.getContractVersion();\n            const chainId = await this.getChainId();\n            if (!(0, utils_2.hasSafeFeature)(utils_2.SAFE_FEATURES.ETH_SIGN, safeVersion)) {\n                throw new Error('eth_sign is only supported by Safes >= v1.1.0');\n            }\n            let txHash;\n            // IMPORTANT: because the safe uses the old EIP-1271 interface which uses `bytes` instead of `bytes32` for the message\n            // we need to use the pre-image of the transaction hash to calculate the message hash\n            // https://github.com/safe-global/safe-contracts/blob/192c7dc67290940fcbc75165522bb86a37187069/test/core/Safe.Signatures.spec.ts#L229-L233\n            if (signingMethod === types_1.SigningMethod.SAFE_SIGNATURE &&\n                (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_3_0) &&\n                preimageSafeAddress) {\n                const txHashData = (0, utils_2.preimageSafeTransactionHash)(preimageSafeAddress, safeTransaction.data, safeVersion, chainId);\n                txHash = await this.getSafeMessageHash(txHashData);\n            }\n            else {\n                txHash = await this.getTransactionHash(transaction);\n            }\n            signature = await this.signHash(txHash);\n        }\n        const signedSafeTransaction = await this.copyTransaction(transaction);\n        signedSafeTransaction.addSignature(signature);\n        return signedSafeTransaction;\n    }\n    /**\n     * Approves on-chain a hash using the current signer account.\n     *\n     * @param hash - The hash to approve\n     * @param options - The Safe transaction execution options. Optional\n     * @returns The Safe transaction response\n     * @throws \"Transaction hashes can only be approved by Safe owners\"\n     * @throws \"Cannot specify gas and gasLimit together in transaction options\"\n     */\n    async approveTransactionHash(hash, options) {\n        if (!__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n            throw new Error('Safe is not deployed');\n        }\n        const owners = await this.getOwners();\n        const signerAddress = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getSignerAddress();\n        if (!signerAddress) {\n            throw new Error('SafeProvider must be initialized with a signer to use this method');\n        }\n        const addressIsOwner = owners.some((owner) => signerAddress && (0, utils_2.sameString)(owner, signerAddress));\n        if (!addressIsOwner) {\n            throw new Error('Transaction hashes can only be approved by Safe owners');\n        }\n        return __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract.approveHash(hash, {\n            from: signerAddress,\n            ...options\n        });\n    }\n    /**\n     * Returns a list of owners who have approved a specific Safe transaction.\n     *\n     * @param txHash - The Safe transaction hash\n     * @returns The list of owners\n     */\n    async getOwnersWhoApprovedTx(txHash) {\n        if (!__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n            throw new Error('Safe is not deployed');\n        }\n        const owners = await this.getOwners();\n        const ownersWhoApproved = [];\n        for (const owner of owners) {\n            const [approved] = await __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract.approvedHashes([owner, txHash]);\n            if (approved > 0) {\n                ownersWhoApproved.push(owner);\n            }\n        }\n        return ownersWhoApproved;\n    }\n    /**\n     * Returns the Safe transaction to enable the fallback handler.\n     *\n     * @param address - The new fallback handler address\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"Invalid fallback handler address provided\"\n     * @throws \"Fallback handler provided is already enabled\"\n     * @throws \"Current version of the Safe does not support the fallback handler functionality\"\n     */\n    async createEnableFallbackHandlerTx(fallbackHandlerAddress, options) {\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_fallbackHandlerManager, \"f\").encodeEnableFallbackHandlerData(fallbackHandlerAddress)\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to disable the fallback handler.\n     *\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"There is no fallback handler enabled yet\"\n     * @throws \"Current version of the Safe does not support the fallback handler functionality\"\n     */\n    async createDisableFallbackHandlerTx(options) {\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_fallbackHandlerManager, \"f\").encodeDisableFallbackHandlerData()\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to enable a Safe guard.\n     *\n     * @param guardAddress - The desired guard address\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"Invalid guard address provided\"\n     * @throws \"Guard provided is already enabled\"\n     * @throws \"Current version of the Safe does not support Safe transaction guards functionality\"\n     */\n    async createEnableGuardTx(guardAddress, options) {\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_guardManager, \"f\").encodeEnableGuardData(guardAddress)\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to disable a Safe guard.\n     *\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"There is no guard enabled yet\"\n     * @throws \"Current version of the Safe does not support Safe transaction guards functionality\"\n     */\n    async createDisableGuardTx(options) {\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_guardManager, \"f\").encodeDisableGuardData()\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to enable a Safe module.\n     *\n     * @param moduleAddress - The desired module address\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"Invalid module address provided\"\n     * @throws \"Module provided is already enabled\"\n     */\n    async createEnableModuleTx(moduleAddress, options) {\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_moduleManager, \"f\").encodeEnableModuleData(moduleAddress)\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to disable a Safe module.\n     *\n     * @param moduleAddress - The desired module address\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"Invalid module address provided\"\n     * @throws \"Module provided is not enabled already\"\n     */\n    async createDisableModuleTx(moduleAddress, options) {\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_moduleManager, \"f\").encodeDisableModuleData(moduleAddress)\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to add an owner and optionally change the threshold.\n     *\n     * @param params - The transaction params\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"Invalid owner address provided\"\n     * @throws \"Address provided is already an owner\"\n     * @throws \"Threshold needs to be greater than 0\"\n     * @throws \"Threshold cannot exceed owner count\"\n     */\n    async createAddOwnerTx(params, options) {\n        const isPasskey = (0, utils_3.isPasskeyParam)(params);\n        const ownerAddress = isPasskey\n            ? await (0, getPasskeyOwnerAddress_1.default)(this, params.passkey)\n            : params.ownerAddress;\n        const { threshold } = params;\n        const addOwnerTransaction = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_ownerManager, \"f\").encodeAddOwnerWithThresholdData(ownerAddress, threshold)\n        };\n        const transactions = [addOwnerTransaction];\n        // The passkey Signer is a contract compliant with EIP-1271 standards, we need to check if it has been deployed.\n        if (isPasskey && !(await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").isContractDeployed(ownerAddress))) {\n            // If it has not been deployed, we need to create a batch that includes both the Signer contract deployment and the addOwner transaction\n            const passkeyDeploymentTransaction = await (0, createPasskeyDeploymentTransaction_1.default)(this, params.passkey);\n            transactions.push(passkeyDeploymentTransaction);\n        }\n        const safeTransaction = await this.createTransaction({\n            transactions,\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to remove an owner and optionally change the threshold.\n     *\n     * @param params - The transaction params\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"Invalid owner address provided\"\n     * @throws \"Address provided is not an owner\"\n     * @throws \"Threshold needs to be greater than 0\"\n     * @throws \"Threshold cannot exceed owner count\"\n     */\n    async createRemoveOwnerTx(params, options) {\n        const { threshold } = params;\n        const isPasskey = (0, utils_3.isPasskeyParam)(params);\n        const ownerAddress = isPasskey\n            ? await (0, getPasskeyOwnerAddress_1.default)(this, params.passkey)\n            : params.ownerAddress;\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_ownerManager, \"f\").encodeRemoveOwnerData(ownerAddress, threshold)\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to replace an owner of the Safe with a new one.\n     *\n     * @param params - The transaction params\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"Invalid new owner address provided\"\n     * @throws \"Invalid old owner address provided\"\n     * @throws \"New address provided is already an owner\"\n     * @throws \"Old address provided is not an owner\"\n     */\n    async createSwapOwnerTx(params, options) {\n        const oldOwnerAddress = (0, utils_3.isOldOwnerPasskey)(params)\n            ? await (0, getPasskeyOwnerAddress_1.default)(this, params.oldOwnerPasskey)\n            : params.oldOwnerAddress;\n        const newOwnerAddress = (0, utils_3.isNewOwnerPasskey)(params)\n            ? await (0, getPasskeyOwnerAddress_1.default)(this, params.newOwnerPasskey)\n            : params.newOwnerAddress;\n        const swapOwnerTransaction = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_ownerManager, \"f\").encodeSwapOwnerData(oldOwnerAddress, newOwnerAddress)\n        };\n        const transactions = [swapOwnerTransaction];\n        // The passkey Signer is a contract compliant with EIP-1271 standards, we need to check if it has been deployed.\n        if ((0, utils_3.isNewOwnerPasskey)(params) &&\n            !(await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").isContractDeployed(newOwnerAddress))) {\n            // If it has not been deployed, we need to create a batch that includes both the Signer contract deployment and the addOwner transaction\n            const passkeyDeploymentTransaction = await (0, createPasskeyDeploymentTransaction_1.default)(this, params.newOwnerPasskey);\n            transactions.push(passkeyDeploymentTransaction);\n        }\n        const safeTransaction = await this.createTransaction({\n            transactions,\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Returns the Safe transaction to change the threshold.\n     *\n     * @param threshold - The new threshold\n     * @param options - The transaction optional properties\n     * @returns The Safe transaction ready to be signed\n     * @throws \"Threshold needs to be greater than 0\"\n     * @throws \"Threshold cannot exceed owner count\"\n     */\n    async createChangeThresholdTx(threshold, options) {\n        const safeTransactionData = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await __classPrivateFieldGet(this, _Safe_ownerManager, \"f\").encodeChangeThresholdData(threshold)\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        return safeTransaction;\n    }\n    /**\n     * Converts a transaction from type SafeMultisigTransactionResponse to type SafeTransaction\n     *\n     * @param serviceTransactionResponse - The transaction to convert\n     * @returns The converted transaction with type SafeTransaction\n     */\n    async toSafeTransactionType(serviceTransactionResponse) {\n        const safeTransactionData = {\n            to: serviceTransactionResponse.to,\n            value: serviceTransactionResponse.value,\n            data: serviceTransactionResponse.data || '0x',\n            operation: serviceTransactionResponse.operation\n        };\n        const options = {\n            safeTxGas: serviceTransactionResponse.safeTxGas.toString(),\n            baseGas: serviceTransactionResponse.baseGas.toString(),\n            gasPrice: serviceTransactionResponse.gasPrice,\n            gasToken: serviceTransactionResponse.gasToken,\n            refundReceiver: serviceTransactionResponse.refundReceiver,\n            nonce: serviceTransactionResponse.nonce\n        };\n        const safeTransaction = await this.createTransaction({\n            transactions: [safeTransactionData],\n            options\n        });\n        serviceTransactionResponse.confirmations?.map((confirmation) => {\n            const signature = new utils_2.EthSafeSignature(confirmation.owner, confirmation.signature);\n            safeTransaction.addSignature(signature);\n        });\n        return safeTransaction;\n    }\n    /**\n     * Checks if a Safe transaction can be executed successfully with no errors.\n     *\n     * @param safeTransaction - The Safe transaction to check\n     * @param options - The Safe transaction execution options. Optional\n     * @returns TRUE if the Safe transaction can be executed successfully with no errors\n     */\n    async isValidTransaction(safeTransaction, options) {\n        if (!__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n            throw new Error('Safe is not deployed');\n        }\n        const transaction = (0, utils_2.isSafeMultisigTransactionResponse)(safeTransaction)\n            ? await this.toSafeTransactionType(safeTransaction)\n            : safeTransaction;\n        const signedSafeTransaction = await this.copyTransaction(transaction);\n        const txHash = await this.getTransactionHash(signedSafeTransaction);\n        const ownersWhoApprovedTx = await this.getOwnersWhoApprovedTx(txHash);\n        for (const owner of ownersWhoApprovedTx) {\n            signedSafeTransaction.addSignature((0, utils_2.generatePreValidatedSignature)(owner));\n        }\n        const owners = await this.getOwners();\n        const signerAddress = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getSignerAddress();\n        if (!signerAddress) {\n            throw new Error('SafeProvider must be initialized with a signer to use this method');\n        }\n        if (owners.includes(signerAddress)) {\n            signedSafeTransaction.addSignature((0, utils_2.generatePreValidatedSignature)(signerAddress));\n        }\n        const isTxValid = await __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract.isValidTransaction(signedSafeTransaction, {\n            from: signerAddress,\n            ...options\n        });\n        return isTxValid;\n    }\n    /**\n     * Executes a Safe transaction.\n     *\n     * @param safeTransaction - The Safe transaction to execute\n     * @param options - The Safe transaction execution options. Optional\n     * @returns The Safe transaction response\n     * @throws \"No signer provided\"\n     * @throws \"There are X signatures missing\"\n     * @throws \"Cannot specify gas and gasLimit together in transaction options\"\n     */\n    async executeTransaction(safeTransaction, options) {\n        if (!__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n            throw new Error('Safe is not deployed');\n        }\n        const transaction = (0, utils_2.isSafeMultisigTransactionResponse)(safeTransaction)\n            ? await this.toSafeTransactionType(safeTransaction)\n            : safeTransaction;\n        const signedSafeTransaction = await this.copyTransaction(transaction);\n        const txHash = await this.getTransactionHash(signedSafeTransaction);\n        const ownersWhoApprovedTx = await this.getOwnersWhoApprovedTx(txHash);\n        for (const owner of ownersWhoApprovedTx) {\n            signedSafeTransaction.addSignature((0, utils_2.generatePreValidatedSignature)(owner));\n        }\n        const owners = await this.getOwners();\n        const threshold = await this.getThreshold();\n        const signerAddress = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getSignerAddress();\n        if (threshold > signedSafeTransaction.signatures.size &&\n            signerAddress &&\n            owners.includes(signerAddress)) {\n            signedSafeTransaction.addSignature((0, utils_2.generatePreValidatedSignature)(signerAddress));\n        }\n        if (threshold > signedSafeTransaction.signatures.size) {\n            const signaturesMissing = threshold - signedSafeTransaction.signatures.size;\n            throw new Error(`There ${signaturesMissing > 1 ? 'are' : 'is'} ${signaturesMissing} signature${signaturesMissing > 1 ? 's' : ''} missing`);\n        }\n        const value = BigInt(signedSafeTransaction.data.value);\n        if (value !== 0n) {\n            const balance = await this.getBalance();\n            if (value > balance) {\n                throw new Error('Not enough Ether funds');\n            }\n        }\n        const txResponse = await __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract.execTransaction(signedSafeTransaction, {\n            from: signerAddress,\n            ...options\n        });\n        return txResponse;\n    }\n    /**\n     * Returns the Safe Transaction encoded\n     *\n     * @async\n     * @param {SafeTransaction} safeTransaction - The Safe transaction to be encoded.\n     * @returns {Promise<string>} The encoded transaction\n     *\n     */\n    async getEncodedTransaction(safeTransaction) {\n        const safeVersion = await this.getContractVersion();\n        const chainId = await this.getChainId();\n        const customContracts = __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks?.[chainId.toString()];\n        const isL1SafeSingleton = __classPrivateFieldGet(this, _Safe_contractManager, \"f\").isL1SafeSingleton;\n        const safeSingletonContract = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getSafeContract({\n            safeVersion,\n            isL1SafeSingleton,\n            customContractAbi: customContracts?.safeSingletonAbi,\n            customContractAddress: customContracts?.safeSingletonAddress\n        });\n        const encodedTransaction = safeSingletonContract.encode('execTransaction', [\n            safeTransaction.data.to,\n            safeTransaction.data.value,\n            safeTransaction.data.data,\n            safeTransaction.data.operation,\n            safeTransaction.data.safeTxGas,\n            safeTransaction.data.baseGas,\n            safeTransaction.data.gasPrice,\n            safeTransaction.data.gasToken,\n            safeTransaction.data.refundReceiver,\n            safeTransaction.encodedSignatures()\n        ]);\n        return encodedTransaction;\n    }\n    /**\n     * Wraps a Safe transaction into a Safe deployment batch.\n     *\n     * This function creates a transaction batch of 2 transactions, which includes the\n     * deployment of the Safe and the provided Safe transaction.\n     *\n     * @async\n     * @param {SafeTransaction} safeTransaction - The Safe transaction to be wrapped into the deployment batch.\n     * @param {TransactionOptions} [transactionOptions] - Optional. Options for the transaction, such as from, gas price, gas limit, etc.\n     * @param {string} [customSaltNonce] - Optional. a Custom salt nonce to be used for the deployment of the Safe. If not provided, a default value is used.\n     * @returns {Promise<Transaction>} A promise that resolves to a Transaction object representing the prepared batch of transactions.\n     * @throws Will throw an error if the safe is already deployed.\n     *\n     */\n    async wrapSafeTransactionIntoDeploymentBatch(safeTransaction, transactionOptions, customSaltNonce) {\n        const isSafeDeployed = await this.isSafeDeployed();\n        // if the safe is already deployed throws an error\n        if (isSafeDeployed) {\n            throw new Error('Safe already deployed');\n        }\n        // we create the deployment transaction\n        const safeDeploymentTransaction = await this.createSafeDeploymentTransaction(customSaltNonce);\n        // First transaction of the batch: The Safe deployment Transaction\n        const safeDeploymentBatchTransaction = {\n            to: safeDeploymentTransaction.to,\n            value: safeDeploymentTransaction.value,\n            data: safeDeploymentTransaction.data,\n            operation: safe_core_sdk_types_1.OperationType.Call\n        };\n        // Second transaction of the batch: The Safe Transaction\n        const safeBatchTransaction = {\n            to: await this.getAddress(),\n            value: '0',\n            data: await this.getEncodedTransaction(safeTransaction),\n            operation: safe_core_sdk_types_1.OperationType.Call\n        };\n        // transactions for the batch\n        const transactions = [safeDeploymentBatchTransaction, safeBatchTransaction];\n        // this is the transaction with the batch\n        const safeDeploymentBatch = await this.createTransactionBatch(transactions, transactionOptions);\n        return safeDeploymentBatch;\n    }\n    /**\n     * Creates a Safe deployment transaction.\n     *\n     * This function prepares a transaction for the deployment of a Safe.\n     * Both the saltNonce and options parameters are optional, and if not\n     * provided, default values will be used.\n     *\n     * @async\n     * @param {string} [customSaltNonce] - Optional. a Custom salt nonce to be used for the deployment of the Safe. If not provided, a default value is used.\n     * @param {TransactionOptions} [options] - Optional. Options for the transaction, such as gas price, gas limit, etc.\n     * @returns {Promise<Transaction>} A promise that resolves to a Transaction object representing the prepared Safe deployment transaction.\n     *\n     */\n    async createSafeDeploymentTransaction(customSaltNonce, transactionOptions) {\n        if (!__classPrivateFieldGet(this, _Safe_predictedSafe, \"f\")) {\n            throw new Error('Predict Safe should be present');\n        }\n        const { safeAccountConfig, safeDeploymentConfig } = __classPrivateFieldGet(this, _Safe_predictedSafe, \"f\");\n        const safeVersion = await this.getContractVersion();\n        const safeProvider = __classPrivateFieldGet(this, _Safe_safeProvider, \"f\");\n        const chainId = await safeProvider.getChainId();\n        const isL1SafeSingleton = __classPrivateFieldGet(this, _Safe_contractManager, \"f\").isL1SafeSingleton;\n        const customContracts = __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks?.[chainId.toString()];\n        const safeSingletonContract = await safeProvider.getSafeContract({\n            safeVersion,\n            isL1SafeSingleton,\n            customContractAddress: customContracts?.safeSingletonAddress,\n            customContractAbi: customContracts?.safeSingletonAbi\n        });\n        // we use the SafeProxyFactory.sol contract, see: https://github.com/safe-global/safe-contracts/blob/main/contracts/proxies/SafeProxyFactory.sol\n        const safeProxyFactoryContract = await (0, safeDeploymentContracts_1.getProxyFactoryContract)({\n            safeProvider,\n            safeVersion,\n            customContracts\n        });\n        // this is the call to the setup method that sets the threshold & owners of the new Safe, see: https://github.com/safe-global/safe-contracts/blob/main/contracts/Safe.sol#L95\n        const initializer = await (0, utils_1.encodeSetupCallData)({\n            safeProvider,\n            safeContract: safeSingletonContract,\n            safeAccountConfig: safeAccountConfig,\n            customContracts\n        });\n        const saltNonce = customSaltNonce ||\n            safeDeploymentConfig?.saltNonce ||\n            (0, utils_1.getChainSpecificDefaultSaltNonce)(chainId);\n        const safeDeployTransactionData = {\n            ...transactionOptions, // optional transaction options like from, gasLimit, gasPrice...\n            to: await safeProxyFactoryContract.getAddress(),\n            value: '0',\n            // we use the createProxyWithNonce method to create the Safe in a deterministic address, see: https://github.com/safe-global/safe-contracts/blob/main/contracts/proxies/SafeProxyFactory.sol#L52\n            data: safeProxyFactoryContract.encode('createProxyWithNonce', [\n                await safeSingletonContract.getAddress(),\n                initializer, // call to the setup method to set the threshold & owners of the new Safe\n                BigInt(saltNonce)\n            ])\n        };\n        return safeDeployTransactionData;\n    }\n    /**\n     * This function creates a batch of the provided Safe transactions using the MultiSend contract.\n     * It groups the transactions together into a single transaction which can then be executed atomically.\n     *\n     * @async\n     * @function createTransactionBatch\n     * @param {MetaTransactionData[]} transactions - An array of MetaTransactionData objects to be batched together.\n     * @param {TransactionOption} [transactionOptions] - Optional TransactionOption object to specify additional options for the transaction batch.\n     * @returns {Promise<Transaction>} A Promise that resolves with the created transaction batch.\n     *\n     */\n    async createTransactionBatch(transactions, transactionOptions) {\n        const chainId = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getChainId();\n        // we use the MultiSend contract to create the batch, see: https://github.com/safe-global/safe-contracts/blob/main/contracts/libraries/MultiSendCallOnly.sol\n        const multiSendCallOnlyContract = await (0, safeDeploymentContracts_1.getMultiSendCallOnlyContract)({\n            safeProvider: __classPrivateFieldGet(this, _Safe_safeProvider, \"f\"),\n            safeVersion: await this.getContractVersion(),\n            customContracts: __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks?.[chainId.toString()]\n        });\n        // multiSend method with the transactions encoded\n        const batchData = multiSendCallOnlyContract.encode('multiSend', [\n            (0, utils_3.encodeMultiSendData)(transactions) // encoded transactions\n        ]);\n        const transactionBatch = {\n            ...transactionOptions, // optional transaction options like from, gasLimit, gasPrice...\n            to: await multiSendCallOnlyContract.getAddress(),\n            value: '0',\n            data: batchData\n        };\n        return transactionBatch;\n    }\n}\n_Safe_predictedSafe = new WeakMap(), _Safe_safeProvider = new WeakMap(), _Safe_contractManager = new WeakMap(), _Safe_ownerManager = new WeakMap(), _Safe_moduleManager = new WeakMap(), _Safe_guardManager = new WeakMap(), _Safe_fallbackHandlerManager = new WeakMap(), _Safe_MAGIC_VALUE = new WeakMap(), _Safe_MAGIC_VALUE_BYTES = new WeakMap(), _Safe_instances = new WeakSet(), _Safe_initializeProtocolKit = \n/**\n * Initializes the Safe Core SDK instance.\n * @param config - Safe configuration\n * @throws \"Signer must be connected to a provider\"\n * @throws \"SafeProxy contract is not deployed on the current network\"\n * @throws \"MultiSend contract is not deployed on the current network\"\n * @throws \"MultiSendCallOnly contract is not deployed on the current network\"\n */\nasync function _Safe_initializeProtocolKit(config) {\n    const { provider, signer, isL1SafeSingleton, contractNetworks } = config;\n    __classPrivateFieldSet(this, _Safe_safeProvider, await SafeProvider_1.default.init(provider, signer, config_1.DEFAULT_SAFE_VERSION, contractNetworks), \"f\");\n    if ((0, types_2.isSafeConfigWithPredictedSafe)(config)) {\n        __classPrivateFieldSet(this, _Safe_predictedSafe, config.predictedSafe, \"f\");\n        __classPrivateFieldSet(this, _Safe_contractManager, await contractManager_1.default.init({\n            provider,\n            predictedSafe: __classPrivateFieldGet(this, _Safe_predictedSafe, \"f\"),\n            isL1SafeSingleton,\n            contractNetworks\n        }, __classPrivateFieldGet(this, _Safe_safeProvider, \"f\")), \"f\");\n    }\n    else {\n        __classPrivateFieldSet(this, _Safe_contractManager, await contractManager_1.default.init({\n            provider,\n            safeAddress: config.safeAddress,\n            isL1SafeSingleton,\n            contractNetworks\n        }, __classPrivateFieldGet(this, _Safe_safeProvider, \"f\")), \"f\");\n    }\n    const safeVersion = await this.getContractVersion();\n    __classPrivateFieldSet(this, _Safe_safeProvider, await SafeProvider_1.default.init(provider, signer, safeVersion, contractNetworks), \"f\");\n    __classPrivateFieldSet(this, _Safe_ownerManager, new ownerManager_1.default(__classPrivateFieldGet(this, _Safe_safeProvider, \"f\"), __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract), \"f\");\n    __classPrivateFieldSet(this, _Safe_moduleManager, new moduleManager_1.default(__classPrivateFieldGet(this, _Safe_safeProvider, \"f\"), __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract), \"f\");\n    __classPrivateFieldSet(this, _Safe_guardManager, new guardManager_1.default(__classPrivateFieldGet(this, _Safe_safeProvider, \"f\"), __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract), \"f\");\n    __classPrivateFieldSet(this, _Safe_fallbackHandlerManager, new fallbackHandlerManager_1.default(__classPrivateFieldGet(this, _Safe_safeProvider, \"f\"), __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract), \"f\");\n    const isPasskeySigner = signer && typeof signer !== 'string';\n    if (isPasskeySigner) {\n        const safeAddress = await this.getAddress();\n        const owners = await this.getOwners();\n        __classPrivateFieldSet(this, _Safe_safeProvider, await SafeProvider_1.default.init(provider, signer, safeVersion, contractNetworks, safeAddress, owners), \"f\");\n    }\n}, _Safe_getFallbackHandlerContract = \n/**\n * Get the fallback handler contract\n *\n * @returns The fallback Handler contract\n */\nasync function _Safe_getFallbackHandlerContract() {\n    if (!__classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract) {\n        throw new Error('Safe is not deployed');\n    }\n    const safeVersion = (await __classPrivateFieldGet(this, _Safe_contractManager, \"f\").safeContract.getVersion()) ?? config_1.DEFAULT_SAFE_VERSION;\n    const chainId = await __classPrivateFieldGet(this, _Safe_safeProvider, \"f\").getChainId();\n    const compatibilityFallbackHandlerContract = await (0, safeDeploymentContracts_1.getCompatibilityFallbackHandlerContract)({\n        safeProvider: __classPrivateFieldGet(this, _Safe_safeProvider, \"f\"),\n        safeVersion,\n        customContracts: __classPrivateFieldGet(this, _Safe_contractManager, \"f\").contractNetworks?.[chainId.toString()]\n    });\n    return compatibilityFallbackHandlerContract;\n};\nexports[\"default\"] = Safe;\n//# sourceMappingURL=Safe.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/Safe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeFactory.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeFactory.js ***!
  \********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _SafeFactory_instances, _SafeFactory_contractNetworks, _SafeFactory_isL1SafeSingleton, _SafeFactory_safeVersion, _SafeFactory_safeProxyFactoryContract, _SafeFactory_safeContract, _SafeFactory_provider, _SafeFactory_signer, _SafeFactory_safeProvider, _SafeFactory_initializeSafeFactory;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst Safe_1 = __importDefault(__webpack_require__(/*! ./Safe */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/Safe.js\"));\nconst config_1 = __webpack_require__(/*! ./contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\nconst safeDeploymentContracts_1 = __webpack_require__(/*! ./contracts/safeDeploymentContracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js\");\nconst utils_1 = __webpack_require__(/*! ./contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst SafeProvider_1 = __importDefault(__webpack_require__(/*! ./SafeProvider */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js\"));\nclass SafeFactory {\n    constructor() {\n        _SafeFactory_instances.add(this);\n        _SafeFactory_contractNetworks.set(this, void 0);\n        _SafeFactory_isL1SafeSingleton.set(this, void 0);\n        _SafeFactory_safeVersion.set(this, void 0);\n        _SafeFactory_safeProxyFactoryContract.set(this, void 0);\n        _SafeFactory_safeContract.set(this, void 0);\n        _SafeFactory_provider.set(this, void 0);\n        _SafeFactory_signer.set(this, void 0);\n        _SafeFactory_safeProvider.set(this, void 0);\n    }\n    static async init({ provider, signer, safeVersion = config_1.DEFAULT_SAFE_VERSION, isL1SafeSingleton = false, contractNetworks }) {\n        const safeFactorySdk = new SafeFactory();\n        await __classPrivateFieldGet(safeFactorySdk, _SafeFactory_instances, \"m\", _SafeFactory_initializeSafeFactory).call(safeFactorySdk, {\n            provider,\n            signer,\n            safeVersion,\n            isL1SafeSingleton,\n            contractNetworks\n        });\n        return safeFactorySdk;\n    }\n    getSafeProvider() {\n        return __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\");\n    }\n    getSafeVersion() {\n        return __classPrivateFieldGet(this, _SafeFactory_safeVersion, \"f\");\n    }\n    getAddress() {\n        return __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").getAddress();\n    }\n    async getChainId() {\n        return __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\").getChainId();\n    }\n    async predictSafeAddress(safeAccountConfig, saltNonce) {\n        const chainId = await __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\").getChainId();\n        const customContracts = __classPrivateFieldGet(this, _SafeFactory_contractNetworks, \"f\")?.[chainId.toString()];\n        const safeVersion = __classPrivateFieldGet(this, _SafeFactory_safeVersion, \"f\");\n        const safeDeploymentConfig = {\n            saltNonce: saltNonce || (0, utils_1.getChainSpecificDefaultSaltNonce)(chainId),\n            safeVersion\n        };\n        return (0, utils_1.predictSafeAddress)({\n            safeProvider: __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\"),\n            chainId,\n            safeAccountConfig,\n            safeDeploymentConfig,\n            isL1SafeSingleton: __classPrivateFieldGet(this, _SafeFactory_isL1SafeSingleton, \"f\"),\n            customContracts\n        });\n    }\n    async deploySafe({ safeAccountConfig, saltNonce, options, callback }) {\n        (0, utils_1.validateSafeAccountConfig)(safeAccountConfig);\n        (0, utils_1.validateSafeDeploymentConfig)({ saltNonce });\n        const signerAddress = await __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\").getSignerAddress();\n        if (!signerAddress) {\n            throw new Error('SafeProvider must be initialized with a signer to use this method');\n        }\n        const chainId = await this.getChainId();\n        const customContracts = __classPrivateFieldGet(this, _SafeFactory_contractNetworks, \"f\")?.[chainId.toString()];\n        const initializer = await (0, utils_1.encodeSetupCallData)({\n            safeProvider: __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\"),\n            safeAccountConfig,\n            safeContract: __classPrivateFieldGet(this, _SafeFactory_safeContract, \"f\"),\n            customContracts\n        });\n        const safeAddress = await __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").createProxyWithOptions({\n            safeSingletonAddress: await __classPrivateFieldGet(this, _SafeFactory_safeContract, \"f\").getAddress(),\n            initializer,\n            saltNonce: saltNonce || (0, utils_1.getChainSpecificDefaultSaltNonce)(chainId),\n            options: {\n                from: signerAddress,\n                ...options\n            },\n            callback\n        });\n        const isContractDeployed = await __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\").isContractDeployed(safeAddress);\n        if (!isContractDeployed) {\n            throw new Error('SafeProxy contract is not deployed on the current network');\n        }\n        const safe = await Safe_1.default.init({\n            provider: __classPrivateFieldGet(this, _SafeFactory_provider, \"f\"),\n            signer: __classPrivateFieldGet(this, _SafeFactory_signer, \"f\"),\n            safeAddress,\n            isL1SafeSingleton: __classPrivateFieldGet(this, _SafeFactory_isL1SafeSingleton, \"f\"),\n            contractNetworks: __classPrivateFieldGet(this, _SafeFactory_contractNetworks, \"f\")\n        });\n        return safe;\n    }\n}\n_SafeFactory_contractNetworks = new WeakMap(), _SafeFactory_isL1SafeSingleton = new WeakMap(), _SafeFactory_safeVersion = new WeakMap(), _SafeFactory_safeProxyFactoryContract = new WeakMap(), _SafeFactory_safeContract = new WeakMap(), _SafeFactory_provider = new WeakMap(), _SafeFactory_signer = new WeakMap(), _SafeFactory_safeProvider = new WeakMap(), _SafeFactory_instances = new WeakSet(), _SafeFactory_initializeSafeFactory = async function _SafeFactory_initializeSafeFactory({ provider, signer, safeVersion, isL1SafeSingleton, contractNetworks }) {\n    __classPrivateFieldSet(this, _SafeFactory_provider, provider, \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_signer, signer, \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_safeProvider, await SafeProvider_1.default.init(provider, signer, safeVersion, contractNetworks), \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_safeVersion, safeVersion, \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_isL1SafeSingleton, isL1SafeSingleton, \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_contractNetworks, contractNetworks, \"f\");\n    const chainId = await __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\").getChainId();\n    const customContracts = contractNetworks?.[chainId.toString()];\n    __classPrivateFieldSet(this, _SafeFactory_safeProxyFactoryContract, await (0, safeDeploymentContracts_1.getProxyFactoryContract)({\n        safeProvider: __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\"),\n        safeVersion,\n        customContracts\n    }), \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_safeContract, await (0, safeDeploymentContracts_1.getSafeContract)({\n        safeProvider: __classPrivateFieldGet(this, _SafeFactory_safeProvider, \"f\"),\n        safeVersion,\n        isL1SafeSingleton,\n        customContracts\n    }), \"f\");\n};\nexports[\"default\"] = SafeFactory;\n//# sourceMappingURL=SafeFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeFactory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js ***!
  \*********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _SafeProvider_externalProvider;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst utils_2 = __webpack_require__(/*! ./contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst safeDeploymentContracts_1 = __webpack_require__(/*! ./contracts/safeDeploymentContracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js\");\nconst constants_1 = __webpack_require__(/*! ./utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nconst contractInstances_1 = __webpack_require__(/*! ./contracts/contractInstances */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/contractInstances.js\");\nconst PasskeySigner_1 = __importDefault(__webpack_require__(/*! ./utils/passkeys/PasskeySigner */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/PasskeySigner.js\"));\nconst config_1 = __webpack_require__(/*! ./contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\nclass SafeProvider {\n    constructor({ provider, signer }) {\n        _SafeProvider_externalProvider.set(this, void 0);\n        if (typeof provider === 'string') {\n            __classPrivateFieldSet(this, _SafeProvider_externalProvider, new ethers_1.JsonRpcProvider(provider, undefined, { staticNetwork: true }), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _SafeProvider_externalProvider, new ethers_1.BrowserProvider(provider), \"f\");\n        }\n        this.provider = provider;\n        this.signer = signer;\n    }\n    getExternalProvider() {\n        return __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\");\n    }\n    static async init(provider, signer, safeVersion = config_1.DEFAULT_SAFE_VERSION, contractNetworks, safeAddress, owners) {\n        const isPasskeySigner = signer && typeof signer !== 'string';\n        if (isPasskeySigner) {\n            if (!(0, utils_1.hasSafeFeature)(utils_1.SAFE_FEATURES.PASSKEY_SIGNER, safeVersion)) {\n                throw new Error('Current version of the Safe does not support the Passkey signer functionality');\n            }\n            const safeProvider = new SafeProvider({\n                provider\n            });\n            const chainId = await safeProvider.getChainId();\n            const customContracts = contractNetworks?.[chainId.toString()];\n            let passkeySigner;\n            const isPasskeySignerConfig = !(signer instanceof PasskeySigner_1.default);\n            if (isPasskeySignerConfig) {\n                // signer is type PasskeyArgType {rawId, coordinates, customVerifierAddress? }\n                const safeWebAuthnSignerFactoryContract = await (0, safeDeploymentContracts_1.getSafeWebAuthnSignerFactoryContract)({\n                    safeProvider,\n                    safeVersion,\n                    customContracts\n                });\n                const safeWebAuthnSharedSignerContract = await (0, safeDeploymentContracts_1.getSafeWebAuthnSharedSignerContract)({\n                    safeProvider,\n                    safeVersion,\n                    customContracts\n                });\n                passkeySigner = await PasskeySigner_1.default.init(signer, safeWebAuthnSignerFactoryContract, safeWebAuthnSharedSignerContract, safeProvider.getExternalProvider(), safeAddress || '', owners || [], chainId.toString());\n            }\n            else {\n                // signer was already initialized and we pass a PasskeySigner instance (reconnecting)\n                passkeySigner = signer;\n            }\n            return new SafeProvider({\n                provider,\n                signer: passkeySigner\n            });\n        }\n        else {\n            return new SafeProvider({\n                provider,\n                signer\n            });\n        }\n    }\n    async getExternalSigner() {\n        if (typeof this.signer === 'string') {\n            // If the signer is not an Ethereum address, it should be a private key\n            if (!ethers_1.ethers.isAddress(this.signer)) {\n                const privateKeySigner = new ethers_1.ethers.Wallet(this.signer, __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\"));\n                return privateKeySigner;\n            }\n            return __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getSigner(this.signer);\n        }\n        else {\n            if (this.signer) {\n                return this.signer;\n            }\n        }\n        if (__classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\") instanceof ethers_1.BrowserProvider) {\n            return __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getSigner();\n        }\n        return undefined;\n    }\n    async isPasskeySigner() {\n        const signer = (await this.getExternalSigner());\n        return signer && !!signer.passkeyRawId;\n    }\n    isAddress(address) {\n        return ethers_1.ethers.isAddress(address);\n    }\n    async getEip3770Address(fullAddress) {\n        const chainId = await this.getChainId();\n        return (0, utils_1.validateEip3770Address)(fullAddress, chainId);\n    }\n    async getBalance(address, blockTag) {\n        return __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getBalance(address, blockTag);\n    }\n    async getNonce(address, blockTag) {\n        return __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getTransactionCount(address, blockTag);\n    }\n    async getChainId() {\n        return (await __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getNetwork()).chainId;\n    }\n    getChecksummedAddress(address) {\n        return ethers_1.ethers.getAddress(address);\n    }\n    async getSafeContract({ safeVersion, customContractAddress, customContractAbi, isL1SafeSingleton }) {\n        return (0, contractInstances_1.getSafeContractInstance)(safeVersion, this, customContractAddress, customContractAbi, isL1SafeSingleton);\n    }\n    async getSafeProxyFactoryContract({ safeVersion, customContractAddress, customContractAbi }) {\n        const signerOrProvider = (await this.getExternalSigner()) || __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\");\n        return (0, contractInstances_1.getSafeProxyFactoryContractInstance)(safeVersion, this, signerOrProvider, customContractAddress, customContractAbi);\n    }\n    async getMultiSendContract({ safeVersion, customContractAddress, customContractAbi }) {\n        return (0, contractInstances_1.getMultiSendContractInstance)(safeVersion, this, customContractAddress, customContractAbi);\n    }\n    async getMultiSendCallOnlyContract({ safeVersion, customContractAddress, customContractAbi }) {\n        return (0, contractInstances_1.getMultiSendCallOnlyContractInstance)(safeVersion, this, customContractAddress, customContractAbi);\n    }\n    async getCompatibilityFallbackHandlerContract({ safeVersion, customContractAddress, customContractAbi }) {\n        return (0, contractInstances_1.getCompatibilityFallbackHandlerContractInstance)(safeVersion, this, customContractAddress, customContractAbi);\n    }\n    async getSignMessageLibContract({ safeVersion, customContractAddress, customContractAbi }) {\n        return (0, contractInstances_1.getSignMessageLibContractInstance)(safeVersion, this, customContractAddress, customContractAbi);\n    }\n    async getCreateCallContract({ safeVersion, customContractAddress, customContractAbi }) {\n        return (0, contractInstances_1.getCreateCallContractInstance)(safeVersion, this, customContractAddress, customContractAbi);\n    }\n    async getSimulateTxAccessorContract({ safeVersion, customContractAddress, customContractAbi }) {\n        return (0, contractInstances_1.getSimulateTxAccessorContractInstance)(safeVersion, this, customContractAddress, customContractAbi);\n    }\n    async getSafeWebAuthnSignerFactoryContract({ safeVersion, customContractAddress, customContractAbi }) {\n        return (0, contractInstances_1.getSafeWebAuthnSignerFactoryContractInstance)(safeVersion, this, customContractAddress, customContractAbi);\n    }\n    async getSafeWebAuthnSharedSignerContract({ safeVersion, customContractAddress, customContractAbi }) {\n        return (0, contractInstances_1.getSafeWebAuthnSharedSignerContractInstance)(safeVersion, this, customContractAddress, customContractAbi);\n    }\n    async getContractCode(address, blockTag) {\n        return __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getCode(address, blockTag);\n    }\n    async isContractDeployed(address, blockTag) {\n        const contractCode = await __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getCode(address, blockTag);\n        return contractCode !== constants_1.EMPTY_DATA;\n    }\n    async getStorageAt(address, position) {\n        const content = await __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getStorage(address, position);\n        const decodedContent = this.decodeParameters(['address'], content);\n        return decodedContent[0];\n    }\n    async getTransaction(transactionHash) {\n        return __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").getTransaction(transactionHash);\n    }\n    async getSignerAddress() {\n        const signer = await this.getExternalSigner();\n        return signer?.getAddress();\n    }\n    async signMessage(message) {\n        const signer = await this.getExternalSigner();\n        if (!signer) {\n            throw new Error('SafeProvider must be initialized with a signer to use this method');\n        }\n        const messageArray = ethers_1.ethers.getBytes(message);\n        return signer.signMessage(messageArray);\n    }\n    async signTypedData(safeEIP712Args) {\n        const signer = await this.getExternalSigner();\n        if (!signer) {\n            throw new Error('SafeProvider must be initialized with a signer to use this method');\n        }\n        if ((0, utils_2.isTypedDataSigner)(signer)) {\n            const typedData = (0, utils_1.generateTypedData)(safeEIP712Args);\n            const signature = await signer.signTypedData(typedData.domain, typedData.primaryType === 'SafeMessage'\n                ? { SafeMessage: typedData.types.SafeMessage }\n                : { SafeTx: typedData.types.SafeTx }, typedData.message);\n            return signature;\n        }\n        throw new Error('The current signer does not implement EIP-712 to sign typed data');\n    }\n    async estimateGas(transaction) {\n        return (await __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").estimateGas(transaction)).toString();\n    }\n    call(transaction, blockTag) {\n        return __classPrivateFieldGet(this, _SafeProvider_externalProvider, \"f\").call({ ...transaction, blockTag });\n    }\n    // TODO: fix anys\n    encodeParameters(types, values) {\n        return new ethers_1.ethers.AbiCoder().encode(types, values);\n    }\n    decodeParameters(types, values) {\n        return new ethers_1.ethers.AbiCoder().decode(types, values);\n    }\n}\n_SafeProvider_externalProvider = new WeakMap();\nexports[\"default\"] = SafeProvider;\n//# sourceMappingURL=SafeProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst config_1 = __webpack_require__(/*! ../contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\n/**\n * Abstract class BaseContract\n * It is designed to be instantiated for different contracts.\n *\n * This abstract class sets up the Ethers v6 Contract object that interacts with the smart contract.\n *\n * Subclasses of BaseContract are expected to represent specific contracts.\n *\n * @template ContractAbiType - The ABI type specific to the version of the contract, extending InterfaceAbi from Ethers.\n *\n * Example subclasses:\n * - SafeBaseContract<SafeContractAbiType> extends BaseContract<SafeContractAbiType>\n * - CreateCallBaseContract<CreateCallContractAbiType> extends BaseContract<CreateCallContractAbiType>\n * - SafeProxyFactoryBaseContract<SafeProxyFactoryContractAbiType> extends BaseContract<SafeProxyFactoryContractAbiType>\n */\nclass BaseContract {\n    /**\n     * @constructor\n     * Constructs an instance of BaseContract.\n     *\n     * @param contractName - The contract name.\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the contract. It should be compatible with the specific version of the contract.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the Safe deployments or the defaultAbi is used.\n     */\n    constructor(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner) {\n        this.getAddress = () => {\n            return this.contract.getAddress();\n        };\n        this.encode = (functionToEncode, args) => {\n            return this.contract.interface.encodeFunctionData(functionToEncode, args);\n        };\n        this.estimateGas = (functionToEstimate, args, options = {}) => {\n            const contractMethodToEstimate = this.contract.getFunction(functionToEstimate);\n            return contractMethodToEstimate.estimateGas(...args, options);\n        };\n        const deployment = (0, config_1.getContractDeployment)(safeVersion, chainId, contractName);\n        const contractAddress = customContractAddress ||\n            deployment?.networkAddresses[chainId.toString()] ||\n            deployment?.defaultAddress;\n        if (!contractAddress) {\n            throw new Error(`Invalid ${contractName.replace('Version', '')} contract address`);\n        }\n        this.contractName = contractName;\n        this.safeVersion = safeVersion;\n        this.contractAddress = contractAddress;\n        this.contractAbi =\n            customContractAbi ||\n                deployment?.abi || // this cast is required because abi is set as any[] in safe-deployments\n                defaultAbi; // if no customAbi and no abi is present in the safe-deployments we use our hardcoded abi\n        this.runner = runner || safeProvider.getExternalProvider();\n        this.safeProvider = safeProvider;\n    }\n    async init() {\n        this.contract = new ethers_1.Contract(this.contractAddress, this.contractAbi, (await this.safeProvider.getExternalSigner()) || this.runner);\n    }\n}\nexports[\"default\"] = BaseContract;\n//# sourceMappingURL=BaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9CYXNlQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLG1CQUFPLENBQUMsa0dBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsNEtBQXFCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0U7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxxQ0FBcUM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL0Jhc2VDb250cmFjdC5qcz83MzQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXRoZXJzXzEgPSByZXF1aXJlKFwiZXRoZXJzXCIpO1xuY29uc3QgY29uZmlnXzEgPSByZXF1aXJlKFwiLi4vY29udHJhY3RzL2NvbmZpZ1wiKTtcbi8qKlxuICogQWJzdHJhY3QgY2xhc3MgQmFzZUNvbnRyYWN0XG4gKiBJdCBpcyBkZXNpZ25lZCB0byBiZSBpbnN0YW50aWF0ZWQgZm9yIGRpZmZlcmVudCBjb250cmFjdHMuXG4gKlxuICogVGhpcyBhYnN0cmFjdCBjbGFzcyBzZXRzIHVwIHRoZSBFdGhlcnMgdjYgQ29udHJhY3Qgb2JqZWN0IHRoYXQgaW50ZXJhY3RzIHdpdGggdGhlIHNtYXJ0IGNvbnRyYWN0LlxuICpcbiAqIFN1YmNsYXNzZXMgb2YgQmFzZUNvbnRyYWN0IGFyZSBleHBlY3RlZCB0byByZXByZXNlbnQgc3BlY2lmaWMgY29udHJhY3RzLlxuICpcbiAqIEB0ZW1wbGF0ZSBDb250cmFjdEFiaVR5cGUgLSBUaGUgQUJJIHR5cGUgc3BlY2lmaWMgdG8gdGhlIHZlcnNpb24gb2YgdGhlIGNvbnRyYWN0LCBleHRlbmRpbmcgSW50ZXJmYWNlQWJpIGZyb20gRXRoZXJzLlxuICpcbiAqIEV4YW1wbGUgc3ViY2xhc3NlczpcbiAqIC0gU2FmZUJhc2VDb250cmFjdDxTYWZlQ29udHJhY3RBYmlUeXBlPiBleHRlbmRzIEJhc2VDb250cmFjdDxTYWZlQ29udHJhY3RBYmlUeXBlPlxuICogLSBDcmVhdGVDYWxsQmFzZUNvbnRyYWN0PENyZWF0ZUNhbGxDb250cmFjdEFiaVR5cGU+IGV4dGVuZHMgQmFzZUNvbnRyYWN0PENyZWF0ZUNhbGxDb250cmFjdEFiaVR5cGU+XG4gKiAtIFNhZmVQcm94eUZhY3RvcnlCYXNlQ29udHJhY3Q8U2FmZVByb3h5RmFjdG9yeUNvbnRyYWN0QWJpVHlwZT4gZXh0ZW5kcyBCYXNlQ29udHJhY3Q8U2FmZVByb3h5RmFjdG9yeUNvbnRyYWN0QWJpVHlwZT5cbiAqL1xuY2xhc3MgQmFzZUNvbnRyYWN0IHtcbiAgICAvKipcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIEJhc2VDb250cmFjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb250cmFjdE5hbWUgLSBUaGUgY29udHJhY3QgbmFtZS5cbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gZGVmYXVsdEFiaSAtIFRoZSBkZWZhdWx0IEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJdCBzaG91bGQgYmUgY29tcGF0aWJsZSB3aXRoIHRoZSBzcGVjaWZpYyB2ZXJzaW9uIG9mIHRoZSBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gc2FmZVZlcnNpb24gLSBUaGUgdmVyc2lvbiBvZiB0aGUgU2FmZSBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBZGRyZXNzIC0gT3B0aW9uYWwgY3VzdG9tIGFkZHJlc3MgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgYWRkcmVzcyBpcyBkZXJpdmVkIGZyb20gdGhlIFNhZmUgZGVwbG95bWVudHMgYmFzZWQgb24gdGhlIGNoYWluSWQgYW5kIHNhZmVWZXJzaW9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFiaSAtIE9wdGlvbmFsIGN1c3RvbSBBQkkgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgQUJJIGlzIGRlcml2ZWQgZnJvbSB0aGUgU2FmZSBkZXBsb3ltZW50cyBvciB0aGUgZGVmYXVsdEFiaSBpcyB1c2VkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbnRyYWN0TmFtZSwgY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSwgcnVubmVyKSB7XG4gICAgICAgIHRoaXMuZ2V0QWRkcmVzcyA9ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbnRyYWN0LmdldEFkZHJlc3MoKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5lbmNvZGUgPSAoZnVuY3Rpb25Ub0VuY29kZSwgYXJncykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29udHJhY3QuaW50ZXJmYWNlLmVuY29kZUZ1bmN0aW9uRGF0YShmdW5jdGlvblRvRW5jb2RlLCBhcmdzKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5lc3RpbWF0ZUdhcyA9IChmdW5jdGlvblRvRXN0aW1hdGUsIGFyZ3MsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY29udHJhY3RNZXRob2RUb0VzdGltYXRlID0gdGhpcy5jb250cmFjdC5nZXRGdW5jdGlvbihmdW5jdGlvblRvRXN0aW1hdGUpO1xuICAgICAgICAgICAgcmV0dXJuIGNvbnRyYWN0TWV0aG9kVG9Fc3RpbWF0ZS5lc3RpbWF0ZUdhcyguLi5hcmdzLCBvcHRpb25zKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgZGVwbG95bWVudCA9ICgwLCBjb25maWdfMS5nZXRDb250cmFjdERlcGxveW1lbnQpKHNhZmVWZXJzaW9uLCBjaGFpbklkLCBjb250cmFjdE5hbWUpO1xuICAgICAgICBjb25zdCBjb250cmFjdEFkZHJlc3MgPSBjdXN0b21Db250cmFjdEFkZHJlc3MgfHxcbiAgICAgICAgICAgIGRlcGxveW1lbnQ/Lm5ldHdvcmtBZGRyZXNzZXNbY2hhaW5JZC50b1N0cmluZygpXSB8fFxuICAgICAgICAgICAgZGVwbG95bWVudD8uZGVmYXVsdEFkZHJlc3M7XG4gICAgICAgIGlmICghY29udHJhY3RBZGRyZXNzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgJHtjb250cmFjdE5hbWUucmVwbGFjZSgnVmVyc2lvbicsICcnKX0gY29udHJhY3QgYWRkcmVzc2ApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29udHJhY3ROYW1lID0gY29udHJhY3ROYW1lO1xuICAgICAgICB0aGlzLnNhZmVWZXJzaW9uID0gc2FmZVZlcnNpb247XG4gICAgICAgIHRoaXMuY29udHJhY3RBZGRyZXNzID0gY29udHJhY3RBZGRyZXNzO1xuICAgICAgICB0aGlzLmNvbnRyYWN0QWJpID1cbiAgICAgICAgICAgIGN1c3RvbUNvbnRyYWN0QWJpIHx8XG4gICAgICAgICAgICAgICAgZGVwbG95bWVudD8uYWJpIHx8IC8vIHRoaXMgY2FzdCBpcyByZXF1aXJlZCBiZWNhdXNlIGFiaSBpcyBzZXQgYXMgYW55W10gaW4gc2FmZS1kZXBsb3ltZW50c1xuICAgICAgICAgICAgICAgIGRlZmF1bHRBYmk7IC8vIGlmIG5vIGN1c3RvbUFiaSBhbmQgbm8gYWJpIGlzIHByZXNlbnQgaW4gdGhlIHNhZmUtZGVwbG95bWVudHMgd2UgdXNlIG91ciBoYXJkY29kZWQgYWJpXG4gICAgICAgIHRoaXMucnVubmVyID0gcnVubmVyIHx8IHNhZmVQcm92aWRlci5nZXRFeHRlcm5hbFByb3ZpZGVyKCk7XG4gICAgICAgIHRoaXMuc2FmZVByb3ZpZGVyID0gc2FmZVByb3ZpZGVyO1xuICAgIH1cbiAgICBhc3luYyBpbml0KCkge1xuICAgICAgICB0aGlzLmNvbnRyYWN0ID0gbmV3IGV0aGVyc18xLkNvbnRyYWN0KHRoaXMuY29udHJhY3RBZGRyZXNzLCB0aGlzLmNvbnRyYWN0QWJpLCAoYXdhaXQgdGhpcy5zYWZlUHJvdmlkZXIuZ2V0RXh0ZXJuYWxTaWduZXIoKSkgfHwgdGhpcy5ydW5uZXIpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEJhc2VDb250cmFjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2VDb250cmFjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerBaseContract.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerBaseContract.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class  CompatibilityFallbackHandlerBaseContract extends BaseContract to specifically integrate with the CompatibilityFallbackHandler contract.\n * It is designed to be instantiated for different versions of the Safe contract.\n *\n * Subclasses of  CompatibilityFallbackHandlerBaseContract are expected to represent specific versions of the contract.\n *\n * @template CompatibilityFallbackHandlerContractAbiType - The ABI type specific to the version of the CompatibilityFallbackHandler contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<CompatibilityFallbackHandlerContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - CompatibilityFallbackHandlerContract_v1_4_1  extends  CompatibilityFallbackHandlerBaseContract<CompatibilityFallbackHandlerContract_v1_4_1_Abi>\n * - CompatibilityFallbackHandlerContract_v1_3_0  extends  CompatibilityFallbackHandlerBaseContract<CompatibilityFallbackHandlerContract_v1_3_0_Abi>\n */\nclass CompatibilityFallbackHandlerBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of  CompatibilityFallbackHandlerBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the CompatibilityFallbackHandler contract. It should be compatible with the specific version of the contract.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the Safe deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner) {\n        const contractName = 'compatibilityFallbackHandler';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = CompatibilityFallbackHandlerBaseContract;\n//# sourceMappingURL=CompatibilityFallbackHandlerBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9Db21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyL0NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJCYXNlQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUMsbUJBQU8sQ0FBQywyTEFBOEI7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL0NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIvQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckJhc2VDb250cmFjdC5qcz8zMzE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uL2NvbnRyYWN0cy9CYXNlQ29udHJhY3RcIikpO1xuLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyAgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckJhc2VDb250cmFjdCBleHRlbmRzIEJhc2VDb250cmFjdCB0byBzcGVjaWZpY2FsbHkgaW50ZWdyYXRlIHdpdGggdGhlIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIgY29udHJhY3QuXG4gKiBJdCBpcyBkZXNpZ25lZCB0byBiZSBpbnN0YW50aWF0ZWQgZm9yIGRpZmZlcmVudCB2ZXJzaW9ucyBvZiB0aGUgU2FmZSBjb250cmFjdC5cbiAqXG4gKiBTdWJjbGFzc2VzIG9mICBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQmFzZUNvbnRyYWN0IGFyZSBleHBlY3RlZCB0byByZXByZXNlbnQgc3BlY2lmaWMgdmVyc2lvbnMgb2YgdGhlIGNvbnRyYWN0LlxuICpcbiAqIEB0ZW1wbGF0ZSBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RBYmlUeXBlIC0gVGhlIEFCSSB0eXBlIHNwZWNpZmljIHRvIHRoZSB2ZXJzaW9uIG9mIHRoZSBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyIGNvbnRyYWN0LCBleHRlbmRpbmcgSW50ZXJmYWNlQWJpIGZyb20gRXRoZXJzLlxuICogQGV4dGVuZHMgQmFzZUNvbnRyYWN0PENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdEFiaVR5cGU+IC0gRXh0ZW5kcyB0aGUgZ2VuZXJpYyBCYXNlQ29udHJhY3QuXG4gKlxuICogRXhhbXBsZSBzdWJjbGFzc2VzOlxuICogLSBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RfdjFfNF8xICBleHRlbmRzICBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQmFzZUNvbnRyYWN0PENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdF92MV80XzFfQWJpPlxuICogLSBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RfdjFfM18wICBleHRlbmRzICBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQmFzZUNvbnRyYWN0PENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdF92MV8zXzBfQWJpPlxuICovXG5jbGFzcyBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQmFzZUNvbnRyYWN0IGV4dGVuZHMgQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiAgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckJhc2VDb250cmFjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIG9mIHRoZSBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gc2FmZVByb3ZpZGVyIC0gQW4gaW5zdGFuY2Ugb2YgU2FmZVByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBkZWZhdWx0QWJpIC0gVGhlIGRlZmF1bHQgQUJJIGZvciB0aGUgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlciBjb250cmFjdC4gSXQgc2hvdWxkIGJlIGNvbXBhdGlibGUgd2l0aCB0aGUgc3BlY2lmaWMgdmVyc2lvbiBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVWZXJzaW9uIC0gVGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBTYWZlIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIEFCSSBpcyBkZXJpdmVkIGZyb20gdGhlIFNhZmUgZGVwbG95bWVudHMgb3IgdGhlIGRlZmF1bHRBYmkgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpLCBydW5uZXIpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gJ2NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXInO1xuICAgICAgICBzdXBlcihjb250cmFjdE5hbWUsIGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmksIHJ1bm5lcik7XG4gICAgICAgIHRoaXMuY29udHJhY3ROYW1lID0gY29udHJhY3ROYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJCYXNlQ29udHJhY3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQmFzZUNvbnRyYWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandlerContract_v1_3_0.js":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandlerContract_v1_3_0.js ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst CompatibilityFallbackHandlerBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * CompatibilityFallbackHandlerContract_v1_3_0  is the implementation specific to the CompatibilityFallbackHandler contract version 1.3.0.\n *\n * This class specializes in handling interactions with the CompatibilityFallbackHandler contract version 1.3.0 using Ethers.js v6.\n *\n * @extends  CompatibilityFallbackHandlerBaseContract<CompatibilityFallbackHandlerContract_v1_3_0_Abi> - Inherits from  CompatibilityFallbackHandlerBaseContract with ABI specific to CompatibilityFallbackHandler contract version 1.3.0.\n * @implements CompatibilityFallbackHandlerContract_v1_3_0_Contract - Implements the interface specific to CompatibilityFallbackHandler contract version 1.3.0.\n */\nclass CompatibilityFallbackHandlerContract_v1_3_0 extends CompatibilityFallbackHandlerBaseContract_1.default {\n    /**\n     * Constructs an instance of CompatibilityFallbackHandlerContract_v1_3_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the CompatibilityFallbackHandler deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.3.0 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.3.0';\n        const defaultAbi = safe_core_sdk_types_1.compatibilityFallbackHandler_1_3_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = CompatibilityFallbackHandlerContract_v1_3_0;\n//# sourceMappingURL=CompatibilityFallbackHandlerContract_v1_3_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9Db21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyL3YxLjMuMC9Db21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RfdjFfM18wLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUVBQW1FLG1CQUFPLENBQUMsZ1RBQTBGO0FBQ3JLLDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL0NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIvdjEuMy4wL0NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdF92MV8zXzAuanM/NmEyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL0NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIvQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckJhc2VDb250cmFjdFwiKSk7XG5jb25zdCBzYWZlX2NvcmVfc2RrX3R5cGVzXzEgPSByZXF1aXJlKFwiQHNhZmUtZ2xvYmFsL3NhZmUtY29yZS1zZGstdHlwZXNcIik7XG4vKipcbiAqIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdF92MV8zXzAgIGlzIHRoZSBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyB0byB0aGUgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlciBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIgY29udHJhY3QgdmVyc2lvbiAxLjMuMCB1c2luZyBFdGhlcnMuanMgdjYuXG4gKlxuICogQGV4dGVuZHMgIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJCYXNlQ29udHJhY3Q8Q29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckNvbnRyYWN0X3YxXzNfMF9BYmk+IC0gSW5oZXJpdHMgZnJvbSAgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckJhc2VDb250cmFjdCB3aXRoIEFCSSBzcGVjaWZpYyB0byBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyIGNvbnRyYWN0IHZlcnNpb24gMS4zLjAuXG4gKiBAaW1wbGVtZW50cyBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RfdjFfM18wX0NvbnRyYWN0IC0gSW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHNwZWNpZmljIHRvIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIgY29udHJhY3QgdmVyc2lvbiAxLjMuMC5cbiAqL1xuY2xhc3MgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckNvbnRyYWN0X3YxXzNfMCBleHRlbmRzIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdF92MV8zXzBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIHdoZXJlIHRoZSBjb250cmFjdCByZXNpZGVzLlxuICAgICAqIEBwYXJhbSBzYWZlUHJvdmlkZXIgLSBBbiBpbnN0YW5jZSBvZiBTYWZlUHJvdmlkZXIuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGRlZmF1bHQgQUJJIGZvciB2ZXJzaW9uIDEuMy4wIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKSB7XG4gICAgICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gJzEuMy4wJztcbiAgICAgICAgY29uc3QgZGVmYXVsdEFiaSA9IHNhZmVfY29yZV9zZGtfdHlwZXNfMS5jb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyXzFfM18wX0NvbnRyYWN0QXJ0aWZhY3RzLmFiaTtcbiAgICAgICAgc3VwZXIoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIHRoaXMuc2FmZVZlcnNpb24gPSBzYWZlVmVyc2lvbjtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RfdjFfM18wO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckNvbnRyYWN0X3YxXzNfMC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandlerContract_v1_3_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/v1.4.1/CompatibilityFallbackHandlerContract_v1_4_1.js":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/v1.4.1/CompatibilityFallbackHandlerContract_v1_4_1.js ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst CompatibilityFallbackHandlerBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * CompatibilityFallbackHandlerContract_v1_4_1  is the implementation specific to the CompatibilityFallbackHandler contract version 1.4.1.\n *\n * This class specializes in handling interactions with the CompatibilityFallbackHandler contract version 1.4.1 using Ethers.js v6.\n *\n * @extends  CompatibilityFallbackHandlerBaseContract<CompatibilityFallbackHandlerContract_v1_4_1_Abi> - Inherits from  CompatibilityFallbackHandlerBaseContract with ABI specific to CompatibilityFallbackHandler contract version 1.4.1.\n * @implements CompatibilityFallbackHandlerContract_v1_4_1_Contract - Implements the interface specific to CompatibilityFallbackHandler contract version 1.4.1.\n */\nclass CompatibilityFallbackHandlerContract_v1_4_1 extends CompatibilityFallbackHandlerBaseContract_1.default {\n    /**\n     * Constructs an instance of CompatibilityFallbackHandlerContract_v1_4_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the CompatibilityFallbackHandler deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.4.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.4.1';\n        const defaultAbi = safe_core_sdk_types_1.compatibilityFallbackHandler_1_4_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = CompatibilityFallbackHandlerContract_v1_4_1;\n//# sourceMappingURL=CompatibilityFallbackHandlerContract_v1_4_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9Db21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyL3YxLjQuMS9Db21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RfdjFfNF8xLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUVBQW1FLG1CQUFPLENBQUMsZ1RBQTBGO0FBQ3JLLDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL0NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIvdjEuNC4xL0NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdF92MV80XzEuanM/ZTgyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL0NvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIvQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckJhc2VDb250cmFjdFwiKSk7XG5jb25zdCBzYWZlX2NvcmVfc2RrX3R5cGVzXzEgPSByZXF1aXJlKFwiQHNhZmUtZ2xvYmFsL3NhZmUtY29yZS1zZGstdHlwZXNcIik7XG4vKipcbiAqIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdF92MV80XzEgIGlzIHRoZSBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyB0byB0aGUgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlciBjb250cmFjdCB2ZXJzaW9uIDEuNC4xLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIgY29udHJhY3QgdmVyc2lvbiAxLjQuMSB1c2luZyBFdGhlcnMuanMgdjYuXG4gKlxuICogQGV4dGVuZHMgIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJCYXNlQ29udHJhY3Q8Q29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckNvbnRyYWN0X3YxXzRfMV9BYmk+IC0gSW5oZXJpdHMgZnJvbSAgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckJhc2VDb250cmFjdCB3aXRoIEFCSSBzcGVjaWZpYyB0byBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyIGNvbnRyYWN0IHZlcnNpb24gMS40LjEuXG4gKiBAaW1wbGVtZW50cyBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RfdjFfNF8xX0NvbnRyYWN0IC0gSW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHNwZWNpZmljIHRvIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXIgY29udHJhY3QgdmVyc2lvbiAxLjQuMS5cbiAqL1xuY2xhc3MgQ29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckNvbnRyYWN0X3YxXzRfMSBleHRlbmRzIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIENvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXJDb250cmFjdF92MV80XzFcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIHdoZXJlIHRoZSBjb250cmFjdCByZXNpZGVzLlxuICAgICAqIEBwYXJhbSBzYWZlUHJvdmlkZXIgLSBBbiBpbnN0YW5jZSBvZiBTYWZlUHJvdmlkZXIuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGRlZmF1bHQgQUJJIGZvciB2ZXJzaW9uIDEuNC4xIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKSB7XG4gICAgICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gJzEuNC4xJztcbiAgICAgICAgY29uc3QgZGVmYXVsdEFiaSA9IHNhZmVfY29yZV9zZGtfdHlwZXNfMS5jb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyXzFfNF8xX0NvbnRyYWN0QXJ0aWZhY3RzLmFiaTtcbiAgICAgICAgc3VwZXIoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIHRoaXMuc2FmZVZlcnNpb24gPSBzYWZlVmVyc2lvbjtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBDb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyQ29udHJhY3RfdjFfNF8xO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckNvbnRyYWN0X3YxXzRfMS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/v1.4.1/CompatibilityFallbackHandlerContract_v1_4_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/CreateCallBaseContract.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/CreateCallBaseContract.js ***!
  \****************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class CreateCallBaseContract extends BaseContract to specifically integrate with the CreateCall contract.\n * It is designed to be instantiated for different versions of the Safe contract.\n *\n * Subclasses of CreateCallBaseContract are expected to represent specific versions of the contract.\n *\n * @template CreateCallContractAbiType - The ABI type specific to the version of the CreateCall contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<CreateCallContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - CreateCallContract_v1_4_1  extends CreateCallBaseContract<CreateCallContract_v1_4_1_Abi>\n * - CreateCallContract_v1_3_0  extends CreateCallBaseContract<CreateCallContract_v1_3_0_Abi>\n */\nclass CreateCallBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of CreateCallBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the CreateCall contract. It should be compatible with the specific version of the contract.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the Safe deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner) {\n        const contractName = 'createCallVersion';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = CreateCallBaseContract;\n//# sourceMappingURL=CreateCallBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9DcmVhdGVDYWxsL0NyZWF0ZUNhbGxCYXNlQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUMsbUJBQU8sQ0FBQywyTEFBOEI7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL0NyZWF0ZUNhbGwvQ3JlYXRlQ2FsbEJhc2VDb250cmFjdC5qcz82OTFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uL2NvbnRyYWN0cy9CYXNlQ29udHJhY3RcIikpO1xuLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyBDcmVhdGVDYWxsQmFzZUNvbnRyYWN0IGV4dGVuZHMgQmFzZUNvbnRyYWN0IHRvIHNwZWNpZmljYWxseSBpbnRlZ3JhdGUgd2l0aCB0aGUgQ3JlYXRlQ2FsbCBjb250cmFjdC5cbiAqIEl0IGlzIGRlc2lnbmVkIHRvIGJlIGluc3RhbnRpYXRlZCBmb3IgZGlmZmVyZW50IHZlcnNpb25zIG9mIHRoZSBTYWZlIGNvbnRyYWN0LlxuICpcbiAqIFN1YmNsYXNzZXMgb2YgQ3JlYXRlQ2FsbEJhc2VDb250cmFjdCBhcmUgZXhwZWN0ZWQgdG8gcmVwcmVzZW50IHNwZWNpZmljIHZlcnNpb25zIG9mIHRoZSBjb250cmFjdC5cbiAqXG4gKiBAdGVtcGxhdGUgQ3JlYXRlQ2FsbENvbnRyYWN0QWJpVHlwZSAtIFRoZSBBQkkgdHlwZSBzcGVjaWZpYyB0byB0aGUgdmVyc2lvbiBvZiB0aGUgQ3JlYXRlQ2FsbCBjb250cmFjdCwgZXh0ZW5kaW5nIEludGVyZmFjZUFiaSBmcm9tIEV0aGVycy5cbiAqIEBleHRlbmRzIEJhc2VDb250cmFjdDxDcmVhdGVDYWxsQ29udHJhY3RBYmlUeXBlPiAtIEV4dGVuZHMgdGhlIGdlbmVyaWMgQmFzZUNvbnRyYWN0LlxuICpcbiAqIEV4YW1wbGUgc3ViY2xhc3NlczpcbiAqIC0gQ3JlYXRlQ2FsbENvbnRyYWN0X3YxXzRfMSAgZXh0ZW5kcyBDcmVhdGVDYWxsQmFzZUNvbnRyYWN0PENyZWF0ZUNhbGxDb250cmFjdF92MV80XzFfQWJpPlxuICogLSBDcmVhdGVDYWxsQ29udHJhY3RfdjFfM18wICBleHRlbmRzIENyZWF0ZUNhbGxCYXNlQ29udHJhY3Q8Q3JlYXRlQ2FsbENvbnRyYWN0X3YxXzNfMF9BYmk+XG4gKi9cbmNsYXNzIENyZWF0ZUNhbGxCYXNlQ29udHJhY3QgZXh0ZW5kcyBCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIENyZWF0ZUNhbGxCYXNlQ29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gZGVmYXVsdEFiaSAtIFRoZSBkZWZhdWx0IEFCSSBmb3IgdGhlIENyZWF0ZUNhbGwgY29udHJhY3QuIEl0IHNob3VsZCBiZSBjb21wYXRpYmxlIHdpdGggdGhlIHNwZWNpZmljIHZlcnNpb24gb2YgdGhlIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBzYWZlVmVyc2lvbiAtIFRoZSB2ZXJzaW9uIG9mIHRoZSBTYWZlIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFkZHJlc3MgLSBPcHRpb25hbCBjdXN0b20gYWRkcmVzcyBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBhZGRyZXNzIGlzIGRlcml2ZWQgZnJvbSB0aGUgU2FmZSBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBBQkkgaXMgZGVyaXZlZCBmcm9tIHRoZSBTYWZlIGRlcGxveW1lbnRzIG9yIHRoZSBkZWZhdWx0QWJpIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSwgcnVubmVyKSB7XG4gICAgICAgIGNvbnN0IGNvbnRyYWN0TmFtZSA9ICdjcmVhdGVDYWxsVmVyc2lvbic7XG4gICAgICAgIHN1cGVyKGNvbnRyYWN0TmFtZSwgY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSwgcnVubmVyKTtcbiAgICAgICAgdGhpcy5jb250cmFjdE5hbWUgPSBjb250cmFjdE5hbWU7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gQ3JlYXRlQ2FsbEJhc2VDb250cmFjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNyZWF0ZUNhbGxCYXNlQ29udHJhY3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/CreateCallBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/v1.3.0/CreateCallContract_v1_3_0.js":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/v1.3.0/CreateCallContract_v1_3_0.js ***!
  \**************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst CreateCallBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/CreateCall/CreateCallBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/CreateCallBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\n/**\n * CreateCallContract_v1_3_0  is the implementation specific to the CreateCall contract version 1.3.0.\n *\n * This class specializes in handling interactions with the CreateCall contract version 1.3.0 using Ethers.js v6.\n *\n * @extends CreateCallBaseContract<CreateCallContract_v1_3_0_Abi> - Inherits from CreateCallBaseContract with ABI specific to CreateCall contract version 1.3.0.\n * @implements CreateCallContract_v1_3_0_Contract - Implements the interface specific to CreateCall contract version 1.3.0.\n */\nclass CreateCallContract_v1_3_0 extends CreateCallBaseContract_1.default {\n    /**\n     * Constructs an instance of CreateCallContract_v1_3_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the CreateCall deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.3.0 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.3.0';\n        const defaultAbi = safe_core_sdk_types_1.createCall_1_3_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        /**\n         * @param args - Array[value, deploymentData]\n         * @param options - TransactionOptions\n         * @returns Promise<TransactionResult>\n         */\n        this.performCreate = async (args, options) => {\n            if (options && !options.gasLimit) {\n                options.gasLimit = (await this.estimateGas('performCreate', [...args], { ...options })).toString();\n            }\n            const txResponse = await this.contract.performCreate(...args, { ...options });\n            return (0, utils_1.toTxResult)(txResponse, options);\n        };\n        /**\n         * @param args - Array[value, deploymentData, salt]\n         * @param options - TransactionOptions\n         * @returns Promise<TransactionResult>\n         */\n        this.performCreate2 = async (args, options) => {\n            if (options && !options.gasLimit) {\n                options.gasLimit = (await this.estimateGas('performCreate2', args, options)).toString();\n            }\n            const txResponse = await this.contract.performCreate2(...args);\n            return (0, utils_1.toTxResult)(txResponse, options);\n        };\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = CreateCallContract_v1_3_0;\n//# sourceMappingURL=CreateCallContract_v1_3_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9DcmVhdGVDYWxsL3YxLjMuMC9DcmVhdGVDYWxsQ29udHJhY3RfdjFfM18wLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaURBQWlELG1CQUFPLENBQUMsd09BQXNEO0FBQy9HLDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RSxnQkFBZ0IsbUJBQU8sQ0FBQyxnTEFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RkFBeUYsWUFBWTtBQUNyRztBQUNBLDRFQUE0RSxZQUFZO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL0NyZWF0ZUNhbGwvdjEuMy4wL0NyZWF0ZUNhbGxDb250cmFjdF92MV8zXzAuanM/Njg5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IENyZWF0ZUNhbGxCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL0NyZWF0ZUNhbGwvQ3JlYXRlQ2FsbEJhc2VDb250cmFjdFwiKSk7XG5jb25zdCBzYWZlX2NvcmVfc2RrX3R5cGVzXzEgPSByZXF1aXJlKFwiQHNhZmUtZ2xvYmFsL3NhZmUtY29yZS1zZGstdHlwZXNcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbnRyYWN0cy91dGlsc1wiKTtcbi8qKlxuICogQ3JlYXRlQ2FsbENvbnRyYWN0X3YxXzNfMCAgaXMgdGhlIGltcGxlbWVudGF0aW9uIHNwZWNpZmljIHRvIHRoZSBDcmVhdGVDYWxsIGNvbnRyYWN0IHZlcnNpb24gMS4zLjAuXG4gKlxuICogVGhpcyBjbGFzcyBzcGVjaWFsaXplcyBpbiBoYW5kbGluZyBpbnRlcmFjdGlvbnMgd2l0aCB0aGUgQ3JlYXRlQ2FsbCBjb250cmFjdCB2ZXJzaW9uIDEuMy4wIHVzaW5nIEV0aGVycy5qcyB2Ni5cbiAqXG4gKiBAZXh0ZW5kcyBDcmVhdGVDYWxsQmFzZUNvbnRyYWN0PENyZWF0ZUNhbGxDb250cmFjdF92MV8zXzBfQWJpPiAtIEluaGVyaXRzIGZyb20gQ3JlYXRlQ2FsbEJhc2VDb250cmFjdCB3aXRoIEFCSSBzcGVjaWZpYyB0byBDcmVhdGVDYWxsIGNvbnRyYWN0IHZlcnNpb24gMS4zLjAuXG4gKiBAaW1wbGVtZW50cyBDcmVhdGVDYWxsQ29udHJhY3RfdjFfM18wX0NvbnRyYWN0IC0gSW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHNwZWNpZmljIHRvIENyZWF0ZUNhbGwgY29udHJhY3QgdmVyc2lvbiAxLjMuMC5cbiAqL1xuY2xhc3MgQ3JlYXRlQ2FsbENvbnRyYWN0X3YxXzNfMCBleHRlbmRzIENyZWF0ZUNhbGxCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIENyZWF0ZUNhbGxDb250cmFjdF92MV8zXzBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIHdoZXJlIHRoZSBjb250cmFjdCByZXNpZGVzLlxuICAgICAqIEBwYXJhbSBzYWZlUHJvdmlkZXIgLSBBbiBpbnN0YW5jZSBvZiBTYWZlUHJvdmlkZXIuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBDcmVhdGVDYWxsIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGRlZmF1bHQgQUJJIGZvciB2ZXJzaW9uIDEuMy4wIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKSB7XG4gICAgICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gJzEuMy4wJztcbiAgICAgICAgY29uc3QgZGVmYXVsdEFiaSA9IHNhZmVfY29yZV9zZGtfdHlwZXNfMS5jcmVhdGVDYWxsXzFfM18wX0NvbnRyYWN0QXJ0aWZhY3RzLmFiaTtcbiAgICAgICAgc3VwZXIoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAcGFyYW0gYXJncyAtIEFycmF5W3ZhbHVlLCBkZXBsb3ltZW50RGF0YV1cbiAgICAgICAgICogQHBhcmFtIG9wdGlvbnMgLSBUcmFuc2FjdGlvbk9wdGlvbnNcbiAgICAgICAgICogQHJldHVybnMgUHJvbWlzZTxUcmFuc2FjdGlvblJlc3VsdD5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucGVyZm9ybUNyZWF0ZSA9IGFzeW5jIChhcmdzLCBvcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiAhb3B0aW9ucy5nYXNMaW1pdCkge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuZ2FzTGltaXQgPSAoYXdhaXQgdGhpcy5lc3RpbWF0ZUdhcygncGVyZm9ybUNyZWF0ZScsIFsuLi5hcmdzXSwgeyAuLi5vcHRpb25zIH0pKS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdHhSZXNwb25zZSA9IGF3YWl0IHRoaXMuY29udHJhY3QucGVyZm9ybUNyZWF0ZSguLi5hcmdzLCB7IC4uLm9wdGlvbnMgfSk7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEudG9UeFJlc3VsdCkodHhSZXNwb25zZSwgb3B0aW9ucyk7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAcGFyYW0gYXJncyAtIEFycmF5W3ZhbHVlLCBkZXBsb3ltZW50RGF0YSwgc2FsdF1cbiAgICAgICAgICogQHBhcmFtIG9wdGlvbnMgLSBUcmFuc2FjdGlvbk9wdGlvbnNcbiAgICAgICAgICogQHJldHVybnMgUHJvbWlzZTxUcmFuc2FjdGlvblJlc3VsdD5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucGVyZm9ybUNyZWF0ZTIgPSBhc3luYyAoYXJncywgb3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgIW9wdGlvbnMuZ2FzTGltaXQpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLmdhc0xpbWl0ID0gKGF3YWl0IHRoaXMuZXN0aW1hdGVHYXMoJ3BlcmZvcm1DcmVhdGUyJywgYXJncywgb3B0aW9ucykpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0eFJlc3BvbnNlID0gYXdhaXQgdGhpcy5jb250cmFjdC5wZXJmb3JtQ3JlYXRlMiguLi5hcmdzKTtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfMS50b1R4UmVzdWx0KSh0eFJlc3BvbnNlLCBvcHRpb25zKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zYWZlVmVyc2lvbiA9IHNhZmVWZXJzaW9uO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IENyZWF0ZUNhbGxDb250cmFjdF92MV8zXzA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DcmVhdGVDYWxsQ29udHJhY3RfdjFfM18wLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/v1.3.0/CreateCallContract_v1_3_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/v1.4.1/CreateCallContract_v1_4_1.js":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/v1.4.1/CreateCallContract_v1_4_1.js ***!
  \**************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst CreateCallBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/CreateCall/CreateCallBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/CreateCallBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\n/**\n * CreateCallContract_v1_4_1  is the implementation specific to the CreateCall contract version 1.4.1.\n *\n * This class specializes in handling interactions with the CreateCall contract version 1.4.1 using Ethers.js v6.\n *\n * @extends CreateCallBaseContract<CreateCallContract_v1_4_1_Abi> - Inherits from CreateCallBaseContract with ABI specific to CreateCall contract version 1.4.1.\n * @implements CreateCallContract_v1_4_1_Contract - Implements the interface specific to CreateCall contract version 1.4.1.\n */\nclass CreateCallContract_v1_4_1 extends CreateCallBaseContract_1.default {\n    /**\n     * Constructs an instance of CreateCallContract_v1_4_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the CreateCall deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.4.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.4.1';\n        const defaultAbi = safe_core_sdk_types_1.createCall_1_4_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        /**\n         * @param args - Array[value, deploymentData]\n         * @param options - TransactionOptions\n         * @returns Promise<TransactionResult>\n         */\n        this.performCreate = async (args, options) => {\n            if (options && !options.gasLimit) {\n                options.gasLimit = (await this.estimateGas('performCreate', args, options)).toString();\n            }\n            const txResponse = await this.contract.performCreate(...args, options);\n            return (0, utils_1.toTxResult)(txResponse, options);\n        };\n        /**\n         * @param args - Array[value, deploymentData, salt]\n         * @param options - TransactionOptions\n         * @returns Promise<TransactionResult>\n         */\n        this.performCreate2 = async (args, options) => {\n            if (options && !options.gasLimit) {\n                options.gasLimit = (await this.estimateGas('performCreate2', [...args], { ...options })).toString();\n            }\n            const txResponse = await this.contract.performCreate2(...args);\n            return (0, utils_1.toTxResult)(txResponse, options);\n        };\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = CreateCallContract_v1_4_1;\n//# sourceMappingURL=CreateCallContract_v1_4_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9DcmVhdGVDYWxsL3YxLjQuMS9DcmVhdGVDYWxsQ29udHJhY3RfdjFfNF8xLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaURBQWlELG1CQUFPLENBQUMsd09BQXNEO0FBQy9HLDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RSxnQkFBZ0IsbUJBQU8sQ0FBQyxnTEFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRkFBMEYsWUFBWTtBQUN0RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy9jb250cmFjdHMvQ3JlYXRlQ2FsbC92MS40LjEvQ3JlYXRlQ2FsbENvbnRyYWN0X3YxXzRfMS5qcz83YTZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgQ3JlYXRlQ2FsbEJhc2VDb250cmFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi8uLi9jb250cmFjdHMvQ3JlYXRlQ2FsbC9DcmVhdGVDYWxsQmFzZUNvbnRyYWN0XCIpKTtcbmNvbnN0IHNhZmVfY29yZV9zZGtfdHlwZXNfMSA9IHJlcXVpcmUoXCJAc2FmZS1nbG9iYWwvc2FmZS1jb3JlLXNkay10eXBlc1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL3V0aWxzXCIpO1xuLyoqXG4gKiBDcmVhdGVDYWxsQ29udHJhY3RfdjFfNF8xICBpcyB0aGUgaW1wbGVtZW50YXRpb24gc3BlY2lmaWMgdG8gdGhlIENyZWF0ZUNhbGwgY29udHJhY3QgdmVyc2lvbiAxLjQuMS5cbiAqXG4gKiBUaGlzIGNsYXNzIHNwZWNpYWxpemVzIGluIGhhbmRsaW5nIGludGVyYWN0aW9ucyB3aXRoIHRoZSBDcmVhdGVDYWxsIGNvbnRyYWN0IHZlcnNpb24gMS40LjEgdXNpbmcgRXRoZXJzLmpzIHY2LlxuICpcbiAqIEBleHRlbmRzIENyZWF0ZUNhbGxCYXNlQ29udHJhY3Q8Q3JlYXRlQ2FsbENvbnRyYWN0X3YxXzRfMV9BYmk+IC0gSW5oZXJpdHMgZnJvbSBDcmVhdGVDYWxsQmFzZUNvbnRyYWN0IHdpdGggQUJJIHNwZWNpZmljIHRvIENyZWF0ZUNhbGwgY29udHJhY3QgdmVyc2lvbiAxLjQuMS5cbiAqIEBpbXBsZW1lbnRzIENyZWF0ZUNhbGxDb250cmFjdF92MV80XzFfQ29udHJhY3QgLSBJbXBsZW1lbnRzIHRoZSBpbnRlcmZhY2Ugc3BlY2lmaWMgdG8gQ3JlYXRlQ2FsbCBjb250cmFjdCB2ZXJzaW9uIDEuNC4xLlxuICovXG5jbGFzcyBDcmVhdGVDYWxsQ29udHJhY3RfdjFfNF8xIGV4dGVuZHMgQ3JlYXRlQ2FsbEJhc2VDb250cmFjdF8xLmRlZmF1bHQge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgYW4gaW5zdGFuY2Ugb2YgQ3JlYXRlQ2FsbENvbnRyYWN0X3YxXzRfMVxuICAgICAqXG4gICAgICogQHBhcmFtIGNoYWluSWQgLSBUaGUgY2hhaW4gSUQgd2hlcmUgdGhlIGNvbnRyYWN0IHJlc2lkZXMuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBZGRyZXNzIC0gT3B0aW9uYWwgY3VzdG9tIGFkZHJlc3MgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgYWRkcmVzcyBpcyBkZXJpdmVkIGZyb20gdGhlIENyZWF0ZUNhbGwgZGVwbG95bWVudHMgYmFzZWQgb24gdGhlIGNoYWluSWQgYW5kIHNhZmVWZXJzaW9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFiaSAtIE9wdGlvbmFsIGN1c3RvbSBBQkkgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgZGVmYXVsdCBBQkkgZm9yIHZlcnNpb24gMS40LjEgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3Qgc2FmZVZlcnNpb24gPSAnMS40LjEnO1xuICAgICAgICBjb25zdCBkZWZhdWx0QWJpID0gc2FmZV9jb3JlX3Nka190eXBlc18xLmNyZWF0ZUNhbGxfMV80XzFfQ29udHJhY3RBcnRpZmFjdHMuYWJpO1xuICAgICAgICBzdXBlcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbdmFsdWUsIGRlcGxveW1lbnREYXRhXVxuICAgICAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFRyYW5zYWN0aW9uT3B0aW9uc1xuICAgICAgICAgKiBAcmV0dXJucyBQcm9taXNlPFRyYW5zYWN0aW9uUmVzdWx0PlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5wZXJmb3JtQ3JlYXRlID0gYXN5bmMgKGFyZ3MsIG9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zICYmICFvcHRpb25zLmdhc0xpbWl0KSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5nYXNMaW1pdCA9IChhd2FpdCB0aGlzLmVzdGltYXRlR2FzKCdwZXJmb3JtQ3JlYXRlJywgYXJncywgb3B0aW9ucykpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0eFJlc3BvbnNlID0gYXdhaXQgdGhpcy5jb250cmFjdC5wZXJmb3JtQ3JlYXRlKC4uLmFyZ3MsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLnRvVHhSZXN1bHQpKHR4UmVzcG9uc2UsIG9wdGlvbnMpO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVt2YWx1ZSwgZGVwbG95bWVudERhdGEsIHNhbHRdXG4gICAgICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVHJhbnNhY3Rpb25PcHRpb25zXG4gICAgICAgICAqIEByZXR1cm5zIFByb21pc2U8VHJhbnNhY3Rpb25SZXN1bHQ+XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnBlcmZvcm1DcmVhdGUyID0gYXN5bmMgKGFyZ3MsIG9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zICYmICFvcHRpb25zLmdhc0xpbWl0KSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5nYXNMaW1pdCA9IChhd2FpdCB0aGlzLmVzdGltYXRlR2FzKCdwZXJmb3JtQ3JlYXRlMicsIFsuLi5hcmdzXSwgeyAuLi5vcHRpb25zIH0pKS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdHhSZXNwb25zZSA9IGF3YWl0IHRoaXMuY29udHJhY3QucGVyZm9ybUNyZWF0ZTIoLi4uYXJncyk7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEudG9UeFJlc3VsdCkodHhSZXNwb25zZSwgb3B0aW9ucyk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2FmZVZlcnNpb24gPSBzYWZlVmVyc2lvbjtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBDcmVhdGVDYWxsQ29udHJhY3RfdjFfNF8xO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q3JlYXRlQ2FsbENvbnRyYWN0X3YxXzRfMS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/v1.4.1/CreateCallContract_v1_4_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendBaseContract.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendBaseContract.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class MultiSendBaseContract extends BaseContract to specifically integrate with the MultiSend contract.\n * It is designed to be instantiated for different versions of the MultiSend contract.\n *\n * Subclasses of MultiSendBaseContract are expected to represent specific versions of the MultiSend contract.\n *\n * @template MultiSendContractAbiType - The ABI type specific to the version of the MultiSend contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<MultiSendContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - MultiSendContract_v1_4_1  extends MultiSendBaseContract<MultiSendContract_v1_4_1_Abi>\n * - MultiSendContract_v1_3_0  extends MultiSendBaseContract<MultiSendContract_v1_3_0_Abi>\n */\nclass MultiSendBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of MultiSendBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the MultiSend contract. It should be compatible with the specific version of the MultiSend contract.\n     * @param safeVersion - The version of the MultiSend contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the MultiSend deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the MultiSend deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi) {\n        const contractName = 'multiSendVersion';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = MultiSendBaseContract;\n//# sourceMappingURL=MultiSendBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvTXVsdGlTZW5kQmFzZUNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUNBQXVDLG1CQUFPLENBQUMsMkxBQThCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvTXVsdGlTZW5kQmFzZUNvbnRyYWN0LmpzPzBkM2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vY29udHJhY3RzL0Jhc2VDb250cmFjdFwiKSk7XG4vKipcbiAqIEFic3RyYWN0IGNsYXNzIE11bHRpU2VuZEJhc2VDb250cmFjdCBleHRlbmRzIEJhc2VDb250cmFjdCB0byBzcGVjaWZpY2FsbHkgaW50ZWdyYXRlIHdpdGggdGhlIE11bHRpU2VuZCBjb250cmFjdC5cbiAqIEl0IGlzIGRlc2lnbmVkIHRvIGJlIGluc3RhbnRpYXRlZCBmb3IgZGlmZmVyZW50IHZlcnNpb25zIG9mIHRoZSBNdWx0aVNlbmQgY29udHJhY3QuXG4gKlxuICogU3ViY2xhc3NlcyBvZiBNdWx0aVNlbmRCYXNlQ29udHJhY3QgYXJlIGV4cGVjdGVkIHRvIHJlcHJlc2VudCBzcGVjaWZpYyB2ZXJzaW9ucyBvZiB0aGUgTXVsdGlTZW5kIGNvbnRyYWN0LlxuICpcbiAqIEB0ZW1wbGF0ZSBNdWx0aVNlbmRDb250cmFjdEFiaVR5cGUgLSBUaGUgQUJJIHR5cGUgc3BlY2lmaWMgdG8gdGhlIHZlcnNpb24gb2YgdGhlIE11bHRpU2VuZCBjb250cmFjdCwgZXh0ZW5kaW5nIEludGVyZmFjZUFiaSBmcm9tIEV0aGVycy5cbiAqIEBleHRlbmRzIEJhc2VDb250cmFjdDxNdWx0aVNlbmRDb250cmFjdEFiaVR5cGU+IC0gRXh0ZW5kcyB0aGUgZ2VuZXJpYyBCYXNlQ29udHJhY3QuXG4gKlxuICogRXhhbXBsZSBzdWJjbGFzc2VzOlxuICogLSBNdWx0aVNlbmRDb250cmFjdF92MV80XzEgIGV4dGVuZHMgTXVsdGlTZW5kQmFzZUNvbnRyYWN0PE11bHRpU2VuZENvbnRyYWN0X3YxXzRfMV9BYmk+XG4gKiAtIE11bHRpU2VuZENvbnRyYWN0X3YxXzNfMCAgZXh0ZW5kcyBNdWx0aVNlbmRCYXNlQ29udHJhY3Q8TXVsdGlTZW5kQ29udHJhY3RfdjFfM18wX0FiaT5cbiAqL1xuY2xhc3MgTXVsdGlTZW5kQmFzZUNvbnRyYWN0IGV4dGVuZHMgQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBNdWx0aVNlbmRCYXNlQ29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gZGVmYXVsdEFiaSAtIFRoZSBkZWZhdWx0IEFCSSBmb3IgdGhlIE11bHRpU2VuZCBjb250cmFjdC4gSXQgc2hvdWxkIGJlIGNvbXBhdGlibGUgd2l0aCB0aGUgc3BlY2lmaWMgdmVyc2lvbiBvZiB0aGUgTXVsdGlTZW5kIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBzYWZlVmVyc2lvbiAtIFRoZSB2ZXJzaW9uIG9mIHRoZSBNdWx0aVNlbmQgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBNdWx0aVNlbmQgZGVwbG95bWVudHMgYmFzZWQgb24gdGhlIGNoYWluSWQgYW5kIHNhZmVWZXJzaW9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFiaSAtIE9wdGlvbmFsIGN1c3RvbSBBQkkgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgQUJJIGlzIGRlcml2ZWQgZnJvbSB0aGUgTXVsdGlTZW5kIGRlcGxveW1lbnRzIG9yIHRoZSBkZWZhdWx0QWJpIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSkge1xuICAgICAgICBjb25zdCBjb250cmFjdE5hbWUgPSAnbXVsdGlTZW5kVmVyc2lvbic7XG4gICAgICAgIHN1cGVyKGNvbnRyYWN0TmFtZSwgY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIHRoaXMuY29udHJhY3ROYW1lID0gY29udHJhY3ROYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IE11bHRpU2VuZEJhc2VDb250cmFjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU11bHRpU2VuZEJhc2VDb250cmFjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendCallOnlyBaseContract.js":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendCallOnlyBaseContract.js ***!
  \**********************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class MultiSendCallOnlyBaseContract extends BaseContract to specifically integrate with the MultiSendCallOnly contract.\n * It is designed to be instantiated for different versions of the MultiSendCallOnly contract.\n *\n * Subclasses of MultiSendCallOnlyBaseContract are expected to represent specific versions of the MultiSendCallOnly contract.\n *\n * @template MultiSendCallOnlyContractAbiType - The ABI type specific to the version of the MultiSendCallOnly contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<MultiSendCallOnlyContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - MultiSendCallOnlyContract_v1_4_1  extends MultiSendCallOnlyBaseContract<MultiSendCallOnlyContract_v1_4_1_Abi>\n * - MultiSendCallOnlyContract_v1_3_0  extends MultiSendCallOnlyBaseContract<MultiSendCallOnlyContract_v1_3_0_Abi>\n */\nclass MultiSendCallOnlyBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of MultiSendCallOnlyBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the MultiSendCallOnly contract. It should be compatible with the specific version of the MultiSendCallOnly contract.\n     * @param safeVersion - The version of the MultiSendCallOnly contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the MultiSendCallOnly deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the MultiSendCallOnly deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi) {\n        const contractName = 'multiSendCallOnlyVersion';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = MultiSendCallOnlyBaseContract;\n//# sourceMappingURL=MultiSendCallOnlyBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvTXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUMsbUJBQU8sQ0FBQywyTEFBOEI7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL011bHRpU2VuZC9NdWx0aVNlbmRDYWxsT25seUJhc2VDb250cmFjdC5qcz9hZWIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uL2NvbnRyYWN0cy9CYXNlQ29udHJhY3RcIikpO1xuLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyBNdWx0aVNlbmRDYWxsT25seUJhc2VDb250cmFjdCBleHRlbmRzIEJhc2VDb250cmFjdCB0byBzcGVjaWZpY2FsbHkgaW50ZWdyYXRlIHdpdGggdGhlIE11bHRpU2VuZENhbGxPbmx5IGNvbnRyYWN0LlxuICogSXQgaXMgZGVzaWduZWQgdG8gYmUgaW5zdGFudGlhdGVkIGZvciBkaWZmZXJlbnQgdmVyc2lvbnMgb2YgdGhlIE11bHRpU2VuZENhbGxPbmx5IGNvbnRyYWN0LlxuICpcbiAqIFN1YmNsYXNzZXMgb2YgTXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3QgYXJlIGV4cGVjdGVkIHRvIHJlcHJlc2VudCBzcGVjaWZpYyB2ZXJzaW9ucyBvZiB0aGUgTXVsdGlTZW5kQ2FsbE9ubHkgY29udHJhY3QuXG4gKlxuICogQHRlbXBsYXRlIE11bHRpU2VuZENhbGxPbmx5Q29udHJhY3RBYmlUeXBlIC0gVGhlIEFCSSB0eXBlIHNwZWNpZmljIHRvIHRoZSB2ZXJzaW9uIG9mIHRoZSBNdWx0aVNlbmRDYWxsT25seSBjb250cmFjdCwgZXh0ZW5kaW5nIEludGVyZmFjZUFiaSBmcm9tIEV0aGVycy5cbiAqIEBleHRlbmRzIEJhc2VDb250cmFjdDxNdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0QWJpVHlwZT4gLSBFeHRlbmRzIHRoZSBnZW5lcmljIEJhc2VDb250cmFjdC5cbiAqXG4gKiBFeGFtcGxlIHN1YmNsYXNzZXM6XG4gKiAtIE11bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfNF8xICBleHRlbmRzIE11bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0PE11bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfNF8xX0FiaT5cbiAqIC0gTXVsdGlTZW5kQ2FsbE9ubHlDb250cmFjdF92MV8zXzAgIGV4dGVuZHMgTXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3Q8TXVsdGlTZW5kQ2FsbE9ubHlDb250cmFjdF92MV8zXzBfQWJpPlxuICovXG5jbGFzcyBNdWx0aVNlbmRDYWxsT25seUJhc2VDb250cmFjdCBleHRlbmRzIEJhc2VDb250cmFjdF8xLmRlZmF1bHQge1xuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIENvbnN0cnVjdHMgYW4gaW5zdGFuY2Ugb2YgTXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gZGVmYXVsdEFiaSAtIFRoZSBkZWZhdWx0IEFCSSBmb3IgdGhlIE11bHRpU2VuZENhbGxPbmx5IGNvbnRyYWN0LiBJdCBzaG91bGQgYmUgY29tcGF0aWJsZSB3aXRoIHRoZSBzcGVjaWZpYyB2ZXJzaW9uIG9mIHRoZSBNdWx0aVNlbmRDYWxsT25seSBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gc2FmZVZlcnNpb24gLSBUaGUgdmVyc2lvbiBvZiB0aGUgTXVsdGlTZW5kQ2FsbE9ubHkgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBNdWx0aVNlbmRDYWxsT25seSBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBBQkkgaXMgZGVyaXZlZCBmcm9tIHRoZSBNdWx0aVNlbmRDYWxsT25seSBkZXBsb3ltZW50cyBvciB0aGUgZGVmYXVsdEFiaSBpcyB1c2VkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gJ211bHRpU2VuZENhbGxPbmx5VmVyc2lvbic7XG4gICAgICAgIHN1cGVyKGNvbnRyYWN0TmFtZSwgY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIHRoaXMuY29udHJhY3ROYW1lID0gY29udHJhY3ROYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IE11bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendCallOnlyBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.1.1/MultiSendContract_v1_1_1.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.1.1/MultiSendContract_v1_1_1.js ***!
  \************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst MultiSendBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/MultiSend/MultiSendBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * MultiSendContract_v1_1_1  is the implementation specific to the MultiSend contract version 1.1.1.\n *\n * This class specializes in handling interactions with the MultiSend contract version 1.1.1 using Ethers.js v6.\n *\n * @extends MultiSendBaseContract<MultiSendContract_v1_1_1_Abi> - Inherits from MultiSendBaseContract with ABI specific to MultiSend contract version 1.1.1.\n * @implements MultiSendContract_v1_1_1_Contract - Implements the interface specific to MultiSend contract version 1.1.1.\n */\nclass MultiSendContract_v1_1_1 extends MultiSendBaseContract_1.default {\n    /**\n     * Constructs an instance of MultiSendContract_v1_1_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the MultiSend deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.1.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.1.1';\n        const defaultAbi = safe_core_sdk_types_1.multisend_1_1_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = MultiSendContract_v1_1_1;\n//# sourceMappingURL=MultiSendContract_v1_1_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvdjEuMS4xL011bHRpU2VuZENvbnRyYWN0X3YxXzFfMS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdEQUFnRCxtQkFBTyxDQUFDLG9PQUFvRDtBQUM1Ryw4QkFBOEIsbUJBQU8sQ0FBQyw0TEFBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvdjEuMS4xL011bHRpU2VuZENvbnRyYWN0X3YxXzFfMS5qcz9jODNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgTXVsdGlTZW5kQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uLy4uL2NvbnRyYWN0cy9NdWx0aVNlbmQvTXVsdGlTZW5kQmFzZUNvbnRyYWN0XCIpKTtcbmNvbnN0IHNhZmVfY29yZV9zZGtfdHlwZXNfMSA9IHJlcXVpcmUoXCJAc2FmZS1nbG9iYWwvc2FmZS1jb3JlLXNkay10eXBlc1wiKTtcbi8qKlxuICogTXVsdGlTZW5kQ29udHJhY3RfdjFfMV8xICBpcyB0aGUgaW1wbGVtZW50YXRpb24gc3BlY2lmaWMgdG8gdGhlIE11bHRpU2VuZCBjb250cmFjdCB2ZXJzaW9uIDEuMS4xLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE11bHRpU2VuZCBjb250cmFjdCB2ZXJzaW9uIDEuMS4xIHVzaW5nIEV0aGVycy5qcyB2Ni5cbiAqXG4gKiBAZXh0ZW5kcyBNdWx0aVNlbmRCYXNlQ29udHJhY3Q8TXVsdGlTZW5kQ29udHJhY3RfdjFfMV8xX0FiaT4gLSBJbmhlcml0cyBmcm9tIE11bHRpU2VuZEJhc2VDb250cmFjdCB3aXRoIEFCSSBzcGVjaWZpYyB0byBNdWx0aVNlbmQgY29udHJhY3QgdmVyc2lvbiAxLjEuMS5cbiAqIEBpbXBsZW1lbnRzIE11bHRpU2VuZENvbnRyYWN0X3YxXzFfMV9Db250cmFjdCAtIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpYyB0byBNdWx0aVNlbmQgY29udHJhY3QgdmVyc2lvbiAxLjEuMS5cbiAqL1xuY2xhc3MgTXVsdGlTZW5kQ29udHJhY3RfdjFfMV8xIGV4dGVuZHMgTXVsdGlTZW5kQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBNdWx0aVNlbmRDb250cmFjdF92MV8xXzFcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIHdoZXJlIHRoZSBjb250cmFjdCByZXNpZGVzLlxuICAgICAqIEBwYXJhbSBzYWZlUHJvdmlkZXIgLSBBbiBpbnN0YW5jZSBvZiBTYWZlUHJvdmlkZXIuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBNdWx0aVNlbmQgZGVwbG95bWVudHMgYmFzZWQgb24gdGhlIGNoYWluSWQgYW5kIHNhZmVWZXJzaW9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFiaSAtIE9wdGlvbmFsIGN1c3RvbSBBQkkgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgZGVmYXVsdCBBQkkgZm9yIHZlcnNpb24gMS4xLjEgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3Qgc2FmZVZlcnNpb24gPSAnMS4xLjEnO1xuICAgICAgICBjb25zdCBkZWZhdWx0QWJpID0gc2FmZV9jb3JlX3Nka190eXBlc18xLm11bHRpc2VuZF8xXzFfMV9Db250cmFjdEFydGlmYWN0cy5hYmk7XG4gICAgICAgIHN1cGVyKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpO1xuICAgICAgICB0aGlzLnNhZmVWZXJzaW9uID0gc2FmZVZlcnNpb247XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTXVsdGlTZW5kQ29udHJhY3RfdjFfMV8xO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXVsdGlTZW5kQ29udHJhY3RfdjFfMV8xLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.1.1/MultiSendContract_v1_1_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.3.0/MultiSendCallOnlyContract_v1_3_0.js":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.3.0/MultiSendCallOnlyContract_v1_3_0.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst MultiSendCallOnlyBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/MultiSend/MultiSendCallOnlyBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendCallOnlyBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * MultiSendCallOnlyContract_v1_3_0  is the implementation specific to the MultiSendCallOnly contract version 1.3.0.\n *\n * This class specializes in handling interactions with the MultiSendCallOnly contract version 1.3.0 using Ethers.js v6.\n *\n * @extends MultiSendCallOnlyBaseContract<MultiSendCallOnlyContract_v1_3_0_Abi> - Inherits from MultiSendCallOnlyBaseContract with ABI specific to MultiSendCallOnly contract version 1.3.0.\n * @implements MultiSendCallOnlyContract_v1_3_0_Contract - Implements the interface specific to MultiSendCallOnly contract version 1.3.0.\n */\nclass MultiSendCallOnlyContract_v1_3_0 extends MultiSendCallOnlyBaseContract_1.default {\n    /**\n     * Constructs an instance of MultiSendCallOnlyContract_v1_3_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the MultiSendCallOnly deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.3.0 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.3.0';\n        const defaultAbi = safe_core_sdk_types_1.multiSendCallOnly_1_3_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = MultiSendCallOnlyContract_v1_3_0;\n//# sourceMappingURL=MultiSendCallOnlyContract_v1_3_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvdjEuMy4wL011bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfM18wLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0RBQXdELG1CQUFPLENBQUMsb1BBQTREO0FBQzVILDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL011bHRpU2VuZC92MS4zLjAvTXVsdGlTZW5kQ2FsbE9ubHlDb250cmFjdF92MV8zXzAuanM/NDUwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IE11bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uLy4uL2NvbnRyYWN0cy9NdWx0aVNlbmQvTXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3RcIikpO1xuY29uc3Qgc2FmZV9jb3JlX3Nka190eXBlc18xID0gcmVxdWlyZShcIkBzYWZlLWdsb2JhbC9zYWZlLWNvcmUtc2RrLXR5cGVzXCIpO1xuLyoqXG4gKiBNdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0X3YxXzNfMCAgaXMgdGhlIGltcGxlbWVudGF0aW9uIHNwZWNpZmljIHRvIHRoZSBNdWx0aVNlbmRDYWxsT25seSBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE11bHRpU2VuZENhbGxPbmx5IGNvbnRyYWN0IHZlcnNpb24gMS4zLjAgdXNpbmcgRXRoZXJzLmpzIHY2LlxuICpcbiAqIEBleHRlbmRzIE11bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0PE11bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfM18wX0FiaT4gLSBJbmhlcml0cyBmcm9tIE11bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0IHdpdGggQUJJIHNwZWNpZmljIHRvIE11bHRpU2VuZENhbGxPbmx5IGNvbnRyYWN0IHZlcnNpb24gMS4zLjAuXG4gKiBAaW1wbGVtZW50cyBNdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0X3YxXzNfMF9Db250cmFjdCAtIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpYyB0byBNdWx0aVNlbmRDYWxsT25seSBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICovXG5jbGFzcyBNdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0X3YxXzNfMCBleHRlbmRzIE11bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBNdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0X3YxXzNfMFxuICAgICAqXG4gICAgICogQHBhcmFtIGNoYWluSWQgLSBUaGUgY2hhaW4gSUQgd2hlcmUgdGhlIGNvbnRyYWN0IHJlc2lkZXMuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBZGRyZXNzIC0gT3B0aW9uYWwgY3VzdG9tIGFkZHJlc3MgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgYWRkcmVzcyBpcyBkZXJpdmVkIGZyb20gdGhlIE11bHRpU2VuZENhbGxPbmx5IGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGRlZmF1bHQgQUJJIGZvciB2ZXJzaW9uIDEuMy4wIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKSB7XG4gICAgICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gJzEuMy4wJztcbiAgICAgICAgY29uc3QgZGVmYXVsdEFiaSA9IHNhZmVfY29yZV9zZGtfdHlwZXNfMS5tdWx0aVNlbmRDYWxsT25seV8xXzNfMF9Db250cmFjdEFydGlmYWN0cy5hYmk7XG4gICAgICAgIHN1cGVyKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpO1xuICAgICAgICB0aGlzLnNhZmVWZXJzaW9uID0gc2FmZVZlcnNpb247XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTXVsdGlTZW5kQ2FsbE9ubHlDb250cmFjdF92MV8zXzA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0X3YxXzNfMC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.3.0/MultiSendCallOnlyContract_v1_3_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.3.0/MultiSendContract_v1_3_0.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.3.0/MultiSendContract_v1_3_0.js ***!
  \************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst MultiSendBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/MultiSend/MultiSendBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * MultiSendContract_v1_3_0  is the implementation specific to the MultiSend contract version 1.3.0.\n *\n * This class specializes in handling interactions with the MultiSend contract version 1.3.0 using Ethers.js v6.\n *\n * @extends MultiSendBaseContract<MultiSendContract_v1_3_0_Abi> - Inherits from MultiSendBaseContract with ABI specific to MultiSend contract version 1.3.0.\n * @implements MultiSendContract_v1_3_0_Contract - Implements the interface specific to MultiSend contract version 1.3.0.\n */\nclass MultiSendContract_v1_3_0 extends MultiSendBaseContract_1.default {\n    /**\n     * Constructs an instance of MultiSendContract_v1_3_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the MultiSend deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.3.0 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.3.0';\n        const defaultAbi = safe_core_sdk_types_1.multisend_1_3_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = MultiSendContract_v1_3_0;\n//# sourceMappingURL=MultiSendContract_v1_3_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvdjEuMy4wL011bHRpU2VuZENvbnRyYWN0X3YxXzNfMC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdEQUFnRCxtQkFBTyxDQUFDLG9PQUFvRDtBQUM1Ryw4QkFBOEIsbUJBQU8sQ0FBQyw0TEFBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvdjEuMy4wL011bHRpU2VuZENvbnRyYWN0X3YxXzNfMC5qcz9jYTdlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgTXVsdGlTZW5kQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uLy4uL2NvbnRyYWN0cy9NdWx0aVNlbmQvTXVsdGlTZW5kQmFzZUNvbnRyYWN0XCIpKTtcbmNvbnN0IHNhZmVfY29yZV9zZGtfdHlwZXNfMSA9IHJlcXVpcmUoXCJAc2FmZS1nbG9iYWwvc2FmZS1jb3JlLXNkay10eXBlc1wiKTtcbi8qKlxuICogTXVsdGlTZW5kQ29udHJhY3RfdjFfM18wICBpcyB0aGUgaW1wbGVtZW50YXRpb24gc3BlY2lmaWMgdG8gdGhlIE11bHRpU2VuZCBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE11bHRpU2VuZCBjb250cmFjdCB2ZXJzaW9uIDEuMy4wIHVzaW5nIEV0aGVycy5qcyB2Ni5cbiAqXG4gKiBAZXh0ZW5kcyBNdWx0aVNlbmRCYXNlQ29udHJhY3Q8TXVsdGlTZW5kQ29udHJhY3RfdjFfM18wX0FiaT4gLSBJbmhlcml0cyBmcm9tIE11bHRpU2VuZEJhc2VDb250cmFjdCB3aXRoIEFCSSBzcGVjaWZpYyB0byBNdWx0aVNlbmQgY29udHJhY3QgdmVyc2lvbiAxLjMuMC5cbiAqIEBpbXBsZW1lbnRzIE11bHRpU2VuZENvbnRyYWN0X3YxXzNfMF9Db250cmFjdCAtIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpYyB0byBNdWx0aVNlbmQgY29udHJhY3QgdmVyc2lvbiAxLjMuMC5cbiAqL1xuY2xhc3MgTXVsdGlTZW5kQ29udHJhY3RfdjFfM18wIGV4dGVuZHMgTXVsdGlTZW5kQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBNdWx0aVNlbmRDb250cmFjdF92MV8zXzBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIHdoZXJlIHRoZSBjb250cmFjdCByZXNpZGVzLlxuICAgICAqIEBwYXJhbSBzYWZlUHJvdmlkZXIgLSBBbiBpbnN0YW5jZSBvZiBTYWZlUHJvdmlkZXIuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBNdWx0aVNlbmQgZGVwbG95bWVudHMgYmFzZWQgb24gdGhlIGNoYWluSWQgYW5kIHNhZmVWZXJzaW9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFiaSAtIE9wdGlvbmFsIGN1c3RvbSBBQkkgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgZGVmYXVsdCBBQkkgZm9yIHZlcnNpb24gMS4zLjAgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3Qgc2FmZVZlcnNpb24gPSAnMS4zLjAnO1xuICAgICAgICBjb25zdCBkZWZhdWx0QWJpID0gc2FmZV9jb3JlX3Nka190eXBlc18xLm11bHRpc2VuZF8xXzNfMF9Db250cmFjdEFydGlmYWN0cy5hYmk7XG4gICAgICAgIHN1cGVyKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpO1xuICAgICAgICB0aGlzLnNhZmVWZXJzaW9uID0gc2FmZVZlcnNpb247XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTXVsdGlTZW5kQ29udHJhY3RfdjFfM18wO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXVsdGlTZW5kQ29udHJhY3RfdjFfM18wLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.3.0/MultiSendContract_v1_3_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.4.1/MultiSendCallOnlyContract_v1_4_1.js":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.4.1/MultiSendCallOnlyContract_v1_4_1.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst MultiSendCallOnlyBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/MultiSend/MultiSendCallOnlyBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendCallOnlyBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * MultiSendCallOnlyContract_v1_4_1  is the implementation specific to the MultiSend contract version 1.4.1.\n *\n * This class specializes in handling interactions with the MultiSendCallOnly contract version 1.4.1 using Ethers.js v6.\n *\n * @extends MultiSendCallOnlyBaseContract<MultiSendCallOnlyContract_v1_4_1_Abi> - Inherits from MultiSendBaseContract with ABI specific to MultiSendCallOnly contract version 1.4.1.\n * @implements MultiSendCallOnlyContract_v1_4_1_Contract - Implements the interface specific to MultiSendCallOnly contract version 1.4.1.\n */\nclass MultiSendCallOnlyContract_v1_4_1 extends MultiSendCallOnlyBaseContract_1.default {\n    /**\n     * Constructs an instance of MultiSendCallOnlyContract_v1_4_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the MultiSendCallOnly deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.4.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.4.1';\n        const defaultAbi = safe_core_sdk_types_1.multiSendCallOnly_1_4_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = MultiSendCallOnlyContract_v1_4_1;\n//# sourceMappingURL=MultiSendCallOnlyContract_v1_4_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvdjEuNC4xL011bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfNF8xLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0RBQXdELG1CQUFPLENBQUMsb1BBQTREO0FBQzVILDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL011bHRpU2VuZC92MS40LjEvTXVsdGlTZW5kQ2FsbE9ubHlDb250cmFjdF92MV80XzEuanM/MTVmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IE11bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uLy4uL2NvbnRyYWN0cy9NdWx0aVNlbmQvTXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3RcIikpO1xuY29uc3Qgc2FmZV9jb3JlX3Nka190eXBlc18xID0gcmVxdWlyZShcIkBzYWZlLWdsb2JhbC9zYWZlLWNvcmUtc2RrLXR5cGVzXCIpO1xuLyoqXG4gKiBNdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0X3YxXzRfMSAgaXMgdGhlIGltcGxlbWVudGF0aW9uIHNwZWNpZmljIHRvIHRoZSBNdWx0aVNlbmQgY29udHJhY3QgdmVyc2lvbiAxLjQuMS5cbiAqXG4gKiBUaGlzIGNsYXNzIHNwZWNpYWxpemVzIGluIGhhbmRsaW5nIGludGVyYWN0aW9ucyB3aXRoIHRoZSBNdWx0aVNlbmRDYWxsT25seSBjb250cmFjdCB2ZXJzaW9uIDEuNC4xIHVzaW5nIEV0aGVycy5qcyB2Ni5cbiAqXG4gKiBAZXh0ZW5kcyBNdWx0aVNlbmRDYWxsT25seUJhc2VDb250cmFjdDxNdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0X3YxXzRfMV9BYmk+IC0gSW5oZXJpdHMgZnJvbSBNdWx0aVNlbmRCYXNlQ29udHJhY3Qgd2l0aCBBQkkgc3BlY2lmaWMgdG8gTXVsdGlTZW5kQ2FsbE9ubHkgY29udHJhY3QgdmVyc2lvbiAxLjQuMS5cbiAqIEBpbXBsZW1lbnRzIE11bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfNF8xX0NvbnRyYWN0IC0gSW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHNwZWNpZmljIHRvIE11bHRpU2VuZENhbGxPbmx5IGNvbnRyYWN0IHZlcnNpb24gMS40LjEuXG4gKi9cbmNsYXNzIE11bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfNF8xIGV4dGVuZHMgTXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIE11bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfNF8xXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCB3aGVyZSB0aGUgY29udHJhY3QgcmVzaWRlcy5cbiAgICAgKiBAcGFyYW0gc2FmZVByb3ZpZGVyIC0gQW4gaW5zdGFuY2Ugb2YgU2FmZVByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFkZHJlc3MgLSBPcHRpb25hbCBjdXN0b20gYWRkcmVzcyBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBhZGRyZXNzIGlzIGRlcml2ZWQgZnJvbSB0aGUgTXVsdGlTZW5kQ2FsbE9ubHkgZGVwbG95bWVudHMgYmFzZWQgb24gdGhlIGNoYWluSWQgYW5kIHNhZmVWZXJzaW9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFiaSAtIE9wdGlvbmFsIGN1c3RvbSBBQkkgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgZGVmYXVsdCBBQkkgZm9yIHZlcnNpb24gMS40LjEgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3Qgc2FmZVZlcnNpb24gPSAnMS40LjEnO1xuICAgICAgICBjb25zdCBkZWZhdWx0QWJpID0gc2FmZV9jb3JlX3Nka190eXBlc18xLm11bHRpU2VuZENhbGxPbmx5XzFfNF8xX0NvbnRyYWN0QXJ0aWZhY3RzLmFiaTtcbiAgICAgICAgc3VwZXIoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIHRoaXMuc2FmZVZlcnNpb24gPSBzYWZlVmVyc2lvbjtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBNdWx0aVNlbmRDYWxsT25seUNvbnRyYWN0X3YxXzRfMTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU11bHRpU2VuZENhbGxPbmx5Q29udHJhY3RfdjFfNF8xLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.4.1/MultiSendCallOnlyContract_v1_4_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.4.1/MultiSendContract_v1_4_1.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.4.1/MultiSendContract_v1_4_1.js ***!
  \************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst MultiSendBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/MultiSend/MultiSendBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * MultiSendContract_v1_4_1  is the implementation specific to the MultiSend contract version 1.4.1.\n *\n * This class specializes in handling interactions with the MultiSend contract version 1.4.1 using Ethers.js v6.\n *\n * @extends MultiSendBaseContract<MultiSendContract_v1_4_1_Abi> - Inherits from MultiSendBaseContract with ABI specific to MultiSend contract version 1.4.1.\n * @implements MultiSendContract_v1_4_1_Contract - Implements the interface specific to MultiSend contract version 1.4.1.\n */\nclass MultiSendContract_v1_4_1 extends MultiSendBaseContract_1.default {\n    /**\n     * Constructs an instance of MultiSendContract_v1_4_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the MultiSend deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.4.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.4.1';\n        const defaultAbi = safe_core_sdk_types_1.multisend_1_4_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = MultiSendContract_v1_4_1;\n//# sourceMappingURL=MultiSendContract_v1_4_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvdjEuNC4xL011bHRpU2VuZENvbnRyYWN0X3YxXzRfMS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdEQUFnRCxtQkFBTyxDQUFDLG9PQUFvRDtBQUM1Ryw4QkFBOEIsbUJBQU8sQ0FBQyw0TEFBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9NdWx0aVNlbmQvdjEuNC4xL011bHRpU2VuZENvbnRyYWN0X3YxXzRfMS5qcz8yOGJmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgTXVsdGlTZW5kQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uLy4uL2NvbnRyYWN0cy9NdWx0aVNlbmQvTXVsdGlTZW5kQmFzZUNvbnRyYWN0XCIpKTtcbmNvbnN0IHNhZmVfY29yZV9zZGtfdHlwZXNfMSA9IHJlcXVpcmUoXCJAc2FmZS1nbG9iYWwvc2FmZS1jb3JlLXNkay10eXBlc1wiKTtcbi8qKlxuICogTXVsdGlTZW5kQ29udHJhY3RfdjFfNF8xICBpcyB0aGUgaW1wbGVtZW50YXRpb24gc3BlY2lmaWMgdG8gdGhlIE11bHRpU2VuZCBjb250cmFjdCB2ZXJzaW9uIDEuNC4xLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE11bHRpU2VuZCBjb250cmFjdCB2ZXJzaW9uIDEuNC4xIHVzaW5nIEV0aGVycy5qcyB2Ni5cbiAqXG4gKiBAZXh0ZW5kcyBNdWx0aVNlbmRCYXNlQ29udHJhY3Q8TXVsdGlTZW5kQ29udHJhY3RfdjFfNF8xX0FiaT4gLSBJbmhlcml0cyBmcm9tIE11bHRpU2VuZEJhc2VDb250cmFjdCB3aXRoIEFCSSBzcGVjaWZpYyB0byBNdWx0aVNlbmQgY29udHJhY3QgdmVyc2lvbiAxLjQuMS5cbiAqIEBpbXBsZW1lbnRzIE11bHRpU2VuZENvbnRyYWN0X3YxXzRfMV9Db250cmFjdCAtIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpYyB0byBNdWx0aVNlbmQgY29udHJhY3QgdmVyc2lvbiAxLjQuMS5cbiAqL1xuY2xhc3MgTXVsdGlTZW5kQ29udHJhY3RfdjFfNF8xIGV4dGVuZHMgTXVsdGlTZW5kQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBNdWx0aVNlbmRDb250cmFjdF92MV80XzFcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIHdoZXJlIHRoZSBjb250cmFjdCByZXNpZGVzLlxuICAgICAqIEBwYXJhbSBzYWZlUHJvdmlkZXIgLSBBbiBpbnN0YW5jZSBvZiBTYWZlUHJvdmlkZXIuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBNdWx0aVNlbmQgZGVwbG95bWVudHMgYmFzZWQgb24gdGhlIGNoYWluSWQgYW5kIHNhZmVWZXJzaW9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFiaSAtIE9wdGlvbmFsIGN1c3RvbSBBQkkgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgZGVmYXVsdCBBQkkgZm9yIHZlcnNpb24gMS40LjEgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3Qgc2FmZVZlcnNpb24gPSAnMS40LjEnO1xuICAgICAgICBjb25zdCBkZWZhdWx0QWJpID0gc2FmZV9jb3JlX3Nka190eXBlc18xLm11bHRpc2VuZF8xXzRfMV9Db250cmFjdEFydGlmYWN0cy5hYmk7XG4gICAgICAgIHN1cGVyKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpO1xuICAgICAgICB0aGlzLnNhZmVWZXJzaW9uID0gc2FmZVZlcnNpb247XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTXVsdGlTZW5kQ29udHJhY3RfdjFfNF8xO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXVsdGlTZW5kQ29udHJhY3RfdjFfNF8xLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.4.1/MultiSendContract_v1_4_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js ***!
  \****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\nconst config_1 = __webpack_require__(/*! ../../contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\nconst utils_1 = __webpack_require__(/*! ../../utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\n/**\n * Abstract class SafeBaseContract extends BaseContract to specifically integrate with the Safe contract.\n * It is designed to be instantiated for different versions of the Safe contract.\n *\n * Subclasses of SafeBaseContract are expected to represent specific versions of the Safe contract.\n *\n * @template SafeContractAbiType - The ABI type specific to the version of the Safe contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<SafeContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - SafeContract_v1_4_1  extends SafeBaseContract<SafeContract_v1_4_1_Abi>\n * - SafeContract_v1_3_0  extends SafeBaseContract<SafeContract_v1_3_0_Abi>\n * - SafeContract_v1_2_0  extends SafeBaseContract<SafeContract_v1_2_0_Abi>\n * - SafeContract_v1_1_1  extends SafeBaseContract<SafeContract_v1_1_1_Abi>\n * - SafeContract_v1_0_0  extends SafeBaseContract<SafeContract_v1_0_0_Abi>\n */\nclass SafeBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of SafeBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the Safe contract. It should be compatible with the specific version of the Safe contract.\n     * @param safeVersion - The version of the Safe contract.\n     * @param isL1SafeSingleton - A flag indicating if the contract is a L1 Safe Singleton.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the Safe deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, isL1SafeSingleton = false, customContractAddress, customContractAbi) {\n        const isL1Contract = config_1.safeDeploymentsL1ChainIds.includes(chainId) ||\n            isL1SafeSingleton ||\n            !(0, utils_1.hasSafeFeature)(utils_1.SAFE_FEATURES.SAFE_L2_CONTRACTS, safeVersion);\n        const contractName = isL1Contract ? 'safeSingletonVersion' : 'safeSingletonL2Version';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = SafeBaseContract;\n//# sourceMappingURL=SafeBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlL1NhZmVCYXNlQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUMsbUJBQU8sQ0FBQywyTEFBOEI7QUFDN0UsaUJBQWlCLG1CQUFPLENBQUMsK0tBQXdCO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLCtKQUFhO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL1NhZmUvU2FmZUJhc2VDb250cmFjdC5qcz9mYjliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uL2NvbnRyYWN0cy9CYXNlQ29udHJhY3RcIikpO1xuY29uc3QgY29uZmlnXzEgPSByZXF1aXJlKFwiLi4vLi4vY29udHJhY3RzL2NvbmZpZ1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG4vKipcbiAqIEFic3RyYWN0IGNsYXNzIFNhZmVCYXNlQ29udHJhY3QgZXh0ZW5kcyBCYXNlQ29udHJhY3QgdG8gc3BlY2lmaWNhbGx5IGludGVncmF0ZSB3aXRoIHRoZSBTYWZlIGNvbnRyYWN0LlxuICogSXQgaXMgZGVzaWduZWQgdG8gYmUgaW5zdGFudGlhdGVkIGZvciBkaWZmZXJlbnQgdmVyc2lvbnMgb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gKlxuICogU3ViY2xhc3NlcyBvZiBTYWZlQmFzZUNvbnRyYWN0IGFyZSBleHBlY3RlZCB0byByZXByZXNlbnQgc3BlY2lmaWMgdmVyc2lvbnMgb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gKlxuICogQHRlbXBsYXRlIFNhZmVDb250cmFjdEFiaVR5cGUgLSBUaGUgQUJJIHR5cGUgc3BlY2lmaWMgdG8gdGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgY29udHJhY3QsIGV4dGVuZGluZyBJbnRlcmZhY2VBYmkgZnJvbSBFdGhlcnMuXG4gKiBAZXh0ZW5kcyBCYXNlQ29udHJhY3Q8U2FmZUNvbnRyYWN0QWJpVHlwZT4gLSBFeHRlbmRzIHRoZSBnZW5lcmljIEJhc2VDb250cmFjdC5cbiAqXG4gKiBFeGFtcGxlIHN1YmNsYXNzZXM6XG4gKiAtIFNhZmVDb250cmFjdF92MV80XzEgIGV4dGVuZHMgU2FmZUJhc2VDb250cmFjdDxTYWZlQ29udHJhY3RfdjFfNF8xX0FiaT5cbiAqIC0gU2FmZUNvbnRyYWN0X3YxXzNfMCAgZXh0ZW5kcyBTYWZlQmFzZUNvbnRyYWN0PFNhZmVDb250cmFjdF92MV8zXzBfQWJpPlxuICogLSBTYWZlQ29udHJhY3RfdjFfMl8wICBleHRlbmRzIFNhZmVCYXNlQ29udHJhY3Q8U2FmZUNvbnRyYWN0X3YxXzJfMF9BYmk+XG4gKiAtIFNhZmVDb250cmFjdF92MV8xXzEgIGV4dGVuZHMgU2FmZUJhc2VDb250cmFjdDxTYWZlQ29udHJhY3RfdjFfMV8xX0FiaT5cbiAqIC0gU2FmZUNvbnRyYWN0X3YxXzBfMCAgZXh0ZW5kcyBTYWZlQmFzZUNvbnRyYWN0PFNhZmVDb250cmFjdF92MV8wXzBfQWJpPlxuICovXG5jbGFzcyBTYWZlQmFzZUNvbnRyYWN0IGV4dGVuZHMgQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBTYWZlQmFzZUNvbnRyYWN0LlxuICAgICAqXG4gICAgICogQHBhcmFtIGNoYWluSWQgLSBUaGUgY2hhaW4gSUQgb2YgdGhlIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBzYWZlUHJvdmlkZXIgLSBBbiBpbnN0YW5jZSBvZiBTYWZlUHJvdmlkZXIuXG4gICAgICogQHBhcmFtIGRlZmF1bHRBYmkgLSBUaGUgZGVmYXVsdCBBQkkgZm9yIHRoZSBTYWZlIGNvbnRyYWN0LiBJdCBzaG91bGQgYmUgY29tcGF0aWJsZSB3aXRoIHRoZSBzcGVjaWZpYyB2ZXJzaW9uIG9mIHRoZSBTYWZlIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBzYWZlVmVyc2lvbiAtIFRoZSB2ZXJzaW9uIG9mIHRoZSBTYWZlIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBpc0wxU2FmZVNpbmdsZXRvbiAtIEEgZmxhZyBpbmRpY2F0aW5nIGlmIHRoZSBjb250cmFjdCBpcyBhIEwxIFNhZmUgU2luZ2xldG9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFkZHJlc3MgLSBPcHRpb25hbCBjdXN0b20gYWRkcmVzcyBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBhZGRyZXNzIGlzIGRlcml2ZWQgZnJvbSB0aGUgU2FmZSBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBBQkkgaXMgZGVyaXZlZCBmcm9tIHRoZSBTYWZlIGRlcGxveW1lbnRzIG9yIHRoZSBkZWZhdWx0QWJpIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgaXNMMVNhZmVTaW5nbGV0b24gPSBmYWxzZSwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSkge1xuICAgICAgICBjb25zdCBpc0wxQ29udHJhY3QgPSBjb25maWdfMS5zYWZlRGVwbG95bWVudHNMMUNoYWluSWRzLmluY2x1ZGVzKGNoYWluSWQpIHx8XG4gICAgICAgICAgICBpc0wxU2FmZVNpbmdsZXRvbiB8fFxuICAgICAgICAgICAgISgwLCB1dGlsc18xLmhhc1NhZmVGZWF0dXJlKSh1dGlsc18xLlNBRkVfRkVBVFVSRVMuU0FGRV9MMl9DT05UUkFDVFMsIHNhZmVWZXJzaW9uKTtcbiAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gaXNMMUNvbnRyYWN0ID8gJ3NhZmVTaW5nbGV0b25WZXJzaW9uJyA6ICdzYWZlU2luZ2xldG9uTDJWZXJzaW9uJztcbiAgICAgICAgc3VwZXIoY29udHJhY3ROYW1lLCBjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKTtcbiAgICAgICAgdGhpcy5jb250cmFjdE5hbWUgPSBjb250cmFjdE5hbWU7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gU2FmZUJhc2VDb250cmFjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNhZmVCYXNlQ29udHJhY3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.0.0/SafeContract_v1_0_0.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.0.0/SafeContract_v1_0_0.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/Safe/SafeBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js\"));\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst utils_2 = __webpack_require__(/*! ../../../utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\nconst constants_1 = __webpack_require__(/*! ../../../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\n/**\n * SafeContract_v1_0_0  is the implementation specific to the Safe contract version 1.0.0.\n *\n * This class specializes in handling interactions with the Safe contract version 1.0.0 using Ethers.js v6.\n *\n * @extends SafeBaseContract<SafeContract_v1_0_0_Abi> - Inherits from SafeBaseContract with ABI specific to Safe contract version 1.0.0.\n * @implements SafeContract_v1_0_0_Contract - Implements the interface specific to Safe contract version 1.0.0.\n */\nclass SafeContract_v1_0_0 extends SafeBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeContract_v1_0_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param isL1SafeSingleton - A flag indicating if the contract is a L1 Safe Singleton.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.0.0 is used.\n     */\n    constructor(chainId, safeProvider, isL1SafeSingleton = false, customContractAddress, customContractAbi) {\n        const safeVersion = '1.0.0';\n        const defaultAbi = safe_core_sdk_types_1.safe_1_0_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, isL1SafeSingleton, customContractAddress, customContractAbi);\n        /* ----- Specific v1.0.0 properties -----  */\n        this.DOMAIN_SEPARATOR_TYPEHASH = async () => {\n            return [await this.contract.DOMAIN_SEPARATOR_TYPEHASH()];\n        };\n        this.SENTINEL_MODULES = async () => {\n            return [await this.contract.SENTINEL_MODULES()];\n        };\n        this.SENTINEL_OWNERS = async () => {\n            return [await this.contract.SENTINEL_OWNERS()];\n        };\n        this.SAFE_MSG_TYPEHASH = async () => {\n            return [await this.contract.SAFE_MSG_TYPEHASH()];\n        };\n        this.SAFE_TX_TYPEHASH = async () => {\n            return [await this.contract.SAFE_TX_TYPEHASH()];\n        };\n        /* ----- End of specific v1.0.0 properties -----  */\n        /**\n         * @returns Array[contractName]\n         */\n        this.NAME = async () => {\n            return [await this.contract.NAME()];\n        };\n        /**\n         * @returns Array[safeContractVersion]\n         */\n        this.VERSION = async () => {\n            return [await this.contract.VERSION()];\n        };\n        /**\n         * @param args - Array[owner, txHash]\n         * @returns Array[approvedHashes]\n         */\n        this.approvedHashes = async (args) => {\n            return [await this.contract.approvedHashes(...args)];\n        };\n        /**\n         * @returns Array[domainSeparator]\n         */\n        this.domainSeparator = async () => {\n            return [await this.contract.domainSeparator()];\n        };\n        /**\n         * Returns array of modules.\n         * @returns Array[Array[modules]]\n         */\n        this.getModules = async () => {\n            return [await this.contract.getModules()];\n        };\n        /**\n         * Returns the list of Safe owner accounts.\n         * @returns Array[Array[owners]]\n         */\n        this.getOwners = async () => {\n            return [await this.contract.getOwners()];\n        };\n        /**\n         * Returns the Safe threshold.\n         * @returns Array[threshold]\n         */\n        this.getThreshold = async () => {\n            return [await this.contract.getThreshold()];\n        };\n        /**\n         * Checks if a specific address is an owner of the current Safe.\n         * @param args - Array[address]\n         * @returns Array[isOwner]\n         */\n        this.isOwner = async (args) => {\n            return [await this.contract.isOwner(...args)];\n        };\n        /**\n         * Returns the Safe nonce.\n         * @returns Array[nonce]\n         */\n        this.nonce = async () => {\n            return [await this.contract.nonce()];\n        };\n        /**\n         * @param args - Array[messageHash]\n         * @returns Array[signedMessages]\n         */\n        this.signedMessages = async (args) => {\n            return [await this.contract.signedMessages(...args)];\n        };\n        /**\n         * Returns hash of a message that can be signed by owners.\n         * @param args - Array[message]\n         * @returns Array[messageHash]\n         */\n        this.getMessageHash = async (args) => {\n            return [await this.contract.getMessageHash(...args)];\n        };\n        /**\n         * Returns the bytes that are hashed to be signed by owners.\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[encodedData]\n         */\n        this.encodeTransactionData = async (args) => {\n            return [await this.contract.encodeTransactionData(...args)];\n        };\n        /**\n         * Returns hash to be signed by owners.\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[transactionHash]\n         */\n        this.getTransactionHash = async (args) => {\n            return [await this.contract.getTransactionHash(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Marks a hash as approved. This can be used to validate a hash that is used by a signature.\n     * @param hash - The hash that should be marked as approved for signatures that are verified by this contract.\n     * @param options - Optional transaction options.\n     * @returns Transaction result.\n     */\n    async approveHash(hash, options) {\n        const gasLimit = options?.gasLimit || (await this.estimateGas('approveHash', [hash], options));\n        const txResponse = await this.contract.approveHash(hash, { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Executes a transaction.\n     * @param safeTransaction - The Safe transaction to execute.\n     * @param options - Transaction options.\n     * @returns Transaction result.\n     */\n    async execTransaction(safeTransaction, options) {\n        const gasLimit = options?.gasLimit ||\n            (await this.estimateGas('execTransaction', [\n                safeTransaction.data.to,\n                BigInt(safeTransaction.data.value),\n                safeTransaction.data.data,\n                safeTransaction.data.operation,\n                BigInt(safeTransaction.data.safeTxGas),\n                BigInt(safeTransaction.data.baseGas),\n                BigInt(safeTransaction.data.gasPrice),\n                safeTransaction.data.gasToken,\n                safeTransaction.data.refundReceiver,\n                safeTransaction.encodedSignatures()\n            ], options));\n        const txResponse = await this.contract.execTransaction(safeTransaction.data.to, safeTransaction.data.value, safeTransaction.data.data, safeTransaction.data.operation, safeTransaction.data.safeTxGas, safeTransaction.data.baseGas, safeTransaction.data.gasPrice, safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    async getModulesPaginated([start, pageSize]) {\n        if (pageSize <= 0)\n            throw new Error('Invalid page size for fetching paginated modules');\n        const size = Number(pageSize);\n        const [array] = await this.getModules();\n        if ((0, utils_2.isSentinelAddress)(start)) {\n            const next = pageSize < array.length ? array[size] : constants_1.SENTINEL_ADDRESS;\n            return [array.slice(0, size), next];\n        }\n        else {\n            const moduleIndex = array.findIndex((module) => (0, utils_2.sameString)(module, start));\n            if (moduleIndex === -1) {\n                return [[], constants_1.SENTINEL_ADDRESS];\n            }\n            const nextElementIndex = moduleIndex + 1;\n            const nextPageAddress = nextElementIndex + size < array.length ? array[nextElementIndex + size] : constants_1.SENTINEL_ADDRESS;\n            return [array.slice(moduleIndex + 1, nextElementIndex + size), nextPageAddress];\n        }\n    }\n    /**\n     * Checks if a specific Safe module is enabled for the current Safe.\n     * @param moduleAddress - The module address to check.\n     * @returns True, if the module with the given address is enabled.\n     */\n    async isModuleEnabled([moduleAddress]) {\n        const [modules] = await this.getModules();\n        const isModuleEnabled = modules.some((enabledModuleAddress) => (0, utils_2.sameString)(enabledModuleAddress, moduleAddress));\n        return [isModuleEnabled];\n    }\n    /**\n     * Checks whether a given Safe transaction can be executed successfully with no errors.\n     * @param safeTransaction - The Safe transaction to check.\n     * @param options - Optional transaction options.\n     * @returns True, if the given transactions is valid.\n     */\n    async isValidTransaction(safeTransaction, options = {}) {\n        try {\n            const gasLimit = options?.gasLimit ||\n                (await this.estimateGas('execTransaction', [\n                    safeTransaction.data.to,\n                    BigInt(safeTransaction.data.value),\n                    safeTransaction.data.data,\n                    safeTransaction.data.operation,\n                    BigInt(safeTransaction.data.safeTxGas),\n                    BigInt(safeTransaction.data.baseGas),\n                    BigInt(safeTransaction.data.gasPrice),\n                    safeTransaction.data.gasToken,\n                    safeTransaction.data.refundReceiver,\n                    safeTransaction.encodedSignatures()\n                ], options));\n            return await this.contract.execTransaction.staticCall(safeTransaction.data.to, BigInt(safeTransaction.data.value), safeTransaction.data.data, safeTransaction.data.operation, BigInt(safeTransaction.data.safeTxGas), BigInt(safeTransaction.data.baseGas), BigInt(safeTransaction.data.gasPrice), safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * returns the version of the Safe contract.\n     *\n     * @returns {Promise<SafeVersion>} A promise that resolves to the version of the Safe contract as string.\n     */\n    async getVersion() {\n        const [safeVersion] = await this.VERSION();\n        return safeVersion;\n    }\n    /**\n     * returns the nonce of the Safe contract.\n     *\n     * @returns {Promise<bigint>} A promise that resolves to the nonce of the Safe contract.\n     */\n    async getNonce() {\n        const [nonce] = await this.nonce();\n        return nonce;\n    }\n}\nexports[\"default\"] = SafeContract_v1_0_0;\n//# sourceMappingURL=SafeContract_v1_0_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.0.0/SafeContract_v1_0_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.1.1/SafeContract_v1_1_1.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.1.1/SafeContract_v1_1_1.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/Safe/SafeBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js\"));\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst utils_2 = __webpack_require__(/*! ../../../utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeContract_v1_1_1  is the implementation specific to the Safe contract version 1.1.1.\n *\n * This class specializes in handling interactions with the Safe contract version 1.1.1 using Ethers.js v6.\n *\n * @extends SafeBaseContract<SafeContract_v1_1_1_Abi> - Inherits from SafeBaseContract with ABI specific to Safe contract version 1.1.1.\n * @implements SafeContract_v1_1_1_Contract - Implements the interface specific to Safe contract version 1.1.1.\n */\nclass SafeContract_v1_1_1 extends SafeBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeContract_v1_1_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param isL1SafeSingleton - A flag indicating if the contract is a L1 Safe Singleton.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.1.1 is used.\n     */\n    constructor(chainId, safeProvider, isL1SafeSingleton = false, customContractAddress, customContractAbi) {\n        const safeVersion = '1.1.1';\n        const defaultAbi = safe_core_sdk_types_1.safe_1_1_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, isL1SafeSingleton, customContractAddress, customContractAbi);\n        /**\n         * @returns Array[contractName]\n         */\n        this.NAME = async () => {\n            return [await this.contract.NAME()];\n        };\n        /**\n         * @returns Array[safeContractVersion]\n         */\n        this.VERSION = async () => {\n            return [await this.contract.VERSION()];\n        };\n        /**\n         * @param args - Array[owner, txHash]\n         * @returns Array[approvedHashes]\n         */\n        this.approvedHashes = async (args) => {\n            return [await this.contract.approvedHashes(...args)];\n        };\n        /**\n         * @returns Array[domainSeparator]\n         */\n        this.domainSeparator = async () => {\n            return [await this.contract.domainSeparator()];\n        };\n        /**\n         * Returns array of first 10 modules.\n         * @returns Array[Array[modules]]\n         */\n        this.getModules = async () => {\n            return [await this.contract.getModules()];\n        };\n        /**\n         * Returns array of modules.\n         * @param args - Array[start, pageSize]\n         * @returns Array[Array[modules], next]\n         */\n        this.getModulesPaginated = async (args) => {\n            const res = await this.contract.getModulesPaginated(...args);\n            return [res.array, res.next];\n        };\n        /**\n         * Returns the list of Safe owner accounts.\n         * @returns Array[Array[owners]]\n         */\n        this.getOwners = async () => {\n            return [await this.contract.getOwners()];\n        };\n        /**\n         * Returns the Safe threshold.\n         * @returns Array[threshold]\n         */\n        this.getThreshold = async () => {\n            return [await this.contract.getThreshold()];\n        };\n        /**\n         * Checks if a specific address is an owner of the current Safe.\n         * @param args - Array[address]\n         * @returns Array[isOwner]\n         */\n        this.isOwner = async (args) => {\n            return [await this.contract.isOwner(...args)];\n        };\n        /**\n         * Returns the Safe nonce.\n         * @returns Array[nonce]\n         */\n        this.nonce = async () => {\n            return [await this.contract.nonce()];\n        };\n        /**\n         * @param args - Array[messageHash]\n         * @returns Array[signedMessages]\n         */\n        this.signedMessages = async (args) => {\n            return [await this.contract.signedMessages(...args)];\n        };\n        /**\n         * Returns hash of a message that can be signed by owners.\n         * @param args - Array[message]\n         * @returns Array[messageHash]\n         */\n        this.getMessageHash = async (args) => {\n            return [await this.contract.getMessageHash(...args)];\n        };\n        /**\n         * Returns the bytes that are hashed to be signed by owners.\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[encodedData]\n         */\n        this.encodeTransactionData = async (args) => {\n            return [await this.contract.encodeTransactionData(...args)];\n        };\n        /**\n         * Returns hash to be signed by owners.\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[transactionHash]\n         */\n        this.getTransactionHash = async (args) => {\n            return [await this.contract.getTransactionHash(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Marks a hash as approved. This can be used to validate a hash that is used by a signature.\n     * @param hash - The hash that should be marked as approved for signatures that are verified by this contract.\n     * @param options - Optional transaction options.\n     * @returns Transaction result.\n     */\n    async approveHash(hash, options) {\n        const gasLimit = options?.gasLimit || (await this.estimateGas('approveHash', [hash], options));\n        const txResponse = await this.contract.approveHash(hash, { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Executes a transaction.\n     * @param safeTransaction - The Safe transaction to execute.\n     * @param options - Transaction options.\n     * @returns Transaction result.\n     */\n    async execTransaction(safeTransaction, options) {\n        const gasLimit = options?.gasLimit ||\n            (await this.estimateGas('execTransaction', [\n                safeTransaction.data.to,\n                BigInt(safeTransaction.data.value),\n                safeTransaction.data.data,\n                safeTransaction.data.operation,\n                BigInt(safeTransaction.data.safeTxGas),\n                BigInt(safeTransaction.data.baseGas),\n                BigInt(safeTransaction.data.gasPrice),\n                safeTransaction.data.gasToken,\n                safeTransaction.data.refundReceiver,\n                safeTransaction.encodedSignatures()\n            ], options));\n        const txResponse = await this.contract.execTransaction(safeTransaction.data.to, safeTransaction.data.value, safeTransaction.data.data, safeTransaction.data.operation, safeTransaction.data.safeTxGas, safeTransaction.data.baseGas, safeTransaction.data.gasPrice, safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Checks if a specific Safe module is enabled for the current Safe.\n     * @param moduleAddress - The module address to check.\n     * @returns True, if the module with the given address is enabled.\n     */\n    async isModuleEnabled([moduleAddress]) {\n        const [modules] = await this.getModules();\n        const isModuleEnabled = modules.some((enabledModuleAddress) => (0, utils_2.sameString)(enabledModuleAddress, moduleAddress));\n        return [isModuleEnabled];\n    }\n    /**\n     * Checks whether a given Safe transaction can be executed successfully with no errors.\n     * @param safeTransaction - The Safe transaction to check.\n     * @param options - Optional transaction options.\n     * @returns True, if the given transactions is valid.\n     */\n    async isValidTransaction(safeTransaction, options = {}) {\n        try {\n            const gasLimit = options?.gasLimit ||\n                (await this.estimateGas('execTransaction', [\n                    safeTransaction.data.to,\n                    BigInt(safeTransaction.data.value),\n                    safeTransaction.data.data,\n                    safeTransaction.data.operation,\n                    BigInt(safeTransaction.data.safeTxGas),\n                    BigInt(safeTransaction.data.baseGas),\n                    BigInt(safeTransaction.data.gasPrice),\n                    safeTransaction.data.gasToken,\n                    safeTransaction.data.refundReceiver,\n                    safeTransaction.encodedSignatures()\n                ], options));\n            return await this.contract.execTransaction.staticCall(safeTransaction.data.to, BigInt(safeTransaction.data.value), safeTransaction.data.data, safeTransaction.data.operation, BigInt(safeTransaction.data.safeTxGas), BigInt(safeTransaction.data.baseGas), BigInt(safeTransaction.data.gasPrice), safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * returns the version of the Safe contract.\n     *\n     * @returns {Promise<SafeVersion>} A promise that resolves to the version of the Safe contract as string.\n     */\n    async getVersion() {\n        const [safeVersion] = await this.VERSION();\n        return safeVersion;\n    }\n    /**\n     * returns the nonce of the Safe contract.\n     *\n     * @returns {Promise<bigint>} A promise that resolves to the nonce of the Safe contract.\n     */\n    async getNonce() {\n        const [nonce] = await this.nonce();\n        return nonce;\n    }\n}\nexports[\"default\"] = SafeContract_v1_1_1;\n//# sourceMappingURL=SafeContract_v1_1_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.1.1/SafeContract_v1_1_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.2.0/SafeContract_v1_2_0.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.2.0/SafeContract_v1_2_0.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/Safe/SafeBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js\"));\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeContract_v1_2_0  is the implementation specific to the Safe contract version 1.2.0.\n *\n * This class specializes in handling interactions with the Safe contract version 1.2.0 using Ethers.js v6.\n *\n * @extends SafeBaseContract<SafeContract_v1_2_0_Abi> - Inherits from SafeBaseContract with ABI specific to Safe contract version 1.2.0.\n * @implements SafeContract_v1_2_0_Contract - Implements the interface specific to Safe contract version 1.2.0.\n */\nclass SafeContract_v1_2_0 extends SafeBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeContract_v1_2_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param isL1SafeSingleton - A flag indicating if the contract is a L1 Safe Singleton.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.2.0 is used.\n     */\n    constructor(chainId, safeProvider, isL1SafeSingleton = false, customContractAddress, customContractAbi) {\n        const safeVersion = '1.2.0';\n        const defaultAbi = safe_core_sdk_types_1.safe_1_2_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, isL1SafeSingleton, customContractAddress, customContractAbi);\n        /**\n         * @returns Array[contractName]\n         */\n        this.NAME = async () => {\n            return [await this.contract.NAME()];\n        };\n        /**\n         * @returns Array[safeContractVersion]\n         */\n        this.VERSION = async () => {\n            return [await this.contract.VERSION()];\n        };\n        /**\n         * @param args - Array[owner, txHash]\n         * @returns Array[approvedHashes]\n         */\n        this.approvedHashes = async (args) => {\n            return [await this.contract.approvedHashes(...args)];\n        };\n        /**\n         * @returns Array[domainSeparator]\n         */\n        this.domainSeparator = async () => {\n            return [await this.contract.domainSeparator()];\n        };\n        /**\n         * Returns array of first 10 modules.\n         * @returns Array[Array[modules]]\n         */\n        this.getModules = async () => {\n            return [await this.contract.getModules()];\n        };\n        /**\n         * Returns array of modules.\n         * @param args - Array[start, pageSize]\n         * @returns Array[Array[modules], next]\n         */\n        this.getModulesPaginated = async (args) => {\n            const res = await this.contract.getModulesPaginated(...args);\n            return [res.array, res.next];\n        };\n        /**\n         * Returns the list of Safe owner accounts.\n         * @returns Array[Array[owners]]\n         */\n        this.getOwners = async () => {\n            return [await this.contract.getOwners()];\n        };\n        /**\n         * Returns the Safe threshold.\n         * @returns Array[threshold]\n         */\n        this.getThreshold = async () => {\n            return [await this.contract.getThreshold()];\n        };\n        /**\n         * Checks if a specific Safe module is enabled for the current Safe.\n         * @param args - Array[moduleAddress]\n         * @returns Array[isEnabled]\n         */\n        this.isModuleEnabled = async (args) => {\n            return [await this.contract.isModuleEnabled(...args)];\n        };\n        /**\n         * Checks if a specific address is an owner of the current Safe.\n         * @param args - Array[address]\n         * @returns Array[isOwner]\n         */\n        this.isOwner = async (args) => {\n            return [await this.contract.isOwner(...args)];\n        };\n        /**\n         * Returns the Safe nonce.\n         * @returns Array[nonce]\n         */\n        this.nonce = async () => {\n            return [await this.contract.nonce()];\n        };\n        /**\n         * @param args - Array[messageHash]\n         * @returns Array[signedMessages]\n         */\n        this.signedMessages = async (args) => {\n            return [await this.contract.signedMessages(...args)];\n        };\n        /**\n         * @param args - Array[message]\n         * @returns Array[messageHash]\n         */\n        this.getMessageHash = async (args) => {\n            return [await this.contract.getMessageHash(...args)];\n        };\n        /**\n         * Encodes the data for a transaction to the Safe contract.\n         *\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[encodedData]\n         */\n        this.encodeTransactionData = async (args) => {\n            return [await this.contract.encodeTransactionData(...args)];\n        };\n        /**\n         * Returns hash to be signed by owners.\n         *\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[transactionHash]\n         */\n        this.getTransactionHash = async (args) => {\n            return [await this.contract.getTransactionHash(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Marks a hash as approved. This can be used to validate a hash that is used by a signature.\n     * @param hash - The hash that should be marked as approved for signatures that are verified by this contract.\n     * @param options - Optional transaction options.\n     * @returns Transaction result.\n     */\n    async approveHash(hash, options) {\n        const gasLimit = options?.gasLimit || (await this.estimateGas('approveHash', [hash], options));\n        const txResponse = await this.contract.approveHash(hash, { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Executes a transaction.\n     * @param safeTransaction - The Safe transaction to execute.\n     * @param options - Transaction options.\n     * @returns Transaction result.\n     */\n    async execTransaction(safeTransaction, options) {\n        const gasLimit = options?.gasLimit ||\n            (await this.estimateGas('execTransaction', [\n                safeTransaction.data.to,\n                BigInt(safeTransaction.data.value),\n                safeTransaction.data.data,\n                safeTransaction.data.operation,\n                BigInt(safeTransaction.data.safeTxGas),\n                BigInt(safeTransaction.data.baseGas),\n                BigInt(safeTransaction.data.gasPrice),\n                safeTransaction.data.gasToken,\n                safeTransaction.data.refundReceiver,\n                safeTransaction.encodedSignatures()\n            ], options));\n        const txResponse = await this.contract.execTransaction(safeTransaction.data.to, safeTransaction.data.value, safeTransaction.data.data, safeTransaction.data.operation, safeTransaction.data.safeTxGas, safeTransaction.data.baseGas, safeTransaction.data.gasPrice, safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Returns the chain id of the Safe contract. (Custom method - not defined in the Safe Contract)\n     * @returns Array[chainId]\n     */\n    async getChainId() {\n        return [await this.contract.getChainId()];\n    }\n    /**\n     * Checks whether a given Safe transaction can be executed successfully with no errors.\n     * @param safeTransaction - The Safe transaction to check.\n     * @param options - Optional transaction options.\n     * @returns True, if the given transactions is valid.\n     */\n    async isValidTransaction(safeTransaction, options = {}) {\n        try {\n            const gasLimit = options?.gasLimit ||\n                (await this.estimateGas('execTransaction', [\n                    safeTransaction.data.to,\n                    BigInt(safeTransaction.data.value),\n                    safeTransaction.data.data,\n                    safeTransaction.data.operation,\n                    BigInt(safeTransaction.data.safeTxGas),\n                    BigInt(safeTransaction.data.baseGas),\n                    BigInt(safeTransaction.data.gasPrice),\n                    safeTransaction.data.gasToken,\n                    safeTransaction.data.refundReceiver,\n                    safeTransaction.encodedSignatures()\n                ], options));\n            return await this.contract.execTransaction.staticCall(safeTransaction.data.to, BigInt(safeTransaction.data.value), safeTransaction.data.data, safeTransaction.data.operation, BigInt(safeTransaction.data.safeTxGas), BigInt(safeTransaction.data.baseGas), BigInt(safeTransaction.data.gasPrice), safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * returns the version of the Safe contract.\n     *\n     * @returns {Promise<SafeVersion>} A promise that resolves to the version of the Safe contract as string.\n     */\n    async getVersion() {\n        const [safeVersion] = await this.VERSION();\n        return safeVersion;\n    }\n    /**\n     * returns the nonce of the Safe contract.\n     *\n     * @returns {Promise<bigint>} A promise that resolves to the nonce of the Safe contract.\n     */\n    async getNonce() {\n        const [nonce] = await this.nonce();\n        return nonce;\n    }\n}\nexports[\"default\"] = SafeContract_v1_2_0;\n//# sourceMappingURL=SafeContract_v1_2_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlL3YxLjIuMC9TYWZlQ29udHJhY3RfdjFfMl8wLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkNBQTJDLG1CQUFPLENBQUMsZ05BQTBDO0FBQzdGLGdCQUFnQixtQkFBTyxDQUFDLGdMQUEwQjtBQUNsRCw4QkFBOEIsbUJBQU8sQ0FBQyw0TEFBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsc0JBQXNCO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdVhBQXVYLHNCQUFzQjtBQUM3WTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBaQUEwWixzQkFBc0I7QUFDaGI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzQkFBc0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlL3YxLjIuMC9TYWZlQ29udHJhY3RfdjFfMl8wLmpzPzc3YjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBTYWZlQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uLy4uL2NvbnRyYWN0cy9TYWZlL1NhZmVCYXNlQ29udHJhY3RcIikpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb250cmFjdHMvdXRpbHNcIik7XG5jb25zdCBzYWZlX2NvcmVfc2RrX3R5cGVzXzEgPSByZXF1aXJlKFwiQHNhZmUtZ2xvYmFsL3NhZmUtY29yZS1zZGstdHlwZXNcIik7XG4vKipcbiAqIFNhZmVDb250cmFjdF92MV8yXzAgIGlzIHRoZSBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyB0byB0aGUgU2FmZSBjb250cmFjdCB2ZXJzaW9uIDEuMi4wLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIFNhZmUgY29udHJhY3QgdmVyc2lvbiAxLjIuMCB1c2luZyBFdGhlcnMuanMgdjYuXG4gKlxuICogQGV4dGVuZHMgU2FmZUJhc2VDb250cmFjdDxTYWZlQ29udHJhY3RfdjFfMl8wX0FiaT4gLSBJbmhlcml0cyBmcm9tIFNhZmVCYXNlQ29udHJhY3Qgd2l0aCBBQkkgc3BlY2lmaWMgdG8gU2FmZSBjb250cmFjdCB2ZXJzaW9uIDEuMi4wLlxuICogQGltcGxlbWVudHMgU2FmZUNvbnRyYWN0X3YxXzJfMF9Db250cmFjdCAtIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpYyB0byBTYWZlIGNvbnRyYWN0IHZlcnNpb24gMS4yLjAuXG4gKi9cbmNsYXNzIFNhZmVDb250cmFjdF92MV8yXzAgZXh0ZW5kcyBTYWZlQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBTYWZlQ29udHJhY3RfdjFfMl8wXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCB3aGVyZSB0aGUgY29udHJhY3QgcmVzaWRlcy5cbiAgICAgKiBAcGFyYW0gc2FmZVByb3ZpZGVyIC0gQW4gaW5zdGFuY2Ugb2YgU2FmZVByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBpc0wxU2FmZVNpbmdsZXRvbiAtIEEgZmxhZyBpbmRpY2F0aW5nIGlmIHRoZSBjb250cmFjdCBpcyBhIEwxIFNhZmUgU2luZ2xldG9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFkZHJlc3MgLSBPcHRpb25hbCBjdXN0b20gYWRkcmVzcyBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBhZGRyZXNzIGlzIGRlcml2ZWQgZnJvbSB0aGUgU2FmZSBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBkZWZhdWx0IEFCSSBmb3IgdmVyc2lvbiAxLjIuMCBpcyB1c2VkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNoYWluSWQsIHNhZmVQcm92aWRlciwgaXNMMVNhZmVTaW5nbGV0b24gPSBmYWxzZSwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSkge1xuICAgICAgICBjb25zdCBzYWZlVmVyc2lvbiA9ICcxLjIuMCc7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRBYmkgPSBzYWZlX2NvcmVfc2RrX3R5cGVzXzEuc2FmZV8xXzJfMF9Db250cmFjdEFydGlmYWN0cy5hYmk7XG4gICAgICAgIHN1cGVyKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGlzTDFTYWZlU2luZ2xldG9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W2NvbnRyYWN0TmFtZV1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuTkFNRSA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5OQU1FKCldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQHJldHVybnMgQXJyYXlbc2FmZUNvbnRyYWN0VmVyc2lvbl1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuVkVSU0lPTiA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5WRVJTSU9OKCldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVtvd25lciwgdHhIYXNoXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVthcHByb3ZlZEhhc2hlc11cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYXBwcm92ZWRIYXNoZXMgPSBhc3luYyAoYXJncykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIFthd2FpdCB0aGlzLmNvbnRyYWN0LmFwcHJvdmVkSGFzaGVzKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W2RvbWFpblNlcGFyYXRvcl1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZG9tYWluU2VwYXJhdG9yID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIFthd2FpdCB0aGlzLmNvbnRyYWN0LmRvbWFpblNlcGFyYXRvcigpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgYXJyYXkgb2YgZmlyc3QgMTAgbW9kdWxlcy5cbiAgICAgICAgICogQHJldHVybnMgQXJyYXlbQXJyYXlbbW9kdWxlc11dXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdldE1vZHVsZXMgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuZ2V0TW9kdWxlcygpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgYXJyYXkgb2YgbW9kdWxlcy5cbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVtzdGFydCwgcGFnZVNpemVdXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W0FycmF5W21vZHVsZXNdLCBuZXh0XVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5nZXRNb2R1bGVzUGFnaW5hdGVkID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuY29udHJhY3QuZ2V0TW9kdWxlc1BhZ2luYXRlZCguLi5hcmdzKTtcbiAgICAgICAgICAgIHJldHVybiBbcmVzLmFycmF5LCByZXMubmV4dF07XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIHRoZSBsaXN0IG9mIFNhZmUgb3duZXIgYWNjb3VudHMuXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W0FycmF5W293bmVyc11dXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdldE93bmVycyA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5nZXRPd25lcnMoKV07XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIHRoZSBTYWZlIHRocmVzaG9sZC5cbiAgICAgICAgICogQHJldHVybnMgQXJyYXlbdGhyZXNob2xkXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5nZXRUaHJlc2hvbGQgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuZ2V0VGhyZXNob2xkKCldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQ2hlY2tzIGlmIGEgc3BlY2lmaWMgU2FmZSBtb2R1bGUgaXMgZW5hYmxlZCBmb3IgdGhlIGN1cnJlbnQgU2FmZS5cbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVttb2R1bGVBZGRyZXNzXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtpc0VuYWJsZWRdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmlzTW9kdWxlRW5hYmxlZCA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuaXNNb2R1bGVFbmFibGVkKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENoZWNrcyBpZiBhIHNwZWNpZmljIGFkZHJlc3MgaXMgYW4gb3duZXIgb2YgdGhlIGN1cnJlbnQgU2FmZS5cbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVthZGRyZXNzXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtpc093bmVyXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5pc093bmVyID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5pc093bmVyKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgdGhlIFNhZmUgbm9uY2UuXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W25vbmNlXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5ub25jZSA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5ub25jZSgpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbbWVzc2FnZUhhc2hdXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W3NpZ25lZE1lc3NhZ2VzXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zaWduZWRNZXNzYWdlcyA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3Quc2lnbmVkTWVzc2FnZXMoLi4uYXJncyldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVttZXNzYWdlXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVttZXNzYWdlSGFzaF1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ2V0TWVzc2FnZUhhc2ggPSBhc3luYyAoYXJncykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIFthd2FpdCB0aGlzLmNvbnRyYWN0LmdldE1lc3NhZ2VIYXNoKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEVuY29kZXMgdGhlIGRhdGEgZm9yIGEgdHJhbnNhY3Rpb24gdG8gdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbdG8sIHZhbHVlLCBkYXRhLCBvcGVyYXRpb24sIHNhZmVUeEdhcywgYmFzZUdhcywgZ2FzUHJpY2UsIGdhc1Rva2VuLCByZWZ1bmRSZWNlaXZlciwgX25vbmNlXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtlbmNvZGVkRGF0YV1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZW5jb2RlVHJhbnNhY3Rpb25EYXRhID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5lbmNvZGVUcmFuc2FjdGlvbkRhdGEoLi4uYXJncyldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogUmV0dXJucyBoYXNoIHRvIGJlIHNpZ25lZCBieSBvd25lcnMuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbdG8sIHZhbHVlLCBkYXRhLCBvcGVyYXRpb24sIHNhZmVUeEdhcywgYmFzZUdhcywgZ2FzUHJpY2UsIGdhc1Rva2VuLCByZWZ1bmRSZWNlaXZlciwgX25vbmNlXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVt0cmFuc2FjdGlvbkhhc2hdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdldFRyYW5zYWN0aW9uSGFzaCA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuZ2V0VHJhbnNhY3Rpb25IYXNoKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zYWZlVmVyc2lvbiA9IHNhZmVWZXJzaW9uO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNYXJrcyBhIGhhc2ggYXMgYXBwcm92ZWQuIFRoaXMgY2FuIGJlIHVzZWQgdG8gdmFsaWRhdGUgYSBoYXNoIHRoYXQgaXMgdXNlZCBieSBhIHNpZ25hdHVyZS5cbiAgICAgKiBAcGFyYW0gaGFzaCAtIFRoZSBoYXNoIHRoYXQgc2hvdWxkIGJlIG1hcmtlZCBhcyBhcHByb3ZlZCBmb3Igc2lnbmF0dXJlcyB0aGF0IGFyZSB2ZXJpZmllZCBieSB0aGlzIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9uYWwgdHJhbnNhY3Rpb24gb3B0aW9ucy5cbiAgICAgKiBAcmV0dXJucyBUcmFuc2FjdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgYXN5bmMgYXBwcm92ZUhhc2goaGFzaCwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBnYXNMaW1pdCA9IG9wdGlvbnM/Lmdhc0xpbWl0IHx8IChhd2FpdCB0aGlzLmVzdGltYXRlR2FzKCdhcHByb3ZlSGFzaCcsIFtoYXNoXSwgb3B0aW9ucykpO1xuICAgICAgICBjb25zdCB0eFJlc3BvbnNlID0gYXdhaXQgdGhpcy5jb250cmFjdC5hcHByb3ZlSGFzaChoYXNoLCB7IC4uLm9wdGlvbnMsIGdhc0xpbWl0IH0pO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEudG9UeFJlc3VsdCkodHhSZXNwb25zZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGVzIGEgdHJhbnNhY3Rpb24uXG4gICAgICogQHBhcmFtIHNhZmVUcmFuc2FjdGlvbiAtIFRoZSBTYWZlIHRyYW5zYWN0aW9uIHRvIGV4ZWN1dGUuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBUcmFuc2FjdGlvbiBvcHRpb25zLlxuICAgICAqIEByZXR1cm5zIFRyYW5zYWN0aW9uIHJlc3VsdC5cbiAgICAgKi9cbiAgICBhc3luYyBleGVjVHJhbnNhY3Rpb24oc2FmZVRyYW5zYWN0aW9uLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGdhc0xpbWl0ID0gb3B0aW9ucz8uZ2FzTGltaXQgfHxcbiAgICAgICAgICAgIChhd2FpdCB0aGlzLmVzdGltYXRlR2FzKCdleGVjVHJhbnNhY3Rpb24nLCBbXG4gICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmRhdGEudG8sXG4gICAgICAgICAgICAgICAgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLnZhbHVlKSxcbiAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS5kYXRhLFxuICAgICAgICAgICAgICAgIHNhZmVUcmFuc2FjdGlvbi5kYXRhLm9wZXJhdGlvbixcbiAgICAgICAgICAgICAgICBCaWdJbnQoc2FmZVRyYW5zYWN0aW9uLmRhdGEuc2FmZVR4R2FzKSxcbiAgICAgICAgICAgICAgICBCaWdJbnQoc2FmZVRyYW5zYWN0aW9uLmRhdGEuYmFzZUdhcyksXG4gICAgICAgICAgICAgICAgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLmdhc1ByaWNlKSxcbiAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS5nYXNUb2tlbixcbiAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS5yZWZ1bmRSZWNlaXZlcixcbiAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZW5jb2RlZFNpZ25hdHVyZXMoKVxuICAgICAgICAgICAgXSwgb3B0aW9ucykpO1xuICAgICAgICBjb25zdCB0eFJlc3BvbnNlID0gYXdhaXQgdGhpcy5jb250cmFjdC5leGVjVHJhbnNhY3Rpb24oc2FmZVRyYW5zYWN0aW9uLmRhdGEudG8sIHNhZmVUcmFuc2FjdGlvbi5kYXRhLnZhbHVlLCBzYWZlVHJhbnNhY3Rpb24uZGF0YS5kYXRhLCBzYWZlVHJhbnNhY3Rpb24uZGF0YS5vcGVyYXRpb24sIHNhZmVUcmFuc2FjdGlvbi5kYXRhLnNhZmVUeEdhcywgc2FmZVRyYW5zYWN0aW9uLmRhdGEuYmFzZUdhcywgc2FmZVRyYW5zYWN0aW9uLmRhdGEuZ2FzUHJpY2UsIHNhZmVUcmFuc2FjdGlvbi5kYXRhLmdhc1Rva2VuLCBzYWZlVHJhbnNhY3Rpb24uZGF0YS5yZWZ1bmRSZWNlaXZlciwgc2FmZVRyYW5zYWN0aW9uLmVuY29kZWRTaWduYXR1cmVzKCksIHsgLi4ub3B0aW9ucywgZ2FzTGltaXQgfSk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfMS50b1R4UmVzdWx0KSh0eFJlc3BvbnNlLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY2hhaW4gaWQgb2YgdGhlIFNhZmUgY29udHJhY3QuIChDdXN0b20gbWV0aG9kIC0gbm90IGRlZmluZWQgaW4gdGhlIFNhZmUgQ29udHJhY3QpXG4gICAgICogQHJldHVybnMgQXJyYXlbY2hhaW5JZF1cbiAgICAgKi9cbiAgICBhc3luYyBnZXRDaGFpbklkKCkge1xuICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuZ2V0Q2hhaW5JZCgpXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgYSBnaXZlbiBTYWZlIHRyYW5zYWN0aW9uIGNhbiBiZSBleGVjdXRlZCBzdWNjZXNzZnVsbHkgd2l0aCBubyBlcnJvcnMuXG4gICAgICogQHBhcmFtIHNhZmVUcmFuc2FjdGlvbiAtIFRoZSBTYWZlIHRyYW5zYWN0aW9uIHRvIGNoZWNrLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9uYWwgdHJhbnNhY3Rpb24gb3B0aW9ucy5cbiAgICAgKiBAcmV0dXJucyBUcnVlLCBpZiB0aGUgZ2l2ZW4gdHJhbnNhY3Rpb25zIGlzIHZhbGlkLlxuICAgICAqL1xuICAgIGFzeW5jIGlzVmFsaWRUcmFuc2FjdGlvbihzYWZlVHJhbnNhY3Rpb24sIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZ2FzTGltaXQgPSBvcHRpb25zPy5nYXNMaW1pdCB8fFxuICAgICAgICAgICAgICAgIChhd2FpdCB0aGlzLmVzdGltYXRlR2FzKCdleGVjVHJhbnNhY3Rpb24nLCBbXG4gICAgICAgICAgICAgICAgICAgIHNhZmVUcmFuc2FjdGlvbi5kYXRhLnRvLFxuICAgICAgICAgICAgICAgICAgICBCaWdJbnQoc2FmZVRyYW5zYWN0aW9uLmRhdGEudmFsdWUpLFxuICAgICAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS5kYXRhLFxuICAgICAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS5vcGVyYXRpb24sXG4gICAgICAgICAgICAgICAgICAgIEJpZ0ludChzYWZlVHJhbnNhY3Rpb24uZGF0YS5zYWZlVHhHYXMpLFxuICAgICAgICAgICAgICAgICAgICBCaWdJbnQoc2FmZVRyYW5zYWN0aW9uLmRhdGEuYmFzZUdhcyksXG4gICAgICAgICAgICAgICAgICAgIEJpZ0ludChzYWZlVHJhbnNhY3Rpb24uZGF0YS5nYXNQcmljZSksXG4gICAgICAgICAgICAgICAgICAgIHNhZmVUcmFuc2FjdGlvbi5kYXRhLmdhc1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS5yZWZ1bmRSZWNlaXZlcixcbiAgICAgICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmVuY29kZWRTaWduYXR1cmVzKClcbiAgICAgICAgICAgICAgICBdLCBvcHRpb25zKSk7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5jb250cmFjdC5leGVjVHJhbnNhY3Rpb24uc3RhdGljQ2FsbChzYWZlVHJhbnNhY3Rpb24uZGF0YS50bywgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLnZhbHVlKSwgc2FmZVRyYW5zYWN0aW9uLmRhdGEuZGF0YSwgc2FmZVRyYW5zYWN0aW9uLmRhdGEub3BlcmF0aW9uLCBCaWdJbnQoc2FmZVRyYW5zYWN0aW9uLmRhdGEuc2FmZVR4R2FzKSwgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLmJhc2VHYXMpLCBCaWdJbnQoc2FmZVRyYW5zYWN0aW9uLmRhdGEuZ2FzUHJpY2UpLCBzYWZlVHJhbnNhY3Rpb24uZGF0YS5nYXNUb2tlbiwgc2FmZVRyYW5zYWN0aW9uLmRhdGEucmVmdW5kUmVjZWl2ZXIsIHNhZmVUcmFuc2FjdGlvbi5lbmNvZGVkU2lnbmF0dXJlcygpLCB7IC4uLm9wdGlvbnMsIGdhc0xpbWl0IH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJldHVybnMgdGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxTYWZlVmVyc2lvbj59IEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSB2ZXJzaW9uIG9mIHRoZSBTYWZlIGNvbnRyYWN0IGFzIHN0cmluZy5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRWZXJzaW9uKCkge1xuICAgICAgICBjb25zdCBbc2FmZVZlcnNpb25dID0gYXdhaXQgdGhpcy5WRVJTSU9OKCk7XG4gICAgICAgIHJldHVybiBzYWZlVmVyc2lvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogcmV0dXJucyB0aGUgbm9uY2Ugb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxiaWdpbnQ+fSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgbm9uY2Ugb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICovXG4gICAgYXN5bmMgZ2V0Tm9uY2UoKSB7XG4gICAgICAgIGNvbnN0IFtub25jZV0gPSBhd2FpdCB0aGlzLm5vbmNlKCk7XG4gICAgICAgIHJldHVybiBub25jZTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBTYWZlQ29udHJhY3RfdjFfMl8wO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2FmZUNvbnRyYWN0X3YxXzJfMC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.2.0/SafeContract_v1_2_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.3.0/SafeContract_v1_3_0.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.3.0/SafeContract_v1_3_0.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/Safe/SafeBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js\"));\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst constants_1 = __webpack_require__(/*! ../../../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeContract_v1_3_0  is the implementation specific to the Safe contract version 1.3.0.\n *\n * This class specializes in handling interactions with the Safe contract version 1.3.0 using Ethers.js v6.\n *\n * @extends SafeBaseContract<SafeContract_v1_3_0_Abi> - Inherits from SafeBaseContract with ABI specific to Safe contract version 1.3.0.\n * @implements SafeContract_v1_3_0_Contract - Implements the interface specific to Safe contract version 1.3.0.\n */\nclass SafeContract_v1_3_0 extends SafeBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeContract_v1_3_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param isL1SafeSingleton - A flag indicating if the contract is a L1 Safe Singleton.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.3.0 is used.\n     */\n    constructor(chainId, safeProvider, isL1SafeSingleton = false, customContractAddress, customContractAbi) {\n        const safeVersion = '1.3.0';\n        const defaultAbi = safe_core_sdk_types_1.safe_1_3_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, isL1SafeSingleton, customContractAddress, customContractAbi);\n        /**\n         * @returns Array[safeContractVersion]\n         */\n        this.VERSION = async () => {\n            return [await this.contract.VERSION()];\n        };\n        /**\n         * @param args - Array[owner, txHash]\n         * @returns Array[approvedHashes]\n         */\n        this.approvedHashes = async (args) => {\n            return [await this.contract.approvedHashes(...args)];\n        };\n        /**\n         * Checks whether the signature provided is valid for the provided data, hash and number of required signatures.\n         * Will revert otherwise.\n         * @param args - Array[dataHash, data, signatures, requiredSignatures]\n         * @returns Empty array\n         */\n        this.checkNSignatures = async (args) => {\n            await this.contract.checkNSignatures(...args);\n            return [];\n        };\n        /**\n         * Checks whether the signature provided is valid for the provided data and hash. Will revert otherwise.\n         * @param args - Array[dataHash, data, signatures]\n         * @returns Empty array\n         */\n        this.checkSignatures = async (args) => {\n            await this.contract.checkSignatures(...args);\n            return [];\n        };\n        /**\n         * @returns Array[domainSeparator]\n         */\n        this.domainSeparator = async () => {\n            return [await this.contract.domainSeparator()];\n        };\n        /**\n         * Encodes the data for a transaction to the Safe contract.\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[encodedData]\n         */\n        this.encodeTransactionData = async (args) => {\n            return [await this.contract.encodeTransactionData(...args)];\n        };\n        /**\n         * Returns array of modules.\n         * @param args - Array[start, pageSize]\n         * @returns Array[Array[modules], next]\n         */\n        this.getModulesPaginated = async (args) => {\n            const res = await this.contract.getModulesPaginated(...args);\n            return [res.array, res.next];\n        };\n        /**\n         * Returns the list of Safe owner accounts.\n         * @returns Array[Array[owners]]\n         */\n        this.getOwners = async () => {\n            return [await this.contract.getOwners()];\n        };\n        /**\n         * Reads `length` bytes of storage in the currents contract\n         * @param args - Array[offset, length]\n         * @returns Array[storage]\n         */\n        this.getStorageAt = async (args) => {\n            return [await this.contract.getStorageAt(...args)];\n        };\n        /**\n         * Returns the Safe threshold.\n         * @returns Array[threshold]\n         */\n        this.getThreshold = async () => {\n            return [await this.contract.getThreshold()];\n        };\n        /**\n         * Returns hash to be signed by owners.\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[transactionHash]\n         */\n        this.getTransactionHash = async (args) => {\n            return [await this.contract.getTransactionHash(...args)];\n        };\n        /**\n         * Checks if a specific Safe module is enabled for the current Safe.\n         * @param args - Array[moduleAddress]\n         * @returns Array[isEnabled]\n         */\n        this.isModuleEnabled = async (args) => {\n            return [await this.contract.isModuleEnabled(...args)];\n        };\n        /**\n         * Checks if a specific address is an owner of the current Safe.\n         * @param args - Array[address]\n         * @returns Array[isOwner]\n         */\n        this.isOwner = async (args) => {\n            return [await this.contract.isOwner(...args)];\n        };\n        /**\n         * Returns the Safe nonce.\n         * @returns Array[nonce]\n         */\n        this.nonce = async () => {\n            return [await this.contract.nonce()];\n        };\n        /**\n         * @param args - Array[messageHash]\n         * @returns Array[signedMessages]\n         */\n        this.signedMessages = async (args) => {\n            return [await this.contract.signedMessages(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Checks whether a given Safe transaction can be executed successfully with no errors.\n     * @param safeTransaction - The Safe transaction to check.\n     * @param options - Optional transaction options.\n     * @returns True, if the given transactions is valid.\n     */\n    async isValidTransaction(safeTransaction, options = {}) {\n        try {\n            const gasLimit = options?.gasLimit ||\n                (await this.estimateGas('execTransaction', [\n                    safeTransaction.data.to,\n                    BigInt(safeTransaction.data.value),\n                    safeTransaction.data.data,\n                    safeTransaction.data.operation,\n                    BigInt(safeTransaction.data.safeTxGas),\n                    BigInt(safeTransaction.data.baseGas),\n                    BigInt(safeTransaction.data.gasPrice),\n                    safeTransaction.data.gasToken,\n                    safeTransaction.data.refundReceiver,\n                    safeTransaction.encodedSignatures()\n                ], options));\n            return await this.contract.execTransaction.staticCall(safeTransaction.data.to, BigInt(safeTransaction.data.value), safeTransaction.data.data, safeTransaction.data.operation, BigInt(safeTransaction.data.safeTxGas), BigInt(safeTransaction.data.baseGas), BigInt(safeTransaction.data.gasPrice), safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * Executes a transaction.\n     * @param safeTransaction - The Safe transaction to execute.\n     * @param options - Transaction options.\n     * @returns Transaction result.\n     */\n    async execTransaction(safeTransaction, options) {\n        const gasLimit = options?.gasLimit ||\n            (await this.estimateGas('execTransaction', [\n                safeTransaction.data.to,\n                BigInt(safeTransaction.data.value),\n                safeTransaction.data.data,\n                safeTransaction.data.operation,\n                BigInt(safeTransaction.data.safeTxGas),\n                BigInt(safeTransaction.data.baseGas),\n                BigInt(safeTransaction.data.gasPrice),\n                safeTransaction.data.gasToken,\n                safeTransaction.data.refundReceiver,\n                safeTransaction.encodedSignatures()\n            ], options));\n        const txResponse = await this.contract.execTransaction(safeTransaction.data.to, safeTransaction.data.value, safeTransaction.data.data, safeTransaction.data.operation, safeTransaction.data.safeTxGas, safeTransaction.data.baseGas, safeTransaction.data.gasPrice, safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Returns array of first 10 modules.\n     * @returns Array[modules]\n     */\n    async getModules() {\n        const [modules] = await this.getModulesPaginated([constants_1.SENTINEL_ADDRESS, BigInt(10)]);\n        return [modules.map((module) => module)];\n    }\n    /**\n     * Marks a hash as approved. This can be used to validate a hash that is used by a signature.\n     * @param hash - The hash that should be marked as approved for signatures that are verified by this contract.\n     * @param options - Optional transaction options.\n     * @returns Transaction result.\n     */\n    async approveHash(hash, options) {\n        const gasLimit = options?.gasLimit || (await this.estimateGas('approveHash', [hash], options));\n        const txResponse = await this.contract.approveHash(hash, { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Returns the chain id of the Safe contract. (Custom method - not defined in the Safe Contract)\n     * @returns Array[chainId]\n     */\n    async getChainId() {\n        return [await this.contract.getChainId()];\n    }\n    /**\n     * returns the version of the Safe contract.\n     *\n     * @returns {Promise<SafeVersion>} A promise that resolves to the version of the Safe contract as string.\n     */\n    async getVersion() {\n        const [safeVersion] = await this.VERSION();\n        return safeVersion;\n    }\n    /**\n     * returns the nonce of the Safe contract.\n     *\n     * @returns {Promise<bigint>} A promise that resolves to the nonce of the Safe contract.\n     */\n    async getNonce() {\n        const [nonce] = await this.nonce();\n        return nonce;\n    }\n}\nexports[\"default\"] = SafeContract_v1_3_0;\n//# sourceMappingURL=SafeContract_v1_3_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlL3YxLjMuMC9TYWZlQ29udHJhY3RfdjFfM18wLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkNBQTJDLG1CQUFPLENBQUMsZ05BQTBDO0FBQzdGLGdCQUFnQixtQkFBTyxDQUFDLGdMQUEwQjtBQUNsRCxvQkFBb0IsbUJBQU8sQ0FBQyxnTEFBMEI7QUFDdEQsOEJBQThCLG1CQUFPLENBQUMsNExBQWtDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwWkFBMFosc0JBQXNCO0FBQ2hiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdVhBQXVYLHNCQUFzQjtBQUM3WTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsc0JBQXNCO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzQkFBc0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlL3YxLjMuMC9TYWZlQ29udHJhY3RfdjFfM18wLmpzPzI2YjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBTYWZlQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uLy4uL2NvbnRyYWN0cy9TYWZlL1NhZmVCYXNlQ29udHJhY3RcIikpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb250cmFjdHMvdXRpbHNcIik7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9jb25zdGFudHNcIik7XG5jb25zdCBzYWZlX2NvcmVfc2RrX3R5cGVzXzEgPSByZXF1aXJlKFwiQHNhZmUtZ2xvYmFsL3NhZmUtY29yZS1zZGstdHlwZXNcIik7XG4vKipcbiAqIFNhZmVDb250cmFjdF92MV8zXzAgIGlzIHRoZSBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyB0byB0aGUgU2FmZSBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIFNhZmUgY29udHJhY3QgdmVyc2lvbiAxLjMuMCB1c2luZyBFdGhlcnMuanMgdjYuXG4gKlxuICogQGV4dGVuZHMgU2FmZUJhc2VDb250cmFjdDxTYWZlQ29udHJhY3RfdjFfM18wX0FiaT4gLSBJbmhlcml0cyBmcm9tIFNhZmVCYXNlQ29udHJhY3Qgd2l0aCBBQkkgc3BlY2lmaWMgdG8gU2FmZSBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICogQGltcGxlbWVudHMgU2FmZUNvbnRyYWN0X3YxXzNfMF9Db250cmFjdCAtIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpYyB0byBTYWZlIGNvbnRyYWN0IHZlcnNpb24gMS4zLjAuXG4gKi9cbmNsYXNzIFNhZmVDb250cmFjdF92MV8zXzAgZXh0ZW5kcyBTYWZlQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBTYWZlQ29udHJhY3RfdjFfM18wXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCB3aGVyZSB0aGUgY29udHJhY3QgcmVzaWRlcy5cbiAgICAgKiBAcGFyYW0gc2FmZVByb3ZpZGVyIC0gQW4gaW5zdGFuY2Ugb2YgU2FmZVByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBpc0wxU2FmZVNpbmdsZXRvbiAtIEEgZmxhZyBpbmRpY2F0aW5nIGlmIHRoZSBjb250cmFjdCBpcyBhIEwxIFNhZmUgU2luZ2xldG9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFkZHJlc3MgLSBPcHRpb25hbCBjdXN0b20gYWRkcmVzcyBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBhZGRyZXNzIGlzIGRlcml2ZWQgZnJvbSB0aGUgU2FmZSBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBkZWZhdWx0IEFCSSBmb3IgdmVyc2lvbiAxLjMuMCBpcyB1c2VkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNoYWluSWQsIHNhZmVQcm92aWRlciwgaXNMMVNhZmVTaW5nbGV0b24gPSBmYWxzZSwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSkge1xuICAgICAgICBjb25zdCBzYWZlVmVyc2lvbiA9ICcxLjMuMCc7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRBYmkgPSBzYWZlX2NvcmVfc2RrX3R5cGVzXzEuc2FmZV8xXzNfMF9Db250cmFjdEFydGlmYWN0cy5hYmk7XG4gICAgICAgIHN1cGVyKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGlzTDFTYWZlU2luZ2xldG9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W3NhZmVDb250cmFjdFZlcnNpb25dXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLlZFUlNJT04gPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuVkVSU0lPTigpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbb3duZXIsIHR4SGFzaF1cbiAgICAgICAgICogQHJldHVybnMgQXJyYXlbYXBwcm92ZWRIYXNoZXNdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmFwcHJvdmVkSGFzaGVzID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5hcHByb3ZlZEhhc2hlcyguLi5hcmdzKV07XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgc2lnbmF0dXJlIHByb3ZpZGVkIGlzIHZhbGlkIGZvciB0aGUgcHJvdmlkZWQgZGF0YSwgaGFzaCBhbmQgbnVtYmVyIG9mIHJlcXVpcmVkIHNpZ25hdHVyZXMuXG4gICAgICAgICAqIFdpbGwgcmV2ZXJ0IG90aGVyd2lzZS5cbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVtkYXRhSGFzaCwgZGF0YSwgc2lnbmF0dXJlcywgcmVxdWlyZWRTaWduYXR1cmVzXVxuICAgICAgICAgKiBAcmV0dXJucyBFbXB0eSBhcnJheVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jaGVja05TaWduYXR1cmVzID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuY29udHJhY3QuY2hlY2tOU2lnbmF0dXJlcyguLi5hcmdzKTtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBzaWduYXR1cmUgcHJvdmlkZWQgaXMgdmFsaWQgZm9yIHRoZSBwcm92aWRlZCBkYXRhIGFuZCBoYXNoLiBXaWxsIHJldmVydCBvdGhlcndpc2UuXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbZGF0YUhhc2gsIGRhdGEsIHNpZ25hdHVyZXNdXG4gICAgICAgICAqIEByZXR1cm5zIEVtcHR5IGFycmF5XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNoZWNrU2lnbmF0dXJlcyA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmNvbnRyYWN0LmNoZWNrU2lnbmF0dXJlcyguLi5hcmdzKTtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W2RvbWFpblNlcGFyYXRvcl1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZG9tYWluU2VwYXJhdG9yID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIFthd2FpdCB0aGlzLmNvbnRyYWN0LmRvbWFpblNlcGFyYXRvcigpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEVuY29kZXMgdGhlIGRhdGEgZm9yIGEgdHJhbnNhY3Rpb24gdG8gdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbdG8sIHZhbHVlLCBkYXRhLCBvcGVyYXRpb24sIHNhZmVUeEdhcywgYmFzZUdhcywgZ2FzUHJpY2UsIGdhc1Rva2VuLCByZWZ1bmRSZWNlaXZlciwgX25vbmNlXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtlbmNvZGVkRGF0YV1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZW5jb2RlVHJhbnNhY3Rpb25EYXRhID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5lbmNvZGVUcmFuc2FjdGlvbkRhdGEoLi4uYXJncyldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogUmV0dXJucyBhcnJheSBvZiBtb2R1bGVzLlxuICAgICAgICAgKiBAcGFyYW0gYXJncyAtIEFycmF5W3N0YXJ0LCBwYWdlU2l6ZV1cbiAgICAgICAgICogQHJldHVybnMgQXJyYXlbQXJyYXlbbW9kdWxlc10sIG5leHRdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdldE1vZHVsZXNQYWdpbmF0ZWQgPSBhc3luYyAoYXJncykgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5jb250cmFjdC5nZXRNb2R1bGVzUGFnaW5hdGVkKC4uLmFyZ3MpO1xuICAgICAgICAgICAgcmV0dXJuIFtyZXMuYXJyYXksIHJlcy5uZXh0XTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgdGhlIGxpc3Qgb2YgU2FmZSBvd25lciBhY2NvdW50cy5cbiAgICAgICAgICogQHJldHVybnMgQXJyYXlbQXJyYXlbb3duZXJzXV1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ2V0T3duZXJzID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIFthd2FpdCB0aGlzLmNvbnRyYWN0LmdldE93bmVycygpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlYWRzIGBsZW5ndGhgIGJ5dGVzIG9mIHN0b3JhZ2UgaW4gdGhlIGN1cnJlbnRzIGNvbnRyYWN0XG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbb2Zmc2V0LCBsZW5ndGhdXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W3N0b3JhZ2VdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdldFN0b3JhZ2VBdCA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuZ2V0U3RvcmFnZUF0KC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgdGhlIFNhZmUgdGhyZXNob2xkLlxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVt0aHJlc2hvbGRdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdldFRocmVzaG9sZCA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5nZXRUaHJlc2hvbGQoKV07XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIGhhc2ggdG8gYmUgc2lnbmVkIGJ5IG93bmVycy5cbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVt0bywgdmFsdWUsIGRhdGEsIG9wZXJhdGlvbiwgc2FmZVR4R2FzLCBiYXNlR2FzLCBnYXNQcmljZSwgZ2FzVG9rZW4sIHJlZnVuZFJlY2VpdmVyLCBfbm9uY2VdXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W3RyYW5zYWN0aW9uSGFzaF1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ2V0VHJhbnNhY3Rpb25IYXNoID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5nZXRUcmFuc2FjdGlvbkhhc2goLi4uYXJncyldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQ2hlY2tzIGlmIGEgc3BlY2lmaWMgU2FmZSBtb2R1bGUgaXMgZW5hYmxlZCBmb3IgdGhlIGN1cnJlbnQgU2FmZS5cbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVttb2R1bGVBZGRyZXNzXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtpc0VuYWJsZWRdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmlzTW9kdWxlRW5hYmxlZCA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuaXNNb2R1bGVFbmFibGVkKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENoZWNrcyBpZiBhIHNwZWNpZmljIGFkZHJlc3MgaXMgYW4gb3duZXIgb2YgdGhlIGN1cnJlbnQgU2FmZS5cbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVthZGRyZXNzXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtpc093bmVyXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5pc093bmVyID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5pc093bmVyKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgdGhlIFNhZmUgbm9uY2UuXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W25vbmNlXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5ub25jZSA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5ub25jZSgpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbbWVzc2FnZUhhc2hdXG4gICAgICAgICAqIEByZXR1cm5zIEFycmF5W3NpZ25lZE1lc3NhZ2VzXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zaWduZWRNZXNzYWdlcyA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3Quc2lnbmVkTWVzc2FnZXMoLi4uYXJncyldO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLnNhZmVWZXJzaW9uID0gc2FmZVZlcnNpb247XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIGEgZ2l2ZW4gU2FmZSB0cmFuc2FjdGlvbiBjYW4gYmUgZXhlY3V0ZWQgc3VjY2Vzc2Z1bGx5IHdpdGggbm8gZXJyb3JzLlxuICAgICAqIEBwYXJhbSBzYWZlVHJhbnNhY3Rpb24gLSBUaGUgU2FmZSB0cmFuc2FjdGlvbiB0byBjaGVjay5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbmFsIHRyYW5zYWN0aW9uIG9wdGlvbnMuXG4gICAgICogQHJldHVybnMgVHJ1ZSwgaWYgdGhlIGdpdmVuIHRyYW5zYWN0aW9ucyBpcyB2YWxpZC5cbiAgICAgKi9cbiAgICBhc3luYyBpc1ZhbGlkVHJhbnNhY3Rpb24oc2FmZVRyYW5zYWN0aW9uLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGdhc0xpbWl0ID0gb3B0aW9ucz8uZ2FzTGltaXQgfHxcbiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy5lc3RpbWF0ZUdhcygnZXhlY1RyYW5zYWN0aW9uJywgW1xuICAgICAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS50byxcbiAgICAgICAgICAgICAgICAgICAgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLnZhbHVlKSxcbiAgICAgICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmRhdGEuZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmRhdGEub3BlcmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICBCaWdJbnQoc2FmZVRyYW5zYWN0aW9uLmRhdGEuc2FmZVR4R2FzKSxcbiAgICAgICAgICAgICAgICAgICAgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLmJhc2VHYXMpLFxuICAgICAgICAgICAgICAgICAgICBCaWdJbnQoc2FmZVRyYW5zYWN0aW9uLmRhdGEuZ2FzUHJpY2UpLFxuICAgICAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS5nYXNUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmRhdGEucmVmdW5kUmVjZWl2ZXIsXG4gICAgICAgICAgICAgICAgICAgIHNhZmVUcmFuc2FjdGlvbi5lbmNvZGVkU2lnbmF0dXJlcygpXG4gICAgICAgICAgICAgICAgXSwgb3B0aW9ucykpO1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuY29udHJhY3QuZXhlY1RyYW5zYWN0aW9uLnN0YXRpY0NhbGwoc2FmZVRyYW5zYWN0aW9uLmRhdGEudG8sIEJpZ0ludChzYWZlVHJhbnNhY3Rpb24uZGF0YS52YWx1ZSksIHNhZmVUcmFuc2FjdGlvbi5kYXRhLmRhdGEsIHNhZmVUcmFuc2FjdGlvbi5kYXRhLm9wZXJhdGlvbiwgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLnNhZmVUeEdhcyksIEJpZ0ludChzYWZlVHJhbnNhY3Rpb24uZGF0YS5iYXNlR2FzKSwgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLmdhc1ByaWNlKSwgc2FmZVRyYW5zYWN0aW9uLmRhdGEuZ2FzVG9rZW4sIHNhZmVUcmFuc2FjdGlvbi5kYXRhLnJlZnVuZFJlY2VpdmVyLCBzYWZlVHJhbnNhY3Rpb24uZW5jb2RlZFNpZ25hdHVyZXMoKSwgeyAuLi5vcHRpb25zLCBnYXNMaW1pdCB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlcyBhIHRyYW5zYWN0aW9uLlxuICAgICAqIEBwYXJhbSBzYWZlVHJhbnNhY3Rpb24gLSBUaGUgU2FmZSB0cmFuc2FjdGlvbiB0byBleGVjdXRlLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVHJhbnNhY3Rpb24gb3B0aW9ucy5cbiAgICAgKiBAcmV0dXJucyBUcmFuc2FjdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgYXN5bmMgZXhlY1RyYW5zYWN0aW9uKHNhZmVUcmFuc2FjdGlvbiwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBnYXNMaW1pdCA9IG9wdGlvbnM/Lmdhc0xpbWl0IHx8XG4gICAgICAgICAgICAoYXdhaXQgdGhpcy5lc3RpbWF0ZUdhcygnZXhlY1RyYW5zYWN0aW9uJywgW1xuICAgICAgICAgICAgICAgIHNhZmVUcmFuc2FjdGlvbi5kYXRhLnRvLFxuICAgICAgICAgICAgICAgIEJpZ0ludChzYWZlVHJhbnNhY3Rpb24uZGF0YS52YWx1ZSksXG4gICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmRhdGEuZGF0YSxcbiAgICAgICAgICAgICAgICBzYWZlVHJhbnNhY3Rpb24uZGF0YS5vcGVyYXRpb24sXG4gICAgICAgICAgICAgICAgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLnNhZmVUeEdhcyksXG4gICAgICAgICAgICAgICAgQmlnSW50KHNhZmVUcmFuc2FjdGlvbi5kYXRhLmJhc2VHYXMpLFxuICAgICAgICAgICAgICAgIEJpZ0ludChzYWZlVHJhbnNhY3Rpb24uZGF0YS5nYXNQcmljZSksXG4gICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmRhdGEuZ2FzVG9rZW4sXG4gICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmRhdGEucmVmdW5kUmVjZWl2ZXIsXG4gICAgICAgICAgICAgICAgc2FmZVRyYW5zYWN0aW9uLmVuY29kZWRTaWduYXR1cmVzKClcbiAgICAgICAgICAgIF0sIG9wdGlvbnMpKTtcbiAgICAgICAgY29uc3QgdHhSZXNwb25zZSA9IGF3YWl0IHRoaXMuY29udHJhY3QuZXhlY1RyYW5zYWN0aW9uKHNhZmVUcmFuc2FjdGlvbi5kYXRhLnRvLCBzYWZlVHJhbnNhY3Rpb24uZGF0YS52YWx1ZSwgc2FmZVRyYW5zYWN0aW9uLmRhdGEuZGF0YSwgc2FmZVRyYW5zYWN0aW9uLmRhdGEub3BlcmF0aW9uLCBzYWZlVHJhbnNhY3Rpb24uZGF0YS5zYWZlVHhHYXMsIHNhZmVUcmFuc2FjdGlvbi5kYXRhLmJhc2VHYXMsIHNhZmVUcmFuc2FjdGlvbi5kYXRhLmdhc1ByaWNlLCBzYWZlVHJhbnNhY3Rpb24uZGF0YS5nYXNUb2tlbiwgc2FmZVRyYW5zYWN0aW9uLmRhdGEucmVmdW5kUmVjZWl2ZXIsIHNhZmVUcmFuc2FjdGlvbi5lbmNvZGVkU2lnbmF0dXJlcygpLCB7IC4uLm9wdGlvbnMsIGdhc0xpbWl0IH0pO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEudG9UeFJlc3VsdCkodHhSZXNwb25zZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYXJyYXkgb2YgZmlyc3QgMTAgbW9kdWxlcy5cbiAgICAgKiBAcmV0dXJucyBBcnJheVttb2R1bGVzXVxuICAgICAqL1xuICAgIGFzeW5jIGdldE1vZHVsZXMoKSB7XG4gICAgICAgIGNvbnN0IFttb2R1bGVzXSA9IGF3YWl0IHRoaXMuZ2V0TW9kdWxlc1BhZ2luYXRlZChbY29uc3RhbnRzXzEuU0VOVElORUxfQUREUkVTUywgQmlnSW50KDEwKV0pO1xuICAgICAgICByZXR1cm4gW21vZHVsZXMubWFwKChtb2R1bGUpID0+IG1vZHVsZSldO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNYXJrcyBhIGhhc2ggYXMgYXBwcm92ZWQuIFRoaXMgY2FuIGJlIHVzZWQgdG8gdmFsaWRhdGUgYSBoYXNoIHRoYXQgaXMgdXNlZCBieSBhIHNpZ25hdHVyZS5cbiAgICAgKiBAcGFyYW0gaGFzaCAtIFRoZSBoYXNoIHRoYXQgc2hvdWxkIGJlIG1hcmtlZCBhcyBhcHByb3ZlZCBmb3Igc2lnbmF0dXJlcyB0aGF0IGFyZSB2ZXJpZmllZCBieSB0aGlzIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9uYWwgdHJhbnNhY3Rpb24gb3B0aW9ucy5cbiAgICAgKiBAcmV0dXJucyBUcmFuc2FjdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgYXN5bmMgYXBwcm92ZUhhc2goaGFzaCwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBnYXNMaW1pdCA9IG9wdGlvbnM/Lmdhc0xpbWl0IHx8IChhd2FpdCB0aGlzLmVzdGltYXRlR2FzKCdhcHByb3ZlSGFzaCcsIFtoYXNoXSwgb3B0aW9ucykpO1xuICAgICAgICBjb25zdCB0eFJlc3BvbnNlID0gYXdhaXQgdGhpcy5jb250cmFjdC5hcHByb3ZlSGFzaChoYXNoLCB7IC4uLm9wdGlvbnMsIGdhc0xpbWl0IH0pO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEudG9UeFJlc3VsdCkodHhSZXNwb25zZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNoYWluIGlkIG9mIHRoZSBTYWZlIGNvbnRyYWN0LiAoQ3VzdG9tIG1ldGhvZCAtIG5vdCBkZWZpbmVkIGluIHRoZSBTYWZlIENvbnRyYWN0KVxuICAgICAqIEByZXR1cm5zIEFycmF5W2NoYWluSWRdXG4gICAgICovXG4gICAgYXN5bmMgZ2V0Q2hhaW5JZCgpIHtcbiAgICAgICAgcmV0dXJuIFthd2FpdCB0aGlzLmNvbnRyYWN0LmdldENoYWluSWQoKV07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJldHVybnMgdGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxTYWZlVmVyc2lvbj59IEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSB2ZXJzaW9uIG9mIHRoZSBTYWZlIGNvbnRyYWN0IGFzIHN0cmluZy5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRWZXJzaW9uKCkge1xuICAgICAgICBjb25zdCBbc2FmZVZlcnNpb25dID0gYXdhaXQgdGhpcy5WRVJTSU9OKCk7XG4gICAgICAgIHJldHVybiBzYWZlVmVyc2lvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogcmV0dXJucyB0aGUgbm9uY2Ugb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxiaWdpbnQ+fSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgbm9uY2Ugb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICovXG4gICAgYXN5bmMgZ2V0Tm9uY2UoKSB7XG4gICAgICAgIGNvbnN0IFtub25jZV0gPSBhd2FpdCB0aGlzLm5vbmNlKCk7XG4gICAgICAgIHJldHVybiBub25jZTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBTYWZlQ29udHJhY3RfdjFfM18wO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2FmZUNvbnRyYWN0X3YxXzNfMC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.3.0/SafeContract_v1_3_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.4.1/SafeContract_v1_4_1.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.4.1/SafeContract_v1_4_1.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/Safe/SafeBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js\"));\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst constants_1 = __webpack_require__(/*! ../../../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeContract_v1_4_1  is the implementation specific to the Safe contract version 1.4.1.\n *\n * This class specializes in handling interactions with the Safe contract version 1.4.1 using Ethers.js v6.\n *\n * @extends SafeBaseContract<SafeContract_v1_4_1_Abi> - Inherits from SafeBaseContract with ABI specific to Safe contract version 1.4.1.\n * @implements SafeContract_v1_4_1_Contract - Implements the interface specific to Safe contract version 1.4.1.\n */\nclass SafeContract_v1_4_1 extends SafeBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeContract_v1_4_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param isL1SafeSingleton - A flag indicating if the contract is a L1 Safe Singleton.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.4.1 is used.\n     */\n    constructor(chainId, safeProvider, isL1SafeSingleton = false, customContractAddress, customContractAbi) {\n        const safeVersion = '1.4.1';\n        const defaultAbi = safe_core_sdk_types_1.safe_1_4_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, isL1SafeSingleton, customContractAddress, customContractAbi);\n        /**\n         * @returns Array[safeContractVersion]\n         */\n        this.VERSION = async () => {\n            return [await this.contract.VERSION()];\n        };\n        /**\n         * @param args - Array[owner, txHash]\n         * @returns Array[approvedHashes]\n         */\n        this.approvedHashes = async (args) => {\n            return [await this.contract.approvedHashes(...args)];\n        };\n        /**\n         * Checks whether the signature provided is valid for the provided data, hash and number of required signatures.\n         * Will revert otherwise.\n         * @param args - Array[dataHash, data, signatures, requiredSignatures]\n         * @returns Empty array\n         */\n        this.checkNSignatures = async (args) => {\n            await this.contract.checkNSignatures(...args);\n            return [];\n        };\n        /**\n         * Checks whether the signature provided is valid for the provided data and hash. Will revert otherwise.\n         * @param args - Array[dataHash, data, signatures]\n         * @returns Empty array\n         */\n        this.checkSignatures = async (args) => {\n            await this.contract.checkSignatures(...args);\n            return [];\n        };\n        /**\n         * @returns Array[domainSeparator]\n         */\n        this.domainSeparator = async () => {\n            return [await this.contract.domainSeparator()];\n        };\n        /**\n         * Encodes the data for a transaction to the Safe contract.\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[encodedData]\n         */\n        this.encodeTransactionData = async (args) => {\n            return [await this.contract.encodeTransactionData(...args)];\n        };\n        /**\n         * Returns array of modules.\n         * @param args - Array[start, pageSize]\n         * @returns Array[Array[modules], next]\n         */\n        this.getModulesPaginated = async (args) => {\n            const res = await this.contract.getModulesPaginated(...args);\n            return [res.array, res.next];\n        };\n        /**\n         * Returns the list of Safe owner accounts.\n         * @returns Array[Array[owners]]\n         */\n        this.getOwners = async () => {\n            return [await this.contract.getOwners()];\n        };\n        /**\n         * Reads `length` bytes of storage in the currents contract\n         * @param args - Array[offset, length]\n         * @returns Array[storage]\n         */\n        this.getStorageAt = async (args) => {\n            return [await this.contract.getStorageAt(...args)];\n        };\n        /**\n         * Returns the Safe threshold.\n         * @returns Array[threshold]\n         */\n        this.getThreshold = async () => {\n            return [await this.contract.getThreshold()];\n        };\n        /**\n         * Returns hash to be signed by owners.\n         * @param args - Array[to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce]\n         * @returns Array[transactionHash]\n         */\n        this.getTransactionHash = async (args) => {\n            return [await this.contract.getTransactionHash(...args)];\n        };\n        /**\n         * Checks if a specific Safe module is enabled for the current Safe.\n         * @param args - Array[moduleAddress]\n         * @returns Array[isEnabled]\n         */\n        this.isModuleEnabled = async (args) => {\n            return [await this.contract.isModuleEnabled(...args)];\n        };\n        /**\n         * Checks if a specific address is an owner of the current Safe.\n         * @param args - Array[address]\n         * @returns Array[isOwner]\n         */\n        this.isOwner = async (args) => {\n            return [await this.contract.isOwner(...args)];\n        };\n        /**\n         * Returns the Safe nonce.\n         * @returns Array[nonce]\n         */\n        this.nonce = async () => {\n            return [await this.contract.nonce()];\n        };\n        /**\n         * @param args - Array[messageHash]\n         * @returns Array[signedMessages]\n         */\n        this.signedMessages = async (args) => {\n            return [await this.contract.signedMessages(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Checks whether a given Safe transaction can be executed successfully with no errors.\n     * @param safeTransaction - The Safe transaction to check.\n     * @param options - Optional transaction options.\n     * @returns True, if the given transactions is valid.\n     */\n    async isValidTransaction(safeTransaction, options = {}) {\n        try {\n            const gasLimit = options?.gasLimit ||\n                (await this.estimateGas('execTransaction', [\n                    safeTransaction.data.to,\n                    BigInt(safeTransaction.data.value),\n                    safeTransaction.data.data,\n                    safeTransaction.data.operation,\n                    BigInt(safeTransaction.data.safeTxGas),\n                    BigInt(safeTransaction.data.baseGas),\n                    BigInt(safeTransaction.data.gasPrice),\n                    safeTransaction.data.gasToken,\n                    safeTransaction.data.refundReceiver,\n                    safeTransaction.encodedSignatures()\n                ], options));\n            return await this.contract.execTransaction.staticCall(safeTransaction.data.to, BigInt(safeTransaction.data.value), safeTransaction.data.data, safeTransaction.data.operation, BigInt(safeTransaction.data.safeTxGas), BigInt(safeTransaction.data.baseGas), BigInt(safeTransaction.data.gasPrice), safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * Executes a transaction.\n     * @param safeTransaction - The Safe transaction to execute.\n     * @param options - Transaction options.\n     * @returns Transaction result.\n     */\n    async execTransaction(safeTransaction, options) {\n        const gasLimit = options?.gasLimit ||\n            (await this.estimateGas('execTransaction', [\n                safeTransaction.data.to,\n                BigInt(safeTransaction.data.value),\n                safeTransaction.data.data,\n                safeTransaction.data.operation,\n                BigInt(safeTransaction.data.safeTxGas),\n                BigInt(safeTransaction.data.baseGas),\n                BigInt(safeTransaction.data.gasPrice),\n                safeTransaction.data.gasToken,\n                safeTransaction.data.refundReceiver,\n                safeTransaction.encodedSignatures()\n            ], options));\n        const txResponse = await this.contract.execTransaction(safeTransaction.data.to, safeTransaction.data.value, safeTransaction.data.data, safeTransaction.data.operation, safeTransaction.data.safeTxGas, safeTransaction.data.baseGas, safeTransaction.data.gasPrice, safeTransaction.data.gasToken, safeTransaction.data.refundReceiver, safeTransaction.encodedSignatures(), { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Returns array of first 10 modules.\n     * @returns Array[modules]\n     */\n    async getModules() {\n        const [modules] = await this.getModulesPaginated([constants_1.SENTINEL_ADDRESS, BigInt(10)]);\n        return [modules.map((module) => module)];\n    }\n    /**\n     * Marks a hash as approved. This can be used to validate a hash that is used by a signature.\n     * @param hash - The hash that should be marked as approved for signatures that are verified by this contract.\n     * @param options - Optional transaction options.\n     * @returns Transaction result.\n     */\n    async approveHash(hash, options) {\n        const gasLimit = options?.gasLimit || (await this.estimateGas('approveHash', [hash], options));\n        const txResponse = await this.contract.approveHash(hash, { ...options, gasLimit });\n        return (0, utils_1.toTxResult)(txResponse, options);\n    }\n    /**\n     * Returns the chain id of the Safe contract. (Custom method - not defined in the Safe Contract)\n     * @returns Array[chainId]\n     */\n    async getChainId() {\n        return [await this.contract.getChainId()];\n    }\n    /**\n     * returns the version of the Safe contract.\n     *\n     * @returns {Promise<SafeVersion>} A promise that resolves to the version of the Safe contract as string.\n     */\n    async getVersion() {\n        const [safeVersion] = await this.VERSION();\n        return safeVersion;\n    }\n    /**\n     * returns the nonce of the Safe contract.\n     *\n     * @returns {Promise<bigint>} A promise that resolves to the nonce of the Safe contract.\n     */\n    async getNonce() {\n        const [nonce] = await this.nonce();\n        return nonce;\n    }\n}\nexports[\"default\"] = SafeContract_v1_4_1;\n//# sourceMappingURL=SafeContract_v1_4_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.4.1/SafeContract_v1_4_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/SafeProxyFactoryBaseContract.js":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/SafeProxyFactoryBaseContract.js ***!
  \****************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class SafeProxyFactoryBaseContract extends BaseContract to specifically integrate with the SafeProxyFactory contract.\n * It is designed to be instantiated for different versions of the Safe contract.\n *\n * Subclasses of SafeProxyFactoryBaseContract are expected to represent specific versions of the contract.\n *\n * @template SafeProxyFactoryContractAbiType - The ABI type specific to the version of the Safe Proxy Factory contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<SafeProxyFactoryContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - SafeProxyFactoryContract_v1_4_1  extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_4_1_Abi>\n * - SafeProxyFactoryContract_v1_3_0  extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_3_0_Abi>\n * - SafeProxyFactoryContract_v1_2_0  extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_2_0_Abi>\n * - SafeProxyFactoryContract_v1_1_1  extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_1_1_Abi>\n * - SafeProxyFactoryContract_v1_0_0  extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_0_0_Abi>\n */\nclass SafeProxyFactoryBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of SafeProxyFactoryBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the Safe contract. It should be compatible with the specific version of the contract.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the Safe deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner) {\n        const contractName = 'safeProxyFactoryVersion';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = SafeProxyFactoryBaseContract;\n//# sourceMappingURL=SafeProxyFactoryBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlUHJveHlGYWN0b3J5L1NhZmVQcm94eUZhY3RvcnlCYXNlQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUMsbUJBQU8sQ0FBQywyTEFBOEI7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL1NhZmVQcm94eUZhY3RvcnkvU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdC5qcz8zMzI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uL2NvbnRyYWN0cy9CYXNlQ29udHJhY3RcIikpO1xuLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyBTYWZlUHJveHlGYWN0b3J5QmFzZUNvbnRyYWN0IGV4dGVuZHMgQmFzZUNvbnRyYWN0IHRvIHNwZWNpZmljYWxseSBpbnRlZ3JhdGUgd2l0aCB0aGUgU2FmZVByb3h5RmFjdG9yeSBjb250cmFjdC5cbiAqIEl0IGlzIGRlc2lnbmVkIHRvIGJlIGluc3RhbnRpYXRlZCBmb3IgZGlmZmVyZW50IHZlcnNpb25zIG9mIHRoZSBTYWZlIGNvbnRyYWN0LlxuICpcbiAqIFN1YmNsYXNzZXMgb2YgU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdCBhcmUgZXhwZWN0ZWQgdG8gcmVwcmVzZW50IHNwZWNpZmljIHZlcnNpb25zIG9mIHRoZSBjb250cmFjdC5cbiAqXG4gKiBAdGVtcGxhdGUgU2FmZVByb3h5RmFjdG9yeUNvbnRyYWN0QWJpVHlwZSAtIFRoZSBBQkkgdHlwZSBzcGVjaWZpYyB0byB0aGUgdmVyc2lvbiBvZiB0aGUgU2FmZSBQcm94eSBGYWN0b3J5IGNvbnRyYWN0LCBleHRlbmRpbmcgSW50ZXJmYWNlQWJpIGZyb20gRXRoZXJzLlxuICogQGV4dGVuZHMgQmFzZUNvbnRyYWN0PFNhZmVQcm94eUZhY3RvcnlDb250cmFjdEFiaVR5cGU+IC0gRXh0ZW5kcyB0aGUgZ2VuZXJpYyBCYXNlQ29udHJhY3QuXG4gKlxuICogRXhhbXBsZSBzdWJjbGFzc2VzOlxuICogLSBTYWZlUHJveHlGYWN0b3J5Q29udHJhY3RfdjFfNF8xICBleHRlbmRzIFNhZmVQcm94eUZhY3RvcnlCYXNlQ29udHJhY3Q8U2FmZVByb3h5RmFjdG9yeUNvbnRyYWN0X3YxXzRfMV9BYmk+XG4gKiAtIFNhZmVQcm94eUZhY3RvcnlDb250cmFjdF92MV8zXzAgIGV4dGVuZHMgU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdDxTYWZlUHJveHlGYWN0b3J5Q29udHJhY3RfdjFfM18wX0FiaT5cbiAqIC0gU2FmZVByb3h5RmFjdG9yeUNvbnRyYWN0X3YxXzJfMCAgZXh0ZW5kcyBTYWZlUHJveHlGYWN0b3J5QmFzZUNvbnRyYWN0PFNhZmVQcm94eUZhY3RvcnlDb250cmFjdF92MV8yXzBfQWJpPlxuICogLSBTYWZlUHJveHlGYWN0b3J5Q29udHJhY3RfdjFfMV8xICBleHRlbmRzIFNhZmVQcm94eUZhY3RvcnlCYXNlQ29udHJhY3Q8U2FmZVByb3h5RmFjdG9yeUNvbnRyYWN0X3YxXzFfMV9BYmk+XG4gKiAtIFNhZmVQcm94eUZhY3RvcnlDb250cmFjdF92MV8wXzAgIGV4dGVuZHMgU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdDxTYWZlUHJveHlGYWN0b3J5Q29udHJhY3RfdjFfMF8wX0FiaT5cbiAqL1xuY2xhc3MgU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdCBleHRlbmRzIEJhc2VDb250cmFjdF8xLmRlZmF1bHQge1xuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIENvbnN0cnVjdHMgYW4gaW5zdGFuY2Ugb2YgU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIG9mIHRoZSBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gc2FmZVByb3ZpZGVyIC0gQW4gaW5zdGFuY2Ugb2YgU2FmZVByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBkZWZhdWx0QWJpIC0gVGhlIGRlZmF1bHQgQUJJIGZvciB0aGUgU2FmZSBjb250cmFjdC4gSXQgc2hvdWxkIGJlIGNvbXBhdGlibGUgd2l0aCB0aGUgc3BlY2lmaWMgdmVyc2lvbiBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVWZXJzaW9uIC0gVGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBTYWZlIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIEFCSSBpcyBkZXJpdmVkIGZyb20gdGhlIFNhZmUgZGVwbG95bWVudHMgb3IgdGhlIGRlZmF1bHRBYmkgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpLCBydW5uZXIpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gJ3NhZmVQcm94eUZhY3RvcnlWZXJzaW9uJztcbiAgICAgICAgc3VwZXIoY29udHJhY3ROYW1lLCBjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpLCBydW5uZXIpO1xuICAgICAgICB0aGlzLmNvbnRyYWN0TmFtZSA9IGNvbnRyYWN0TmFtZTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBTYWZlUHJveHlGYWN0b3J5QmFzZUNvbnRyYWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/SafeProxyFactoryBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.0.0/SafeProxyFactoryContract_v1_0_0.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.0.0/SafeProxyFactoryContract_v1_0_0.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeProxyFactoryBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SafeProxyFactory/SafeProxyFactoryBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/SafeProxyFactoryBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeProxyFactoryContract_v1_0_0  is the implementation specific to the Safe Proxy Factory contract version 1.0.0.\n *\n * This class specializes in handling interactions with the Safe Proxy Factory contract version 1.0.0 using Ethers.js v6.\n *\n * @extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_0_0_Abi> - Inherits from SafeProxyFactoryBaseContract with ABI specific to Safe Proxy Factory contract version 1.0.0.\n * @implements SafeProxyFactoryContract_v1_0_0_Contract - Implements the interface specific to Safe Proxy Factory contract version 1.0.0.\n */\nclass SafeProxyFactoryContract_v1_0_0 extends SafeProxyFactoryBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeProxyFactoryContract_v1_0_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.0.0 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi, runner) {\n        const safeVersion = '1.0.0';\n        const defaultAbi = safe_core_sdk_types_1.safeProxyFactory_1_0_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        /**\n         * Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\n         * @returns Array[creationCode]\n         */\n        this.proxyCreationCode = async () => {\n            return [await this.contract.proxyCreationCode()];\n        };\n        /**\n         * Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed.\n         * @returns Array[runtimeCode]\n         */\n        this.proxyRuntimeCode = async () => {\n            return [await this.contract.proxyRuntimeCode()];\n        };\n        /**\n         * Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n         * @param args - Array[masterCopy, data]\n         * @returns Array[proxyAddress]\n         */\n        this.createProxy = async (args) => {\n            return [await this.contract.createProxy(...args)];\n        };\n        /**\n         * Allows to create new proxy contract and execute a message call to the new proxy within one transaction.\n         * @param args - Array[masterCopy, initializer, saltNonce]\n         * @returns Array[proxyAddress]\n         */\n        this.createProxyWithNonce = async (args) => {\n            return [await this.contract.createProxyWithNonce(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Allows to create new proxy contract and execute a message call to the new proxy within one transaction.\n     * @param {CreateProxyProps} props - Properties for the new proxy contract.\n     * @returns The address of the new proxy contract.\n     */\n    async createProxyWithOptions({ safeSingletonAddress, initializer, saltNonce, options, callback }) {\n        const saltNonceBigInt = BigInt(saltNonce);\n        if (saltNonceBigInt < 0)\n            throw new Error('saltNonce must be greater than or equal to 0');\n        if (options && !options.gasLimit) {\n            options.gasLimit = (await this.estimateGas('createProxyWithNonce', [safeSingletonAddress, initializer, saltNonceBigInt], { ...options })).toString();\n        }\n        const proxyAddress = this.contract\n            .createProxyWithNonce(safeSingletonAddress, initializer, saltNonce, { ...options })\n            .then(async (txResponse) => {\n            if (callback) {\n                callback(txResponse.hash);\n            }\n            const txReceipt = await txResponse.wait();\n            const events = txReceipt?.logs;\n            const proxyCreationEvent = events.find((event) => event?.eventName === 'ProxyCreation');\n            if (!proxyCreationEvent || !proxyCreationEvent.args) {\n                throw new Error('SafeProxy was not deployed correctly');\n            }\n            const proxyAddress = proxyCreationEvent.args[0];\n            return proxyAddress;\n        });\n        return proxyAddress;\n    }\n}\nexports[\"default\"] = SafeProxyFactoryContract_v1_0_0;\n//# sourceMappingURL=SafeProxyFactoryContract_v1_0_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.0.0/SafeProxyFactoryContract_v1_0_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.1.1/SafeProxyFactoryContract_v1_1_1.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.1.1/SafeProxyFactoryContract_v1_1_1.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeProxyFactoryBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SafeProxyFactory/SafeProxyFactoryBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/SafeProxyFactoryBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeProxyFactoryContract_v1_1_1  is the implementation specific to the Safe Proxy Factory contract version 1.1.1.\n *\n * This class specializes in handling interactions with the Safe Proxy Factory contract version 1.1.1 using Ethers.js v6.\n *\n * @extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_1_1_Abi> - Inherits from SafeProxyFactoryBaseContract with ABI specific to Safe Proxy Factory contract version 1.1.1.\n * @implements SafeProxyFactoryContract_v1_1_1_Contract - Implements the interface specific to Safe Proxy Factory contract version 1.1.1.\n */\nclass SafeProxyFactoryContract_v1_1_1 extends SafeProxyFactoryBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeProxyFactoryContract_v1_1_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.1.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi, runner) {\n        const safeVersion = '1.1.1';\n        const defaultAbi = safe_core_sdk_types_1.safeProxyFactory_1_1_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        /**\n         * Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\n         * @returns Array[creationCode]\n         */\n        this.proxyCreationCode = async () => {\n            return [await this.contract.proxyCreationCode()];\n        };\n        /**\n         * Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed.\n         * @returns Array[runtimeCode]\n         */\n        this.proxyRuntimeCode = async () => {\n            return [await this.contract.proxyRuntimeCode()];\n        };\n        /**\n         * Allows to get the address for a new proxy contact created via `createProxyWithNonce`.\n         * @param args - Array[masterCopy, initializer, saltNonce]\n         * @returns Array[proxyAddress]\n         */\n        this.calculateCreateProxyWithNonceAddress = async (args) => {\n            return [await this.contract.calculateCreateProxyWithNonceAddress(...args)];\n        };\n        /**\n         * Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n         * @param args - Array[masterCopy, data]\n         * @returns Array[proxyAddress]\n         */\n        this.createProxy = async (args) => {\n            return [await this.contract.createProxy(...args)];\n        };\n        /**\n         * Allows to create new proxy contract, execute a message call to the new proxy and call a specified callback within one transaction.\n         * @param args - Array[masterCopy, initializer, saltNonce, callback]\n         * @returns Array[proxyAddress]\n         */\n        this.createProxyWithCallback = async (args) => {\n            return [await this.contract.createProxyWithCallback(...args)];\n        };\n        /**\n         * Allows to create new proxy contract and execute a message call to the new proxy within one transaction.\n         * @param args - Array[masterCopy, initializer, saltNonce]\n         * @returns Array[proxyAddress]\n         */\n        this.createProxyWithNonce = async (args) => {\n            return [await this.contract.createProxyWithNonce(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Allows to create new proxy contract and execute a message call to the new proxy within one transaction.\n     * @param {CreateProxyProps} props - Properties for the new proxy contract.\n     * @returns The address of the new proxy contract.\n     */\n    async createProxyWithOptions({ safeSingletonAddress, initializer, saltNonce, options, callback }) {\n        const saltNonceBigInt = BigInt(saltNonce);\n        if (saltNonceBigInt < 0)\n            throw new Error('saltNonce must be greater than or equal to 0');\n        if (options && !options.gasLimit) {\n            options.gasLimit = (await this.estimateGas('createProxyWithNonce', [safeSingletonAddress, initializer, saltNonceBigInt], { ...options })).toString();\n        }\n        const proxyAddress = this.contract\n            .createProxyWithNonce(safeSingletonAddress, initializer, saltNonce, { ...options })\n            .then(async (txResponse) => {\n            if (callback) {\n                callback(txResponse.hash);\n            }\n            const txReceipt = await txResponse.wait();\n            const events = txReceipt?.logs;\n            const proxyCreationEvent = events.find((event) => event?.eventName === 'ProxyCreation');\n            if (!proxyCreationEvent || !proxyCreationEvent.args) {\n                throw new Error('SafeProxy was not deployed correctly');\n            }\n            const proxyAddress = proxyCreationEvent.args[0];\n            return proxyAddress;\n        });\n        return proxyAddress;\n    }\n}\nexports[\"default\"] = SafeProxyFactoryContract_v1_1_1;\n//# sourceMappingURL=SafeProxyFactoryContract_v1_1_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.1.1/SafeProxyFactoryContract_v1_1_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.3.0/SafeProxyFactoryContract_v1_3_0.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.3.0/SafeProxyFactoryContract_v1_3_0.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeProxyFactoryBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SafeProxyFactory/SafeProxyFactoryBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/SafeProxyFactoryBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeProxyFactoryContract_v1_3_0  is the implementation specific to the Safe Proxy Factory contract version 1.3.0.\n *\n * This class specializes in handling interactions with the Safe Proxy Factory contract version 1.3.0 using Ethers.js v6.\n *\n * @extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_3_0_Abi> - Inherits from SafeProxyFactoryBaseContract with ABI specific to Safe Proxy Factory contract version 1.3.0.\n * @implements SafeProxyFactoryContract_v1_3_0_Contract - Implements the interface specific to Safe Proxy Factory contract version 1.3.0.\n */\nclass SafeProxyFactoryContract_v1_3_0 extends SafeProxyFactoryBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeProxyFactoryContract_v1_3_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.3.0 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi, runner) {\n        const safeVersion = '1.3.0';\n        const defaultAbi = safe_core_sdk_types_1.safeProxyFactory_1_3_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        /**\n         * Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\n         * @returns Array[creationCode]\n         */\n        this.proxyCreationCode = async () => {\n            return [await this.contract.proxyCreationCode()];\n        };\n        /**\n         * Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed.\n         * @returns Array[runtimeCode]\n         */\n        this.proxyRuntimeCode = async () => {\n            return [await this.contract.proxyRuntimeCode()];\n        };\n        /**\n         * Allows to get the address for a new proxy contact created via `createProxyWithNonce`.\n         * @param args - Array[singleton, initializer, saltNonce]\n         * @returns Array[proxyAddress]\n         */\n        this.calculateCreateProxyWithNonceAddress = async (args) => {\n            return [await this.contract.calculateCreateProxyWithNonceAddress(...args)];\n        };\n        /**\n         * Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n         * @param args - Array[singleton, data]\n         * @returns Array[proxyAddress]\n         */\n        this.createProxy = async (args) => {\n            return [await this.contract.createProxy(...args)];\n        };\n        /**\n         * Allows to create new proxy contract, execute a message call to the new proxy and call a specified callback within one transaction.\n         * @param args - Array[singleton, initializer, saltNonce, callback]\n         * @returns Array[proxyAddress]\n         */\n        this.createProxyWithCallback = async (args) => {\n            return [await this.contract.createProxyWithCallback(...args)];\n        };\n        /**\n         * Allows to create new proxy contract and execute a message call to the new proxy within one transaction.\n         * @param args - Array[singleton, initializer, saltNonce]\n         * @returns Array[proxyAddress]\n         */\n        this.createProxyWithNonce = async (args) => {\n            return [await this.contract.createProxyWithNonce(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Allows to create new proxy contract and execute a message call to the new proxy within one transaction.\n     * @param {CreateProxyProps} props - Properties for the new proxy contract.\n     * @returns The address of the new proxy contract.\n     */\n    async createProxyWithOptions({ safeSingletonAddress, initializer, saltNonce, options, callback }) {\n        const saltNonceBigInt = BigInt(saltNonce);\n        if (saltNonceBigInt < 0)\n            throw new Error('saltNonce must be greater than or equal to 0');\n        if (options && !options.gasLimit) {\n            options.gasLimit = (await this.estimateGas('createProxyWithNonce', [safeSingletonAddress, initializer, saltNonceBigInt], { ...options })).toString();\n        }\n        const proxyAddress = this.contract\n            .createProxyWithNonce(safeSingletonAddress, initializer, saltNonce, { ...options })\n            .then(async (txResponse) => {\n            if (callback) {\n                callback(txResponse.hash);\n            }\n            const txReceipt = await txResponse.wait();\n            const events = txReceipt?.logs;\n            const proxyCreationEvent = events.find((event) => event?.eventName === 'ProxyCreation');\n            if (!proxyCreationEvent || !proxyCreationEvent.args) {\n                throw new Error('SafeProxy was not deployed correctly');\n            }\n            const proxyAddress = proxyCreationEvent.args[0];\n            return proxyAddress;\n        });\n        return proxyAddress;\n    }\n}\nexports[\"default\"] = SafeProxyFactoryContract_v1_3_0;\n//# sourceMappingURL=SafeProxyFactoryContract_v1_3_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.3.0/SafeProxyFactoryContract_v1_3_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.4.1/SafeProxyFactoryContract_v1_4_1.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.4.1/SafeProxyFactoryContract_v1_4_1.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeProxyFactoryBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SafeProxyFactory/SafeProxyFactoryBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/SafeProxyFactoryBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeProxyFactoryContract_v1_4_1  is the implementation specific to the Safe Proxy Factory contract version 1.4.1.\n *\n * This class specializes in handling interactions with the Safe Proxy Factory contract version 1.4.1 using Ethers.js v6.\n *\n * @extends SafeProxyFactoryBaseContract<SafeProxyFactoryContract_v1_4_1_Abi> - Inherits from SafeProxyFactoryBaseContract with ABI specific to Safe Proxy Factory contract version 1.4.1.\n * @implements SafeProxyFactoryContract_v1_4_1_Contract - Implements the interface specific to Safe Proxy Factory contract version 1.4.1.\n */\nclass SafeProxyFactoryContract_v1_4_1 extends SafeProxyFactoryBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeProxyFactoryContract_v1_4_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.4.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi, runner) {\n        const safeVersion = '1.4.1';\n        const defaultAbi = safe_core_sdk_types_1.safeProxyFactory_1_4_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        /**\n         * Returns the ID of the chain the contract is currently deployed on.\n         * @returns Array[chainId]\n         */\n        this.getChainId = async () => {\n            return [await this.contract.getChainId()];\n        };\n        /**\n         * Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\n         * @returns Array[creationCode]\n         */\n        this.proxyCreationCode = async () => {\n            return [await this.contract.proxyCreationCode()];\n        };\n        /**\n         * Deploys a new chain-specific proxy with singleton and salt. Optionally executes an initializer call to a new proxy.\n         * @param args - Array[singleton, initializer, saltNonce]\n         * @returns Array[proxy]\n         */\n        this.createChainSpecificProxyWithNonce = async (args) => {\n            return [await this.contract.createChainSpecificProxyWithNonce(...args)];\n        };\n        /**\n         * Deploy a new proxy with singleton and salt.\n         * Optionally executes an initializer call to a new proxy and calls a specified callback address.\n         * @param args - Array[singleton, initializer, saltNonce, callback]\n         * @returns Array[proxy]\n         */\n        this.createProxyWithCallback = async (args) => {\n            return [await this.contract.createProxyWithCallback(...args)];\n        };\n        /**\n         * Deploys a new proxy with singleton and salt. Optionally executes an initializer call to a new proxy.\n         * @param args - Array[singleton, initializer, saltNonce]\n         * @returns Array[proxy]\n         */\n        this.createProxyWithNonce = async (args) => {\n            return [await this.contract.createProxyWithNonce(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n    /**\n     * Allows to create new proxy contract and execute a message call to the new proxy within one transaction.\n     * @param {CreateProxyProps} props - Properties for the new proxy contract.\n     * @returns The address of the new proxy contract.\n     */\n    async createProxyWithOptions({ safeSingletonAddress, initializer, saltNonce, options, callback }) {\n        const saltNonceBigInt = BigInt(saltNonce);\n        if (saltNonceBigInt < 0)\n            throw new Error('saltNonce must be greater than or equal to 0');\n        if (options && !options.gasLimit) {\n            options.gasLimit = (await this.estimateGas('createProxyWithNonce', [safeSingletonAddress, initializer, saltNonceBigInt], { ...options })).toString();\n        }\n        const proxyAddress = this.contract\n            .createProxyWithNonce(safeSingletonAddress, initializer, saltNonce, { ...options })\n            .then(async (txResponse) => {\n            if (callback) {\n                callback(txResponse.hash);\n            }\n            const txReceipt = await txResponse.wait();\n            const events = txReceipt?.logs;\n            const proxyCreationEvent = events.find((event) => event?.eventName === 'ProxyCreation');\n            if (!proxyCreationEvent || !proxyCreationEvent.args) {\n                throw new Error('SafeProxy was not deployed correctly');\n            }\n            const proxyAddress = proxyCreationEvent.args[0];\n            return proxyAddress;\n        });\n        return proxyAddress;\n    }\n}\nexports[\"default\"] = SafeProxyFactoryContract_v1_4_1;\n//# sourceMappingURL=SafeProxyFactoryContract_v1_4_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.4.1/SafeProxyFactoryContract_v1_4_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSharedSigner/SafeWebAuthnSharedSignerBaseContract.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSharedSigner/SafeWebAuthnSharedSignerBaseContract.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class SafeWebAuthnSharedSignerBaseContract extends BaseContract to specifically integrate with the SafeWebAuthnSharedSigner contract.\n * It is designed to be instantiated for different versions of the Safe contract.\n *\n * Subclasses of SafeWebAuthnSharedSignerBaseContract are expected to represent specific versions of the contract.\n *\n * @template SafeWebAuthnSharedSignerContractAbiType - The ABI type specific to the version of the Safe WebAuthn Shared Signer contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<SafeWebAuthnSharedSignerContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - SafeWebAuthnSharedSignerContract_v0_2_1  extends SafeWebAuthnSharedSignerBaseContract<SafeWebAuthnSharedSignerContract_v0_2_1_Abi>\n */\nclass SafeWebAuthnSharedSignerBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of SafeWebAuthnSharedSignerBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the Safe contract. It should be compatible with the specific version of the contract.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the Safe deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner) {\n        const contractName = 'safeWebAuthnSharedSignerVersion';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = SafeWebAuthnSharedSignerBaseContract;\n//# sourceMappingURL=SafeWebAuthnSharedSignerBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlV2ViQXV0aG5TaGFyZWRTaWduZXIvU2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyQmFzZUNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUNBQXVDLG1CQUFPLENBQUMsMkxBQThCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy9jb250cmFjdHMvU2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyL1NhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdC5qcz83Y2FhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uL2NvbnRyYWN0cy9CYXNlQ29udHJhY3RcIikpO1xuLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyBTYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJCYXNlQ29udHJhY3QgZXh0ZW5kcyBCYXNlQ29udHJhY3QgdG8gc3BlY2lmaWNhbGx5IGludGVncmF0ZSB3aXRoIHRoZSBTYWZlV2ViQXV0aG5TaGFyZWRTaWduZXIgY29udHJhY3QuXG4gKiBJdCBpcyBkZXNpZ25lZCB0byBiZSBpbnN0YW50aWF0ZWQgZm9yIGRpZmZlcmVudCB2ZXJzaW9ucyBvZiB0aGUgU2FmZSBjb250cmFjdC5cbiAqXG4gKiBTdWJjbGFzc2VzIG9mIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdCBhcmUgZXhwZWN0ZWQgdG8gcmVwcmVzZW50IHNwZWNpZmljIHZlcnNpb25zIG9mIHRoZSBjb250cmFjdC5cbiAqXG4gKiBAdGVtcGxhdGUgU2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyQ29udHJhY3RBYmlUeXBlIC0gVGhlIEFCSSB0eXBlIHNwZWNpZmljIHRvIHRoZSB2ZXJzaW9uIG9mIHRoZSBTYWZlIFdlYkF1dGhuIFNoYXJlZCBTaWduZXIgY29udHJhY3QsIGV4dGVuZGluZyBJbnRlcmZhY2VBYmkgZnJvbSBFdGhlcnMuXG4gKiBAZXh0ZW5kcyBCYXNlQ29udHJhY3Q8U2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyQ29udHJhY3RBYmlUeXBlPiAtIEV4dGVuZHMgdGhlIGdlbmVyaWMgQmFzZUNvbnRyYWN0LlxuICpcbiAqIEV4YW1wbGUgc3ViY2xhc3NlczpcbiAqIC0gU2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyQ29udHJhY3RfdjBfMl8xICBleHRlbmRzIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdDxTYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJDb250cmFjdF92MF8yXzFfQWJpPlxuICovXG5jbGFzcyBTYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJCYXNlQ29udHJhY3QgZXh0ZW5kcyBCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIG9mIHRoZSBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gc2FmZVByb3ZpZGVyIC0gQW4gaW5zdGFuY2Ugb2YgU2FmZVByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBkZWZhdWx0QWJpIC0gVGhlIGRlZmF1bHQgQUJJIGZvciB0aGUgU2FmZSBjb250cmFjdC4gSXQgc2hvdWxkIGJlIGNvbXBhdGlibGUgd2l0aCB0aGUgc3BlY2lmaWMgdmVyc2lvbiBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVWZXJzaW9uIC0gVGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBTYWZlIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIEFCSSBpcyBkZXJpdmVkIGZyb20gdGhlIFNhZmUgZGVwbG95bWVudHMgb3IgdGhlIGRlZmF1bHRBYmkgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpLCBydW5uZXIpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gJ3NhZmVXZWJBdXRoblNoYXJlZFNpZ25lclZlcnNpb24nO1xuICAgICAgICBzdXBlcihjb250cmFjdE5hbWUsIGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmksIHJ1bm5lcik7XG4gICAgICAgIHRoaXMuY29udHJhY3ROYW1lID0gY29udHJhY3ROYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSharedSigner/SafeWebAuthnSharedSignerBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSharedSigner/v0.2.1/SafeWebAuthnSharedSignerContract_v0_2_1.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSharedSigner/v0.2.1/SafeWebAuthnSharedSignerContract_v0_2_1.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeWebAuthnSharedSignerBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SafeWebAuthnSharedSigner/SafeWebAuthnSharedSignerBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSharedSigner/SafeWebAuthnSharedSignerBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeWebAuthnSharedSignerContract_v0_2_1 is the implementation specific to the SafeWebAuthnSharedSigner contract version 0.2.1.\n *\n * This class specializes in handling interactions with the SafeWebAuthnSharedSigner contract version 0.2.1 using Ethers.js v6.\n *\n * @extends SafeWebAuthnSharedSignerBaseContract<SafeWebAuthnSharedSignerContract_v0_2_1_Abi> - Inherits from SafeWebAuthnSharedSignerBaseContract with ABI specific to SafeWebAuthnSigner Factory contract version 0.2.1.\n * @implements SafeWebAuthnSharedSignerContract_v0_2_1_Contract - Implements the interface specific to SafeWebAuthnSharedSigner contract version 0.2.1.\n */\nclass SafeWebAuthnSharedSignerContract_v0_2_1 extends SafeWebAuthnSharedSignerBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeWebAuthnSharedSignerContract_v0_2_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 0.2.1 is used.\n     */\n    constructor(chainId, safeProvider, safeVersion, customContractAddress, customContractAbi) {\n        const defaultAbi = safe_core_sdk_types_1.SafeWebAuthnSharedSigner_0_2_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        /**\n         * Return the signer configuration for the specified account.\n         * @param args - Array[address]\n         * @returns Array[signer]\n         */\n        this.getConfiguration = async (args) => {\n            return [await this.contract.getConfiguration(...args)];\n        };\n        /**\n         * Sets the signer configuration for the calling account.\n         * @param args - Array[signer]\n         * @returns Array[]\n         */\n        this.configure = async (args) => {\n            await this.contract.configure(...args);\n            return [];\n        };\n        this.isValidSignature = async (args) => {\n            return [await this.contract.isValidSignature(...args)];\n        };\n        /**\n         * @returns The starting storage slot on the account containing the signer data.\n         */\n        this.SIGNER_SLOT = async () => {\n            return [await this.contract.SIGNER_SLOT()];\n        };\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = SafeWebAuthnSharedSignerContract_v0_2_1;\n//# sourceMappingURL=SafeWebAuthnSharedSignerContract_v0_2_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlV2ViQXV0aG5TaGFyZWRTaWduZXIvdjAuMi4xL1NhZmVXZWJBdXRoblNoYXJlZFNpZ25lckNvbnRyYWN0X3YwXzJfMS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtEQUErRCxtQkFBTyxDQUFDLGdTQUFrRjtBQUN6Siw4QkFBOEIsbUJBQU8sQ0FBQyw0TEFBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy9jb250cmFjdHMvU2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyL3YwLjIuMS9TYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJDb250cmFjdF92MF8yXzEuanM/ZjY2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi8uLi9jb250cmFjdHMvU2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyL1NhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdFwiKSk7XG5jb25zdCBzYWZlX2NvcmVfc2RrX3R5cGVzXzEgPSByZXF1aXJlKFwiQHNhZmUtZ2xvYmFsL3NhZmUtY29yZS1zZGstdHlwZXNcIik7XG4vKipcbiAqIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckNvbnRyYWN0X3YwXzJfMSBpcyB0aGUgaW1wbGVtZW50YXRpb24gc3BlY2lmaWMgdG8gdGhlIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lciBjb250cmFjdCB2ZXJzaW9uIDAuMi4xLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lciBjb250cmFjdCB2ZXJzaW9uIDAuMi4xIHVzaW5nIEV0aGVycy5qcyB2Ni5cbiAqXG4gKiBAZXh0ZW5kcyBTYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJCYXNlQ29udHJhY3Q8U2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyQ29udHJhY3RfdjBfMl8xX0FiaT4gLSBJbmhlcml0cyBmcm9tIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckJhc2VDb250cmFjdCB3aXRoIEFCSSBzcGVjaWZpYyB0byBTYWZlV2ViQXV0aG5TaWduZXIgRmFjdG9yeSBjb250cmFjdCB2ZXJzaW9uIDAuMi4xLlxuICogQGltcGxlbWVudHMgU2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyQ29udHJhY3RfdjBfMl8xX0NvbnRyYWN0IC0gSW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHNwZWNpZmljIHRvIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lciBjb250cmFjdCB2ZXJzaW9uIDAuMi4xLlxuICovXG5jbGFzcyBTYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJDb250cmFjdF92MF8yXzEgZXh0ZW5kcyBTYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckNvbnRyYWN0X3YwXzJfMVxuICAgICAqXG4gICAgICogQHBhcmFtIGNoYWluSWQgLSBUaGUgY2hhaW4gSUQgd2hlcmUgdGhlIGNvbnRyYWN0IHJlc2lkZXMuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gc2FmZVZlcnNpb24gLSBUaGUgdmVyc2lvbiBvZiB0aGUgU2FmZSBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBZGRyZXNzIC0gT3B0aW9uYWwgY3VzdG9tIGFkZHJlc3MgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgYWRkcmVzcyBpcyBkZXJpdmVkIGZyb20gdGhlIFNhZmUgZGVwbG95bWVudHMgYmFzZWQgb24gdGhlIGNoYWluSWQgYW5kIHNhZmVWZXJzaW9uLlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFiaSAtIE9wdGlvbmFsIGN1c3RvbSBBQkkgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgZGVmYXVsdCBBQkkgZm9yIHZlcnNpb24gMC4yLjEgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKSB7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRBYmkgPSBzYWZlX2NvcmVfc2RrX3R5cGVzXzEuU2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyXzBfMl8xX0NvbnRyYWN0QXJ0aWZhY3RzLmFiaTtcbiAgICAgICAgc3VwZXIoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm4gdGhlIHNpZ25lciBjb25maWd1cmF0aW9uIGZvciB0aGUgc3BlY2lmaWVkIGFjY291bnQuXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbYWRkcmVzc11cbiAgICAgICAgICogQHJldHVybnMgQXJyYXlbc2lnbmVyXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5nZXRDb25maWd1cmF0aW9uID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5nZXRDb25maWd1cmF0aW9uKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldHMgdGhlIHNpZ25lciBjb25maWd1cmF0aW9uIGZvciB0aGUgY2FsbGluZyBhY2NvdW50LlxuICAgICAgICAgKiBAcGFyYW0gYXJncyAtIEFycmF5W3NpZ25lcl1cbiAgICAgICAgICogQHJldHVybnMgQXJyYXlbXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jb25maWd1cmUgPSBhc3luYyAoYXJncykgPT4ge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5jb250cmFjdC5jb25maWd1cmUoLi4uYXJncyk7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaXNWYWxpZFNpZ25hdHVyZSA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuaXNWYWxpZFNpZ25hdHVyZSguLi5hcmdzKV07XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAcmV0dXJucyBUaGUgc3RhcnRpbmcgc3RvcmFnZSBzbG90IG9uIHRoZSBhY2NvdW50IGNvbnRhaW5pbmcgdGhlIHNpZ25lciBkYXRhLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5TSUdORVJfU0xPVCA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5TSUdORVJfU0xPVCgpXTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zYWZlVmVyc2lvbiA9IHNhZmVWZXJzaW9uO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckNvbnRyYWN0X3YwXzJfMTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckNvbnRyYWN0X3YwXzJfMS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSharedSigner/v0.2.1/SafeWebAuthnSharedSignerContract_v0_2_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSignerFactory/SafeWebAuthnSignerFactoryBaseContract.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSignerFactory/SafeWebAuthnSignerFactoryBaseContract.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class SafeWebAuthnSignerFactoryBaseContract extends BaseContract to specifically integrate with the SafeWebAuthnSignerFactory contract.\n * It is designed to be instantiated for different versions of the Safe contract.\n *\n * Subclasses of SafeWebAuthnSignerFactoryBaseContract are expected to represent specific versions of the contract.\n *\n * @template SafeWebAuthnSignerFactoryContractAbiType - The ABI type specific to the version of the Safe WebAuthn Signer Factory contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<SafeWebAuthnSignerFactoryContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - SafeWebAuthnSignerFactoryContract_v0_2_1  extends SafeWebAuthnSignerFactoryBaseContract<SafeWebAuthnSignerFactoryContract_v0_2_1_Abi>\n */\nclass SafeWebAuthnSignerFactoryBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of SafeWebAuthnSignerFactoryBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the Safe contract. It should be compatible with the specific version of the contract.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the Safe deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner) {\n        const contractName = 'safeWebAuthnSignerFactoryVersion';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = SafeWebAuthnSignerFactoryBaseContract;\n//# sourceMappingURL=SafeWebAuthnSignerFactoryBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5L1NhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlCYXNlQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUMsbUJBQU8sQ0FBQywyTEFBOEI7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5L1NhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlCYXNlQ29udHJhY3QuanM/YzQ1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IEJhc2VDb250cmFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9jb250cmFjdHMvQmFzZUNvbnRyYWN0XCIpKTtcbi8qKlxuICogQWJzdHJhY3QgY2xhc3MgU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUJhc2VDb250cmFjdCBleHRlbmRzIEJhc2VDb250cmFjdCB0byBzcGVjaWZpY2FsbHkgaW50ZWdyYXRlIHdpdGggdGhlIFNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnkgY29udHJhY3QuXG4gKiBJdCBpcyBkZXNpZ25lZCB0byBiZSBpbnN0YW50aWF0ZWQgZm9yIGRpZmZlcmVudCB2ZXJzaW9ucyBvZiB0aGUgU2FmZSBjb250cmFjdC5cbiAqXG4gKiBTdWJjbGFzc2VzIG9mIFNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlCYXNlQ29udHJhY3QgYXJlIGV4cGVjdGVkIHRvIHJlcHJlc2VudCBzcGVjaWZpYyB2ZXJzaW9ucyBvZiB0aGUgY29udHJhY3QuXG4gKlxuICogQHRlbXBsYXRlIFNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlDb250cmFjdEFiaVR5cGUgLSBUaGUgQUJJIHR5cGUgc3BlY2lmaWMgdG8gdGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgV2ViQXV0aG4gU2lnbmVyIEZhY3RvcnkgY29udHJhY3QsIGV4dGVuZGluZyBJbnRlcmZhY2VBYmkgZnJvbSBFdGhlcnMuXG4gKiBAZXh0ZW5kcyBCYXNlQ29udHJhY3Q8U2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUNvbnRyYWN0QWJpVHlwZT4gLSBFeHRlbmRzIHRoZSBnZW5lcmljIEJhc2VDb250cmFjdC5cbiAqXG4gKiBFeGFtcGxlIHN1YmNsYXNzZXM6XG4gKiAtIFNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlDb250cmFjdF92MF8yXzEgIGV4dGVuZHMgU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUJhc2VDb250cmFjdDxTYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5Q29udHJhY3RfdjBfMl8xX0FiaT5cbiAqL1xuY2xhc3MgU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUJhc2VDb250cmFjdCBleHRlbmRzIEJhc2VDb250cmFjdF8xLmRlZmF1bHQge1xuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIENvbnN0cnVjdHMgYW4gaW5zdGFuY2Ugb2YgU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUJhc2VDb250cmFjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFpbklkIC0gVGhlIGNoYWluIElEIG9mIHRoZSBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gc2FmZVByb3ZpZGVyIC0gQW4gaW5zdGFuY2Ugb2YgU2FmZVByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBkZWZhdWx0QWJpIC0gVGhlIGRlZmF1bHQgQUJJIGZvciB0aGUgU2FmZSBjb250cmFjdC4gSXQgc2hvdWxkIGJlIGNvbXBhdGlibGUgd2l0aCB0aGUgc3BlY2lmaWMgdmVyc2lvbiBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVWZXJzaW9uIC0gVGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBTYWZlIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIEFCSSBpcyBkZXJpdmVkIGZyb20gdGhlIFNhZmUgZGVwbG95bWVudHMgb3IgdGhlIGRlZmF1bHRBYmkgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpLCBydW5uZXIpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gJ3NhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlWZXJzaW9uJztcbiAgICAgICAgc3VwZXIoY29udHJhY3ROYW1lLCBjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpLCBydW5uZXIpO1xuICAgICAgICB0aGlzLmNvbnRyYWN0TmFtZSA9IGNvbnRyYWN0TmFtZTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBTYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5QmFzZUNvbnRyYWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUJhc2VDb250cmFjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSignerFactory/SafeWebAuthnSignerFactoryBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSignerFactory/v0.2.1/SafeWebAuthnSignerFactoryContract_v0_2_1.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSignerFactory/v0.2.1/SafeWebAuthnSignerFactoryContract_v0_2_1.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeWebAuthnSignerFactoryBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SafeWebAuthnSignerFactory/SafeWebAuthnSignerFactoryBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSignerFactory/SafeWebAuthnSignerFactoryBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SafeWebAuthnSignerFactoryContract_v0_2_1  is the implementation specific to the SafeWebAuthnSigner Factory contract version 0.2.1.\n *\n * This class specializes in handling interactions with the SafeWebAuthnSigner Factory contract version 0.2.1 using Ethers.js v6.\n *\n * @extends SafeWebAuthnSignerFactoryBaseContract<SafeWebAuthnSignerFactoryContract_v0_2_1_Abi> - Inherits from SafeWebAuthnSignerFactoryBaseContract with ABI specific to SafeWebAuthnSigner Factory contract version 0.2.1.\n * @implements SafeWebAuthnSignerFactoryContract_v0_2_1_Contract - Implements the interface specific to SafeWebAuthnSigner Factory contract version 0.2.1.\n */\nclass SafeWebAuthnSignerFactoryContract_v0_2_1 extends SafeWebAuthnSignerFactoryBaseContract_1.default {\n    /**\n     * Constructs an instance of SafeWebAuthnSignerFactoryContract_v0_2_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 0.2.1 is used.\n     */\n    constructor(chainId, safeProvider, safeVersion, customContractAddress, customContractAbi) {\n        const defaultAbi = safe_core_sdk_types_1.SafeWebAuthnSignerFactory_0_2_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        /**\n         * Returns the address of the Signer.\n         * @param args - Array[x, y, verifiers]\n         * @returns Array[signer]\n         */\n        this.getSigner = async (args) => {\n            return [await this.contract.getSigner(...args)];\n        };\n        /**\n         * Returns the address of the Signer and deploy the signer contract if its not deployed yet.\n         * @param args - Array[x, y, verifiers]\n         * @returns Array[signer]\n         */\n        this.createSigner = async (args) => {\n            return [await this.contract.createSigner(...args)];\n        };\n        this.isValidSignatureForSigner = async (args) => {\n            return [await this.contract.isValidSignatureForSigner(...args)];\n        };\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = SafeWebAuthnSignerFactoryContract_v0_2_1;\n//# sourceMappingURL=SafeWebAuthnSignerFactoryContract_v0_2_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5L3YwLjIuMS9TYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5Q29udHJhY3RfdjBfMl8xLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0VBQWdFLG1CQUFPLENBQUMsb1NBQW9GO0FBQzVKLDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy9jb250cmFjdHMvU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeS92MC4yLjEvU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUNvbnRyYWN0X3YwXzJfMS5qcz9kNDVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUJhc2VDb250cmFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi8uLi9jb250cmFjdHMvU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeS9TYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5QmFzZUNvbnRyYWN0XCIpKTtcbmNvbnN0IHNhZmVfY29yZV9zZGtfdHlwZXNfMSA9IHJlcXVpcmUoXCJAc2FmZS1nbG9iYWwvc2FmZS1jb3JlLXNkay10eXBlc1wiKTtcbi8qKlxuICogU2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUNvbnRyYWN0X3YwXzJfMSAgaXMgdGhlIGltcGxlbWVudGF0aW9uIHNwZWNpZmljIHRvIHRoZSBTYWZlV2ViQXV0aG5TaWduZXIgRmFjdG9yeSBjb250cmFjdCB2ZXJzaW9uIDAuMi4xLlxuICpcbiAqIFRoaXMgY2xhc3Mgc3BlY2lhbGl6ZXMgaW4gaGFuZGxpbmcgaW50ZXJhY3Rpb25zIHdpdGggdGhlIFNhZmVXZWJBdXRoblNpZ25lciBGYWN0b3J5IGNvbnRyYWN0IHZlcnNpb24gMC4yLjEgdXNpbmcgRXRoZXJzLmpzIHY2LlxuICpcbiAqIEBleHRlbmRzIFNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlCYXNlQ29udHJhY3Q8U2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeUNvbnRyYWN0X3YwXzJfMV9BYmk+IC0gSW5oZXJpdHMgZnJvbSBTYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5QmFzZUNvbnRyYWN0IHdpdGggQUJJIHNwZWNpZmljIHRvIFNhZmVXZWJBdXRoblNpZ25lciBGYWN0b3J5IGNvbnRyYWN0IHZlcnNpb24gMC4yLjEuXG4gKiBAaW1wbGVtZW50cyBTYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5Q29udHJhY3RfdjBfMl8xX0NvbnRyYWN0IC0gSW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHNwZWNpZmljIHRvIFNhZmVXZWJBdXRoblNpZ25lciBGYWN0b3J5IGNvbnRyYWN0IHZlcnNpb24gMC4yLjEuXG4gKi9cbmNsYXNzIFNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlDb250cmFjdF92MF8yXzEgZXh0ZW5kcyBTYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5QmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBTYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5Q29udHJhY3RfdjBfMl8xXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCB3aGVyZSB0aGUgY29udHJhY3QgcmVzaWRlcy5cbiAgICAgKiBAcGFyYW0gc2FmZVByb3ZpZGVyIC0gQW4gaW5zdGFuY2Ugb2YgU2FmZVByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBzYWZlVmVyc2lvbiAtIFRoZSB2ZXJzaW9uIG9mIHRoZSBTYWZlIGNvbnRyYWN0LlxuICAgICAqIEBwYXJhbSBjdXN0b21Db250cmFjdEFkZHJlc3MgLSBPcHRpb25hbCBjdXN0b20gYWRkcmVzcyBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBhZGRyZXNzIGlzIGRlcml2ZWQgZnJvbSB0aGUgU2FmZSBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBkZWZhdWx0IEFCSSBmb3IgdmVyc2lvbiAwLjIuMSBpcyB1c2VkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNoYWluSWQsIHNhZmVQcm92aWRlciwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3QgZGVmYXVsdEFiaSA9IHNhZmVfY29yZV9zZGtfdHlwZXNfMS5TYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5XzBfMl8xX0NvbnRyYWN0QXJ0aWZhY3RzLmFiaTtcbiAgICAgICAgc3VwZXIoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIHRoZSBhZGRyZXNzIG9mIHRoZSBTaWduZXIuXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbeCwgeSwgdmVyaWZpZXJzXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtzaWduZXJdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdldFNpZ25lciA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuZ2V0U2lnbmVyKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgdGhlIGFkZHJlc3Mgb2YgdGhlIFNpZ25lciBhbmQgZGVwbG95IHRoZSBzaWduZXIgY29udHJhY3QgaWYgaXRzIG5vdCBkZXBsb3llZCB5ZXQuXG4gICAgICAgICAqIEBwYXJhbSBhcmdzIC0gQXJyYXlbeCwgeSwgdmVyaWZpZXJzXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtzaWduZXJdXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNyZWF0ZVNpZ25lciA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuY3JlYXRlU2lnbmVyKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5pc1ZhbGlkU2lnbmF0dXJlRm9yU2lnbmVyID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYXdhaXQgdGhpcy5jb250cmFjdC5pc1ZhbGlkU2lnbmF0dXJlRm9yU2lnbmVyKC4uLmFyZ3MpXTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zYWZlVmVyc2lvbiA9IHNhZmVWZXJzaW9uO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlDb250cmFjdF92MF8yXzE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5Q29udHJhY3RfdjBfMl8xLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSignerFactory/v0.2.1/SafeWebAuthnSignerFactoryContract_v0_2_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/SignMessageLibBaseContract.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/SignMessageLibBaseContract.js ***!
  \************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class  SignMessageLibBaseContract extends BaseContract to specifically integrate with the SignMessageLib contract.\n * It is designed to be instantiated for different versions of the SignMessageLib contract.\n *\n * Subclasses of  SignMessageLibBaseContract are expected to represent specific versions of the SignMessageLib contract.\n *\n * @template SignMessageLibContractAbiType - The ABI type specific to the version of the SignMessageLib contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<SignMessageLibContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - SignMessageLibContract_v1_4_1  extends  SignMessageLibBaseContract<SignMessageLibContract_v1_4_1_Abi>\n * - SignMessageLibContract_v1_3_0  extends  SignMessageLibBaseContract<SignMessageLibContract_v1_3_0_Abi>\n */\nclass SignMessageLibBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of  SignMessageLibBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the SignMessageLib contract. It should be compatible with the specific version of the SignMessageLib contract.\n     * @param safeVersion - The version of the SignMessageLib contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the SignMessageLib deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the SignMessageLib deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi) {\n        const contractName = 'signMessageLibVersion';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = SignMessageLibBaseContract;\n//# sourceMappingURL=SignMessageLibBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaWduTWVzc2FnZUxpYi9TaWduTWVzc2FnZUxpYkJhc2VDb250cmFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVDQUF1QyxtQkFBTyxDQUFDLDJMQUE4QjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy9jb250cmFjdHMvU2lnbk1lc3NhZ2VMaWIvU2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3QuanM/YTM5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IEJhc2VDb250cmFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9jb250cmFjdHMvQmFzZUNvbnRyYWN0XCIpKTtcbi8qKlxuICogQWJzdHJhY3QgY2xhc3MgIFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0IGV4dGVuZHMgQmFzZUNvbnRyYWN0IHRvIHNwZWNpZmljYWxseSBpbnRlZ3JhdGUgd2l0aCB0aGUgU2lnbk1lc3NhZ2VMaWIgY29udHJhY3QuXG4gKiBJdCBpcyBkZXNpZ25lZCB0byBiZSBpbnN0YW50aWF0ZWQgZm9yIGRpZmZlcmVudCB2ZXJzaW9ucyBvZiB0aGUgU2lnbk1lc3NhZ2VMaWIgY29udHJhY3QuXG4gKlxuICogU3ViY2xhc3NlcyBvZiAgU2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3QgYXJlIGV4cGVjdGVkIHRvIHJlcHJlc2VudCBzcGVjaWZpYyB2ZXJzaW9ucyBvZiB0aGUgU2lnbk1lc3NhZ2VMaWIgY29udHJhY3QuXG4gKlxuICogQHRlbXBsYXRlIFNpZ25NZXNzYWdlTGliQ29udHJhY3RBYmlUeXBlIC0gVGhlIEFCSSB0eXBlIHNwZWNpZmljIHRvIHRoZSB2ZXJzaW9uIG9mIHRoZSBTaWduTWVzc2FnZUxpYiBjb250cmFjdCwgZXh0ZW5kaW5nIEludGVyZmFjZUFiaSBmcm9tIEV0aGVycy5cbiAqIEBleHRlbmRzIEJhc2VDb250cmFjdDxTaWduTWVzc2FnZUxpYkNvbnRyYWN0QWJpVHlwZT4gLSBFeHRlbmRzIHRoZSBnZW5lcmljIEJhc2VDb250cmFjdC5cbiAqXG4gKiBFeGFtcGxlIHN1YmNsYXNzZXM6XG4gKiAtIFNpZ25NZXNzYWdlTGliQ29udHJhY3RfdjFfNF8xICBleHRlbmRzICBTaWduTWVzc2FnZUxpYkJhc2VDb250cmFjdDxTaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzRfMV9BYmk+XG4gKiAtIFNpZ25NZXNzYWdlTGliQ29udHJhY3RfdjFfM18wICBleHRlbmRzICBTaWduTWVzc2FnZUxpYkJhc2VDb250cmFjdDxTaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzNfMF9BYmk+XG4gKi9cbmNsYXNzIFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0IGV4dGVuZHMgQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiAgU2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gZGVmYXVsdEFiaSAtIFRoZSBkZWZhdWx0IEFCSSBmb3IgdGhlIFNpZ25NZXNzYWdlTGliIGNvbnRyYWN0LiBJdCBzaG91bGQgYmUgY29tcGF0aWJsZSB3aXRoIHRoZSBzcGVjaWZpYyB2ZXJzaW9uIG9mIHRoZSBTaWduTWVzc2FnZUxpYiBjb250cmFjdC5cbiAgICAgKiBAcGFyYW0gc2FmZVZlcnNpb24gLSBUaGUgdmVyc2lvbiBvZiB0aGUgU2lnbk1lc3NhZ2VMaWIgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBTaWduTWVzc2FnZUxpYiBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBBQkkgaXMgZGVyaXZlZCBmcm9tIHRoZSBTaWduTWVzc2FnZUxpYiBkZXBsb3ltZW50cyBvciB0aGUgZGVmYXVsdEFiaSBpcyB1c2VkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gJ3NpZ25NZXNzYWdlTGliVmVyc2lvbic7XG4gICAgICAgIHN1cGVyKGNvbnRyYWN0TmFtZSwgY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIHRoaXMuY29udHJhY3ROYW1lID0gY29udHJhY3ROYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/SignMessageLibBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/v1.3.0/SignMessageLibContract_v1_3_0.js":
/*!**********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/v1.3.0/SignMessageLibContract_v1_3_0.js ***!
  \**********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst SignMessageLibBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SignMessageLib/SignMessageLibBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/SignMessageLibBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SignMessageLibContract_v1_3_0  is the implementation specific to the SignMessageLib contract version 1.3.0.\n *\n * This class specializes in handling interactions with the SignMessageLib contract version 1.3.0 using Ethers.js v6.\n *\n * @extends  SignMessageLibBaseContract<SignMessageLibContract_v1_3_0_Abi> - Inherits from  SignMessageLibBaseContract with ABI specific to SignMessageLib contract version 1.3.0.\n * @implements SignMessageLibContract_v1_3_0_Contract - Implements the interface specific to SignMessageLib contract version 1.3.0.\n */\nclass SignMessageLibContract_v1_3_0 extends SignMessageLibBaseContract_1.default {\n    /**\n     * Constructs an instance of SignMessageLibContract_v1_3_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the SignMessageLib deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.3.0 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.3.0';\n        const defaultAbi = safe_core_sdk_types_1.signMessageLib_1_3_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        /**\n         * @param args - Array[message]\n         */\n        this.getMessageHash = async (args) => {\n            return [await this.contract.getMessageHash(...args)];\n        };\n        /**\n         * @param args - Array[data]\n         */\n        this.signMessage = async (data, options) => {\n            if (options && !options.gasLimit) {\n                options.gasLimit = Number(await this.estimateGas('signMessage', data, { ...options }));\n            }\n            const txResponse = await this.contract.signMessage(data, { ...options });\n            return (0, utils_1.toTxResult)(txResponse, options);\n        };\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = SignMessageLibContract_v1_3_0;\n//# sourceMappingURL=SignMessageLibContract_v1_3_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaWduTWVzc2FnZUxpYi92MS4zLjAvU2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV8zXzAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxnTEFBMEI7QUFDbEQscURBQXFELG1CQUFPLENBQUMsd1BBQThEO0FBQzNILDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0ZBQXdGLFlBQVk7QUFDcEc7QUFDQSx1RUFBdUUsWUFBWTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaWduTWVzc2FnZUxpYi92MS4zLjAvU2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV8zXzAuanM/Zjc0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL3V0aWxzXCIpO1xuY29uc3QgU2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL1NpZ25NZXNzYWdlTGliL1NpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0XCIpKTtcbmNvbnN0IHNhZmVfY29yZV9zZGtfdHlwZXNfMSA9IHJlcXVpcmUoXCJAc2FmZS1nbG9iYWwvc2FmZS1jb3JlLXNkay10eXBlc1wiKTtcbi8qKlxuICogU2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV8zXzAgIGlzIHRoZSBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyB0byB0aGUgU2lnbk1lc3NhZ2VMaWIgY29udHJhY3QgdmVyc2lvbiAxLjMuMC5cbiAqXG4gKiBUaGlzIGNsYXNzIHNwZWNpYWxpemVzIGluIGhhbmRsaW5nIGludGVyYWN0aW9ucyB3aXRoIHRoZSBTaWduTWVzc2FnZUxpYiBjb250cmFjdCB2ZXJzaW9uIDEuMy4wIHVzaW5nIEV0aGVycy5qcyB2Ni5cbiAqXG4gKiBAZXh0ZW5kcyAgU2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3Q8U2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV8zXzBfQWJpPiAtIEluaGVyaXRzIGZyb20gIFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0IHdpdGggQUJJIHNwZWNpZmljIHRvIFNpZ25NZXNzYWdlTGliIGNvbnRyYWN0IHZlcnNpb24gMS4zLjAuXG4gKiBAaW1wbGVtZW50cyBTaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzNfMF9Db250cmFjdCAtIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpYyB0byBTaWduTWVzc2FnZUxpYiBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICovXG5jbGFzcyBTaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzNfMCBleHRlbmRzIFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBTaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzNfMFxuICAgICAqXG4gICAgICogQHBhcmFtIGNoYWluSWQgLSBUaGUgY2hhaW4gSUQgd2hlcmUgdGhlIGNvbnRyYWN0IHJlc2lkZXMuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBZGRyZXNzIC0gT3B0aW9uYWwgY3VzdG9tIGFkZHJlc3MgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgYWRkcmVzcyBpcyBkZXJpdmVkIGZyb20gdGhlIFNpZ25NZXNzYWdlTGliIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGRlZmF1bHQgQUJJIGZvciB2ZXJzaW9uIDEuMy4wIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKSB7XG4gICAgICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gJzEuMy4wJztcbiAgICAgICAgY29uc3QgZGVmYXVsdEFiaSA9IHNhZmVfY29yZV9zZGtfdHlwZXNfMS5zaWduTWVzc2FnZUxpYl8xXzNfMF9Db250cmFjdEFydGlmYWN0cy5hYmk7XG4gICAgICAgIHN1cGVyKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpO1xuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVttZXNzYWdlXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5nZXRNZXNzYWdlSGFzaCA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuZ2V0TWVzc2FnZUhhc2goLi4uYXJncyldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVtkYXRhXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zaWduTWVzc2FnZSA9IGFzeW5jIChkYXRhLCBvcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiAhb3B0aW9ucy5nYXNMaW1pdCkge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuZ2FzTGltaXQgPSBOdW1iZXIoYXdhaXQgdGhpcy5lc3RpbWF0ZUdhcygnc2lnbk1lc3NhZ2UnLCBkYXRhLCB7IC4uLm9wdGlvbnMgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdHhSZXNwb25zZSA9IGF3YWl0IHRoaXMuY29udHJhY3Quc2lnbk1lc3NhZ2UoZGF0YSwgeyAuLi5vcHRpb25zIH0pO1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLnRvVHhSZXN1bHQpKHR4UmVzcG9uc2UsIG9wdGlvbnMpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLnNhZmVWZXJzaW9uID0gc2FmZVZlcnNpb247XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gU2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV8zXzA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzNfMC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/v1.3.0/SignMessageLibContract_v1_3_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/v1.4.1/SignMessageLibContract_v1_4_1.js":
/*!**********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/v1.4.1/SignMessageLibContract_v1_4_1.js ***!
  \**********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst utils_1 = __webpack_require__(/*! ../../../contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nconst SignMessageLibBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SignMessageLib/SignMessageLibBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/SignMessageLibBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SignMessageLibContract_v1_4_1  is the implementation specific to the SignMessageLib contract version 1.4.1.\n *\n * This class specializes in handling interactions with the SignMessageLib contract version 1.4.1 using Ethers.js v6.\n *\n * @extends  SignMessageLibBaseContract<SignMessageLibContract_v1_4_1_Abi> - Inherits from  SignMessageLibBaseContract with ABI specific to SignMessageLib contract version 1.4.1.\n * @implements SignMessageLibContract_v1_4_1_Contract - Implements the interface specific to SignMessageLib contract version 1.4.1.\n */\nclass SignMessageLibContract_v1_4_1 extends SignMessageLibBaseContract_1.default {\n    /**\n     * Constructs an instance of SignMessageLibContract_v1_4_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the SignMessageLib deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.4.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.4.1';\n        const defaultAbi = safe_core_sdk_types_1.signMessageLib_1_4_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        /**\n         * @param args - Array[message]\n         */\n        this.getMessageHash = async (args) => {\n            return [await this.contract.getMessageHash(...args)];\n        };\n        /**\n         * @param args - Array[data]\n         */\n        this.signMessage = async (data, options) => {\n            if (options && !options.gasLimit) {\n                options.gasLimit = Number(await this.estimateGas('signMessage', data, { ...options }));\n            }\n            const txResponse = await this.contract.signMessage(data, { ...options });\n            return (0, utils_1.toTxResult)(txResponse, options);\n        };\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = SignMessageLibContract_v1_4_1;\n//# sourceMappingURL=SignMessageLibContract_v1_4_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaWduTWVzc2FnZUxpYi92MS40LjEvU2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV80XzEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxnTEFBMEI7QUFDbEQscURBQXFELG1CQUFPLENBQUMsd1BBQThEO0FBQzNILDhCQUE4QixtQkFBTyxDQUFDLDRMQUFrQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0ZBQXdGLFlBQVk7QUFDcEc7QUFDQSx1RUFBdUUsWUFBWTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaWduTWVzc2FnZUxpYi92MS40LjEvU2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV80XzEuanM/OTgyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL3V0aWxzXCIpO1xuY29uc3QgU2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL1NpZ25NZXNzYWdlTGliL1NpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0XCIpKTtcbmNvbnN0IHNhZmVfY29yZV9zZGtfdHlwZXNfMSA9IHJlcXVpcmUoXCJAc2FmZS1nbG9iYWwvc2FmZS1jb3JlLXNkay10eXBlc1wiKTtcbi8qKlxuICogU2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV80XzEgIGlzIHRoZSBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyB0byB0aGUgU2lnbk1lc3NhZ2VMaWIgY29udHJhY3QgdmVyc2lvbiAxLjQuMS5cbiAqXG4gKiBUaGlzIGNsYXNzIHNwZWNpYWxpemVzIGluIGhhbmRsaW5nIGludGVyYWN0aW9ucyB3aXRoIHRoZSBTaWduTWVzc2FnZUxpYiBjb250cmFjdCB2ZXJzaW9uIDEuNC4xIHVzaW5nIEV0aGVycy5qcyB2Ni5cbiAqXG4gKiBAZXh0ZW5kcyAgU2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3Q8U2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV80XzFfQWJpPiAtIEluaGVyaXRzIGZyb20gIFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0IHdpdGggQUJJIHNwZWNpZmljIHRvIFNpZ25NZXNzYWdlTGliIGNvbnRyYWN0IHZlcnNpb24gMS40LjEuXG4gKiBAaW1wbGVtZW50cyBTaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzRfMV9Db250cmFjdCAtIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBzcGVjaWZpYyB0byBTaWduTWVzc2FnZUxpYiBjb250cmFjdCB2ZXJzaW9uIDEuNC4xLlxuICovXG5jbGFzcyBTaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzRfMSBleHRlbmRzIFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBTaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzRfMVxuICAgICAqXG4gICAgICogQHBhcmFtIGNoYWluSWQgLSBUaGUgY2hhaW4gSUQgd2hlcmUgdGhlIGNvbnRyYWN0IHJlc2lkZXMuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBZGRyZXNzIC0gT3B0aW9uYWwgY3VzdG9tIGFkZHJlc3MgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgYWRkcmVzcyBpcyBkZXJpdmVkIGZyb20gdGhlIFNpZ25NZXNzYWdlTGliIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGRlZmF1bHQgQUJJIGZvciB2ZXJzaW9uIDEuNC4xIGlzIHVzZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpKSB7XG4gICAgICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gJzEuNC4xJztcbiAgICAgICAgY29uc3QgZGVmYXVsdEFiaSA9IHNhZmVfY29yZV9zZGtfdHlwZXNfMS5zaWduTWVzc2FnZUxpYl8xXzRfMV9Db250cmFjdEFydGlmYWN0cy5hYmk7XG4gICAgICAgIHN1cGVyKGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmkpO1xuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVttZXNzYWdlXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5nZXRNZXNzYWdlSGFzaCA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2F3YWl0IHRoaXMuY29udHJhY3QuZ2V0TWVzc2FnZUhhc2goLi4uYXJncyldO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgLSBBcnJheVtkYXRhXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zaWduTWVzc2FnZSA9IGFzeW5jIChkYXRhLCBvcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiAhb3B0aW9ucy5nYXNMaW1pdCkge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuZ2FzTGltaXQgPSBOdW1iZXIoYXdhaXQgdGhpcy5lc3RpbWF0ZUdhcygnc2lnbk1lc3NhZ2UnLCBkYXRhLCB7IC4uLm9wdGlvbnMgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdHhSZXNwb25zZSA9IGF3YWl0IHRoaXMuY29udHJhY3Quc2lnbk1lc3NhZ2UoZGF0YSwgeyAuLi5vcHRpb25zIH0pO1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLnRvVHhSZXN1bHQpKHR4UmVzcG9uc2UsIG9wdGlvbnMpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLnNhZmVWZXJzaW9uID0gc2FmZVZlcnNpb247XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gU2lnbk1lc3NhZ2VMaWJDb250cmFjdF92MV80XzE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaWduTWVzc2FnZUxpYkNvbnRyYWN0X3YxXzRfMS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/v1.4.1/SignMessageLibContract_v1_4_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/SimulateTxAccessorBaseContract.js":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/SimulateTxAccessorBaseContract.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst BaseContract_1 = __importDefault(__webpack_require__(/*! ../../contracts/BaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/BaseContract.js\"));\n/**\n * Abstract class SimulateTxAccessorBaseContract extends BaseContract to specifically integrate with the SimulateTxAccessor contract.\n * It is designed to be instantiated for different versions of the Safe contract.\n *\n * Subclasses of SimulateTxAccessorBaseContract are expected to represent specific versions of the contract.\n *\n * @template SimulateTxAccessorContractAbiType - The ABI type specific to the version of the SimulateTxAccessor contract, extending InterfaceAbi from Ethers.\n * @extends BaseContract<SimulateTxAccessorContractAbiType> - Extends the generic BaseContract.\n *\n * Example subclasses:\n * - SimulateTxAccessorContract_v1_4_1  extends SimulateTxAccessorBaseContract<SimulateTxAccessorContract_v1_4_1_Abi>\n * - SimulateTxAccessorContract_v1_3_0  extends SimulateTxAccessorBaseContract<SimulateTxAccessorContract_v1_3_0_Abi>\n */\nclass SimulateTxAccessorBaseContract extends BaseContract_1.default {\n    /**\n     * @constructor\n     * Constructs an instance of SimulateTxAccessorBaseContract.\n     *\n     * @param chainId - The chain ID of the contract.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param defaultAbi - The default ABI for the SimulateTxAccessor contract. It should be compatible with the specific version of the contract.\n     * @param safeVersion - The version of the Safe contract.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the Safe deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the ABI is derived from the Safe deployments or the defaultAbi is used.\n     */\n    constructor(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner) {\n        const contractName = 'simulateTxAccessorVersion';\n        super(contractName, chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi, runner);\n        this.contractName = contractName;\n    }\n}\nexports[\"default\"] = SimulateTxAccessorBaseContract;\n//# sourceMappingURL=SimulateTxAccessorBaseContract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaW11bGF0ZVR4QWNjZXNzb3IvU2ltdWxhdGVUeEFjY2Vzc29yQmFzZUNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUNBQXVDLG1CQUFPLENBQUMsMkxBQThCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaW11bGF0ZVR4QWNjZXNzb3IvU2ltdWxhdGVUeEFjY2Vzc29yQmFzZUNvbnRyYWN0LmpzP2RhYzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vY29udHJhY3RzL0Jhc2VDb250cmFjdFwiKSk7XG4vKipcbiAqIEFic3RyYWN0IGNsYXNzIFNpbXVsYXRlVHhBY2Nlc3NvckJhc2VDb250cmFjdCBleHRlbmRzIEJhc2VDb250cmFjdCB0byBzcGVjaWZpY2FsbHkgaW50ZWdyYXRlIHdpdGggdGhlIFNpbXVsYXRlVHhBY2Nlc3NvciBjb250cmFjdC5cbiAqIEl0IGlzIGRlc2lnbmVkIHRvIGJlIGluc3RhbnRpYXRlZCBmb3IgZGlmZmVyZW50IHZlcnNpb25zIG9mIHRoZSBTYWZlIGNvbnRyYWN0LlxuICpcbiAqIFN1YmNsYXNzZXMgb2YgU2ltdWxhdGVUeEFjY2Vzc29yQmFzZUNvbnRyYWN0IGFyZSBleHBlY3RlZCB0byByZXByZXNlbnQgc3BlY2lmaWMgdmVyc2lvbnMgb2YgdGhlIGNvbnRyYWN0LlxuICpcbiAqIEB0ZW1wbGF0ZSBTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdEFiaVR5cGUgLSBUaGUgQUJJIHR5cGUgc3BlY2lmaWMgdG8gdGhlIHZlcnNpb24gb2YgdGhlIFNpbXVsYXRlVHhBY2Nlc3NvciBjb250cmFjdCwgZXh0ZW5kaW5nIEludGVyZmFjZUFiaSBmcm9tIEV0aGVycy5cbiAqIEBleHRlbmRzIEJhc2VDb250cmFjdDxTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdEFiaVR5cGU+IC0gRXh0ZW5kcyB0aGUgZ2VuZXJpYyBCYXNlQ29udHJhY3QuXG4gKlxuICogRXhhbXBsZSBzdWJjbGFzc2VzOlxuICogLSBTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV80XzEgIGV4dGVuZHMgU2ltdWxhdGVUeEFjY2Vzc29yQmFzZUNvbnRyYWN0PFNpbXVsYXRlVHhBY2Nlc3NvckNvbnRyYWN0X3YxXzRfMV9BYmk+XG4gKiAtIFNpbXVsYXRlVHhBY2Nlc3NvckNvbnRyYWN0X3YxXzNfMCAgZXh0ZW5kcyBTaW11bGF0ZVR4QWNjZXNzb3JCYXNlQ29udHJhY3Q8U2ltdWxhdGVUeEFjY2Vzc29yQ29udHJhY3RfdjFfM18wX0FiaT5cbiAqL1xuY2xhc3MgU2ltdWxhdGVUeEFjY2Vzc29yQmFzZUNvbnRyYWN0IGV4dGVuZHMgQmFzZUNvbnRyYWN0XzEuZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiBTaW11bGF0ZVR4QWNjZXNzb3JCYXNlQ29udHJhY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2hhaW5JZCAtIFRoZSBjaGFpbiBJRCBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gZGVmYXVsdEFiaSAtIFRoZSBkZWZhdWx0IEFCSSBmb3IgdGhlIFNpbXVsYXRlVHhBY2Nlc3NvciBjb250cmFjdC4gSXQgc2hvdWxkIGJlIGNvbXBhdGlibGUgd2l0aCB0aGUgc3BlY2lmaWMgdmVyc2lvbiBvZiB0aGUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIHNhZmVWZXJzaW9uIC0gVGhlIHZlcnNpb24gb2YgdGhlIFNhZmUgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWRkcmVzcyAtIE9wdGlvbmFsIGN1c3RvbSBhZGRyZXNzIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIGFkZHJlc3MgaXMgZGVyaXZlZCBmcm9tIHRoZSBTYWZlIGRlcGxveW1lbnRzIGJhc2VkIG9uIHRoZSBjaGFpbklkIGFuZCBzYWZlVmVyc2lvbi5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBYmkgLSBPcHRpb25hbCBjdXN0b20gQUJJIGZvciB0aGUgY29udHJhY3QuIElmIG5vdCBwcm92aWRlZCwgdGhlIEFCSSBpcyBkZXJpdmVkIGZyb20gdGhlIFNhZmUgZGVwbG95bWVudHMgb3IgdGhlIGRlZmF1bHRBYmkgaXMgdXNlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFpbklkLCBzYWZlUHJvdmlkZXIsIGRlZmF1bHRBYmksIHNhZmVWZXJzaW9uLCBjdXN0b21Db250cmFjdEFkZHJlc3MsIGN1c3RvbUNvbnRyYWN0QWJpLCBydW5uZXIpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gJ3NpbXVsYXRlVHhBY2Nlc3NvclZlcnNpb24nO1xuICAgICAgICBzdXBlcihjb250cmFjdE5hbWUsIGNoYWluSWQsIHNhZmVQcm92aWRlciwgZGVmYXVsdEFiaSwgc2FmZVZlcnNpb24sIGN1c3RvbUNvbnRyYWN0QWRkcmVzcywgY3VzdG9tQ29udHJhY3RBYmksIHJ1bm5lcik7XG4gICAgICAgIHRoaXMuY29udHJhY3ROYW1lID0gY29udHJhY3ROYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFNpbXVsYXRlVHhBY2Nlc3NvckJhc2VDb250cmFjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpbXVsYXRlVHhBY2Nlc3NvckJhc2VDb250cmFjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/SimulateTxAccessorBaseContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/v1.3.0/SimulateTxAccessorContract_v1_3_0.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/v1.3.0/SimulateTxAccessorContract_v1_3_0.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SimulateTxAccessorBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SimulateTxAccessor/SimulateTxAccessorBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/SimulateTxAccessorBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SimulateTxAccessorContract_v1_3_0  is the implementation specific to the SimulateTxAccessor contract version 1.3.0.\n *\n * This class specializes in handling interactions with the SimulateTxAccessor contract version 1.3.0 using Ethers.js v6.\n *\n * @extends SimulateTxAccessorBaseContract<SimulateTxAccessorContract_v1_3_0_Abi> - Inherits from SimulateTxAccessorBaseContract with ABI specific to SimulateTxAccessor contract version 1.3.0.\n * @implements SimulateTxAccessorContract_v1_3_0_Contract - Implements the interface specific to SimulateTxAccessor contract version 1.3.0.\n */\nclass SimulateTxAccessorContract_v1_3_0 extends SimulateTxAccessorBaseContract_1.default {\n    /**\n     * Constructs an instance of SimulateTxAccessorContract_v1_3_0\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the SimulateTxAccessor deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.3.0 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.3.0';\n        const defaultAbi = safe_core_sdk_types_1.simulateTxAccessor_1_3_0_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        /**\n         * @param args - Array[to, value, data, operation]\n         * @returns Array[estimate, success, returnData]\n         */\n        this.simulate = (args) => {\n            return this.contract.simulate(...args);\n        };\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = SimulateTxAccessorContract_v1_3_0;\n//# sourceMappingURL=SimulateTxAccessorContract_v1_3_0.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaW11bGF0ZVR4QWNjZXNzb3IvdjEuMy4wL1NpbXVsYXRlVHhBY2Nlc3NvckNvbnRyYWN0X3YxXzNfMC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlEQUF5RCxtQkFBTyxDQUFDLHdRQUFzRTtBQUN2SSw4QkFBOEIsbUJBQU8sQ0FBQyw0TEFBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL1NpbXVsYXRlVHhBY2Nlc3Nvci92MS4zLjAvU2ltdWxhdGVUeEFjY2Vzc29yQ29udHJhY3RfdjFfM18wLmpzPzRhNTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBTaW11bGF0ZVR4QWNjZXNzb3JCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL1NpbXVsYXRlVHhBY2Nlc3Nvci9TaW11bGF0ZVR4QWNjZXNzb3JCYXNlQ29udHJhY3RcIikpO1xuY29uc3Qgc2FmZV9jb3JlX3Nka190eXBlc18xID0gcmVxdWlyZShcIkBzYWZlLWdsb2JhbC9zYWZlLWNvcmUtc2RrLXR5cGVzXCIpO1xuLyoqXG4gKiBTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV8zXzAgIGlzIHRoZSBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyB0byB0aGUgU2ltdWxhdGVUeEFjY2Vzc29yIGNvbnRyYWN0IHZlcnNpb24gMS4zLjAuXG4gKlxuICogVGhpcyBjbGFzcyBzcGVjaWFsaXplcyBpbiBoYW5kbGluZyBpbnRlcmFjdGlvbnMgd2l0aCB0aGUgU2ltdWxhdGVUeEFjY2Vzc29yIGNvbnRyYWN0IHZlcnNpb24gMS4zLjAgdXNpbmcgRXRoZXJzLmpzIHY2LlxuICpcbiAqIEBleHRlbmRzIFNpbXVsYXRlVHhBY2Nlc3NvckJhc2VDb250cmFjdDxTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV8zXzBfQWJpPiAtIEluaGVyaXRzIGZyb20gU2ltdWxhdGVUeEFjY2Vzc29yQmFzZUNvbnRyYWN0IHdpdGggQUJJIHNwZWNpZmljIHRvIFNpbXVsYXRlVHhBY2Nlc3NvciBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICogQGltcGxlbWVudHMgU2ltdWxhdGVUeEFjY2Vzc29yQ29udHJhY3RfdjFfM18wX0NvbnRyYWN0IC0gSW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHNwZWNpZmljIHRvIFNpbXVsYXRlVHhBY2Nlc3NvciBjb250cmFjdCB2ZXJzaW9uIDEuMy4wLlxuICovXG5jbGFzcyBTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV8zXzAgZXh0ZW5kcyBTaW11bGF0ZVR4QWNjZXNzb3JCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIFNpbXVsYXRlVHhBY2Nlc3NvckNvbnRyYWN0X3YxXzNfMFxuICAgICAqXG4gICAgICogQHBhcmFtIGNoYWluSWQgLSBUaGUgY2hhaW4gSUQgd2hlcmUgdGhlIGNvbnRyYWN0IHJlc2lkZXMuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBZGRyZXNzIC0gT3B0aW9uYWwgY3VzdG9tIGFkZHJlc3MgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgYWRkcmVzcyBpcyBkZXJpdmVkIGZyb20gdGhlIFNpbXVsYXRlVHhBY2Nlc3NvciBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBkZWZhdWx0IEFCSSBmb3IgdmVyc2lvbiAxLjMuMCBpcyB1c2VkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNoYWluSWQsIHNhZmVQcm92aWRlciwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSkge1xuICAgICAgICBjb25zdCBzYWZlVmVyc2lvbiA9ICcxLjMuMCc7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRBYmkgPSBzYWZlX2NvcmVfc2RrX3R5cGVzXzEuc2ltdWxhdGVUeEFjY2Vzc29yXzFfM18wX0NvbnRyYWN0QXJ0aWZhY3RzLmFiaTtcbiAgICAgICAgc3VwZXIoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAcGFyYW0gYXJncyAtIEFycmF5W3RvLCB2YWx1ZSwgZGF0YSwgb3BlcmF0aW9uXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtlc3RpbWF0ZSwgc3VjY2VzcywgcmV0dXJuRGF0YV1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2ltdWxhdGUgPSAoYXJncykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29udHJhY3Quc2ltdWxhdGUoLi4uYXJncyk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2FmZVZlcnNpb24gPSBzYWZlVmVyc2lvbjtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV8zXzA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV8zXzAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/v1.3.0/SimulateTxAccessorContract_v1_3_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/v1.4.1/SimulateTxAccessorContract_v1_4_1.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/v1.4.1/SimulateTxAccessorContract_v1_4_1.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SimulateTxAccessorBaseContract_1 = __importDefault(__webpack_require__(/*! ../../../contracts/SimulateTxAccessor/SimulateTxAccessorBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/SimulateTxAccessorBaseContract.js\"));\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\n/**\n * SimulateTxAccessorContract_v1_4_1  is the implementation specific to the SimulateTxAccessor contract version 1.4.1.\n *\n * This class specializes in handling interactions with the SimulateTxAccessor contract version 1.4.1 using Ethers.js v6.\n *\n * @extends SimulateTxAccessorBaseContract<SimulateTxAccessorContract_v1_4_1_Abi> - Inherits from SimulateTxAccessorBaseContract with ABI specific to SimulateTxAccessor contract version 1.4.1.\n * @implements SimulateTxAccessorContract_v1_4_1_Contract - Implements the interface specific to SimulateTxAccessor contract version 1.4.1.\n */\nclass SimulateTxAccessorContract_v1_4_1 extends SimulateTxAccessorBaseContract_1.default {\n    /**\n     * Constructs an instance of SimulateTxAccessorContract_v1_4_1\n     *\n     * @param chainId - The chain ID where the contract resides.\n     * @param safeProvider - An instance of SafeProvider.\n     * @param customContractAddress - Optional custom address for the contract. If not provided, the address is derived from the SimulateTxAccessor deployments based on the chainId and safeVersion.\n     * @param customContractAbi - Optional custom ABI for the contract. If not provided, the default ABI for version 1.4.1 is used.\n     */\n    constructor(chainId, safeProvider, customContractAddress, customContractAbi) {\n        const safeVersion = '1.4.1';\n        const defaultAbi = safe_core_sdk_types_1.simulateTxAccessor_1_4_1_ContractArtifacts.abi;\n        super(chainId, safeProvider, defaultAbi, safeVersion, customContractAddress, customContractAbi);\n        /**\n         * @param args - Array[to, value, data, operation]\n         * @returns Array[estimate, success, returnData]\n         */\n        this.simulate = (args) => {\n            return this.contract.simulate(...args);\n        };\n        this.safeVersion = safeVersion;\n    }\n}\nexports[\"default\"] = SimulateTxAccessorContract_v1_4_1;\n//# sourceMappingURL=SimulateTxAccessorContract_v1_4_1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9TaW11bGF0ZVR4QWNjZXNzb3IvdjEuNC4xL1NpbXVsYXRlVHhBY2Nlc3NvckNvbnRyYWN0X3YxXzRfMS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlEQUF5RCxtQkFBTyxDQUFDLHdRQUFzRTtBQUN2SSw4QkFBOEIsbUJBQU8sQ0FBQyw0TEFBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvY29udHJhY3RzL1NpbXVsYXRlVHhBY2Nlc3Nvci92MS40LjEvU2ltdWxhdGVUeEFjY2Vzc29yQ29udHJhY3RfdjFfNF8xLmpzP2RiMTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBTaW11bGF0ZVR4QWNjZXNzb3JCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vY29udHJhY3RzL1NpbXVsYXRlVHhBY2Nlc3Nvci9TaW11bGF0ZVR4QWNjZXNzb3JCYXNlQ29udHJhY3RcIikpO1xuY29uc3Qgc2FmZV9jb3JlX3Nka190eXBlc18xID0gcmVxdWlyZShcIkBzYWZlLWdsb2JhbC9zYWZlLWNvcmUtc2RrLXR5cGVzXCIpO1xuLyoqXG4gKiBTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV80XzEgIGlzIHRoZSBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyB0byB0aGUgU2ltdWxhdGVUeEFjY2Vzc29yIGNvbnRyYWN0IHZlcnNpb24gMS40LjEuXG4gKlxuICogVGhpcyBjbGFzcyBzcGVjaWFsaXplcyBpbiBoYW5kbGluZyBpbnRlcmFjdGlvbnMgd2l0aCB0aGUgU2ltdWxhdGVUeEFjY2Vzc29yIGNvbnRyYWN0IHZlcnNpb24gMS40LjEgdXNpbmcgRXRoZXJzLmpzIHY2LlxuICpcbiAqIEBleHRlbmRzIFNpbXVsYXRlVHhBY2Nlc3NvckJhc2VDb250cmFjdDxTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV80XzFfQWJpPiAtIEluaGVyaXRzIGZyb20gU2ltdWxhdGVUeEFjY2Vzc29yQmFzZUNvbnRyYWN0IHdpdGggQUJJIHNwZWNpZmljIHRvIFNpbXVsYXRlVHhBY2Nlc3NvciBjb250cmFjdCB2ZXJzaW9uIDEuNC4xLlxuICogQGltcGxlbWVudHMgU2ltdWxhdGVUeEFjY2Vzc29yQ29udHJhY3RfdjFfNF8xX0NvbnRyYWN0IC0gSW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHNwZWNpZmljIHRvIFNpbXVsYXRlVHhBY2Nlc3NvciBjb250cmFjdCB2ZXJzaW9uIDEuNC4xLlxuICovXG5jbGFzcyBTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV80XzEgZXh0ZW5kcyBTaW11bGF0ZVR4QWNjZXNzb3JCYXNlQ29udHJhY3RfMS5kZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGFuIGluc3RhbmNlIG9mIFNpbXVsYXRlVHhBY2Nlc3NvckNvbnRyYWN0X3YxXzRfMVxuICAgICAqXG4gICAgICogQHBhcmFtIGNoYWluSWQgLSBUaGUgY2hhaW4gSUQgd2hlcmUgdGhlIGNvbnRyYWN0IHJlc2lkZXMuXG4gICAgICogQHBhcmFtIHNhZmVQcm92aWRlciAtIEFuIGluc3RhbmNlIG9mIFNhZmVQcm92aWRlci5cbiAgICAgKiBAcGFyYW0gY3VzdG9tQ29udHJhY3RBZGRyZXNzIC0gT3B0aW9uYWwgY3VzdG9tIGFkZHJlc3MgZm9yIHRoZSBjb250cmFjdC4gSWYgbm90IHByb3ZpZGVkLCB0aGUgYWRkcmVzcyBpcyBkZXJpdmVkIGZyb20gdGhlIFNpbXVsYXRlVHhBY2Nlc3NvciBkZXBsb3ltZW50cyBiYXNlZCBvbiB0aGUgY2hhaW5JZCBhbmQgc2FmZVZlcnNpb24uXG4gICAgICogQHBhcmFtIGN1c3RvbUNvbnRyYWN0QWJpIC0gT3B0aW9uYWwgY3VzdG9tIEFCSSBmb3IgdGhlIGNvbnRyYWN0LiBJZiBub3QgcHJvdmlkZWQsIHRoZSBkZWZhdWx0IEFCSSBmb3IgdmVyc2lvbiAxLjQuMSBpcyB1c2VkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNoYWluSWQsIHNhZmVQcm92aWRlciwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSkge1xuICAgICAgICBjb25zdCBzYWZlVmVyc2lvbiA9ICcxLjQuMSc7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRBYmkgPSBzYWZlX2NvcmVfc2RrX3R5cGVzXzEuc2ltdWxhdGVUeEFjY2Vzc29yXzFfNF8xX0NvbnRyYWN0QXJ0aWZhY3RzLmFiaTtcbiAgICAgICAgc3VwZXIoY2hhaW5JZCwgc2FmZVByb3ZpZGVyLCBkZWZhdWx0QWJpLCBzYWZlVmVyc2lvbiwgY3VzdG9tQ29udHJhY3RBZGRyZXNzLCBjdXN0b21Db250cmFjdEFiaSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAcGFyYW0gYXJncyAtIEFycmF5W3RvLCB2YWx1ZSwgZGF0YSwgb3BlcmF0aW9uXVxuICAgICAgICAgKiBAcmV0dXJucyBBcnJheVtlc3RpbWF0ZSwgc3VjY2VzcywgcmV0dXJuRGF0YV1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2ltdWxhdGUgPSAoYXJncykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29udHJhY3Quc2ltdWxhdGUoLi4uYXJncyk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2FmZVZlcnNpb24gPSBzYWZlVmVyc2lvbjtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBTaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV80XzE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaW11bGF0ZVR4QWNjZXNzb3JDb250cmFjdF92MV80XzEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/v1.4.1/SimulateTxAccessorContract_v1_4_1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getContractDeployment = exports.safeDeploymentsL1ChainIds = exports.safeDeploymentsVersions = exports.SAFE_BASE_VERSION = exports.DEFAULT_SAFE_VERSION = void 0;\nconst safe_deployments_1 = __webpack_require__(/*! @safe-global/safe-deployments */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-deployments@1.37.3/node_modules/@safe-global/safe-deployments/dist/index.js\");\nconst safe_modules_deployments_1 = __webpack_require__(/*! @safe-global/safe-modules-deployments */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-modules-deployments@2.2.1/node_modules/@safe-global/safe-modules-deployments/dist/index.js\");\nexports.DEFAULT_SAFE_VERSION = '1.3.0';\nexports.SAFE_BASE_VERSION = '1.0.0';\nexports.safeDeploymentsVersions = {\n    '1.4.1': {\n        safeSingletonVersion: '1.4.1',\n        safeSingletonL2Version: '1.4.1',\n        safeProxyFactoryVersion: '1.4.1',\n        compatibilityFallbackHandler: '1.4.1',\n        multiSendVersion: '1.4.1',\n        multiSendCallOnlyVersion: '1.4.1',\n        signMessageLibVersion: '1.4.1',\n        createCallVersion: '1.4.1',\n        simulateTxAccessorVersion: '1.4.1',\n        safeWebAuthnSignerFactoryVersion: '0.2.1',\n        safeWebAuthnSharedSignerVersion: '0.2.1'\n    },\n    '1.3.0': {\n        safeSingletonVersion: '1.3.0',\n        safeSingletonL2Version: '1.3.0',\n        safeProxyFactoryVersion: '1.3.0',\n        compatibilityFallbackHandler: '1.3.0',\n        multiSendVersion: '1.3.0',\n        multiSendCallOnlyVersion: '1.3.0',\n        signMessageLibVersion: '1.3.0',\n        createCallVersion: '1.3.0',\n        simulateTxAccessorVersion: '1.3.0',\n        safeWebAuthnSignerFactoryVersion: '0.2.1',\n        safeWebAuthnSharedSignerVersion: '0.2.1'\n    },\n    '1.2.0': {\n        safeSingletonVersion: '1.2.0',\n        safeSingletonL2Version: undefined,\n        safeProxyFactoryVersion: '1.1.1',\n        compatibilityFallbackHandler: '1.3.0',\n        multiSendVersion: '1.1.1',\n        multiSendCallOnlyVersion: '1.3.0',\n        signMessageLibVersion: '1.3.0',\n        createCallVersion: '1.3.0',\n        safeWebAuthnSignerFactoryVersion: '0.2.1',\n        safeWebAuthnSharedSignerVersion: '0.2.1'\n    },\n    '1.1.1': {\n        safeSingletonVersion: '1.1.1',\n        safeSingletonL2Version: undefined,\n        safeProxyFactoryVersion: '1.1.1',\n        compatibilityFallbackHandler: '1.3.0',\n        multiSendVersion: '1.1.1',\n        multiSendCallOnlyVersion: '1.3.0',\n        signMessageLibVersion: '1.3.0',\n        createCallVersion: '1.3.0',\n        safeWebAuthnSignerFactoryVersion: '0.2.1',\n        safeWebAuthnSharedSignerVersion: '0.2.1'\n    },\n    '1.0.0': {\n        safeSingletonVersion: '1.0.0',\n        safeSingletonL2Version: undefined,\n        safeProxyFactoryVersion: '1.0.0',\n        compatibilityFallbackHandler: '1.3.0',\n        multiSendVersion: '1.1.1',\n        multiSendCallOnlyVersion: '1.3.0',\n        signMessageLibVersion: '1.3.0',\n        createCallVersion: '1.3.0',\n        safeWebAuthnSignerFactoryVersion: '0.2.1',\n        safeWebAuthnSharedSignerVersion: '0.2.1'\n    }\n};\nexports.safeDeploymentsL1ChainIds = [\n    1n // Ethereum Mainnet\n];\nconst contractFunctions = {\n    safeSingletonVersion: safe_deployments_1.getSafeSingletonDeployment,\n    safeSingletonL2Version: safe_deployments_1.getSafeL2SingletonDeployment,\n    safeProxyFactoryVersion: safe_deployments_1.getProxyFactoryDeployment,\n    compatibilityFallbackHandler: safe_deployments_1.getCompatibilityFallbackHandlerDeployment,\n    multiSendVersion: safe_deployments_1.getMultiSendDeployment,\n    multiSendCallOnlyVersion: safe_deployments_1.getMultiSendCallOnlyDeployment,\n    signMessageLibVersion: safe_deployments_1.getSignMessageLibDeployment,\n    createCallVersion: safe_deployments_1.getCreateCallDeployment,\n    simulateTxAccessorVersion: safe_deployments_1.getSimulateTxAccessorDeployment,\n    safeWebAuthnSignerFactoryVersion: safe_modules_deployments_1.getSafeWebAuthnSignerFactoryDeployment,\n    safeWebAuthnSharedSignerVersion: safe_modules_deployments_1.getSafeWebAuthnShareSignerDeployment\n};\nfunction getContractDeployment(safeVersion, chainId, contractName) {\n    const contractVersion = exports.safeDeploymentsVersions[safeVersion][contractName];\n    const filters = {\n        version: contractVersion,\n        network: chainId.toString(),\n        released: true\n    };\n    const deployment = contractFunctions[contractName](filters);\n    return deployment;\n}\nexports.getContractDeployment = getContractDeployment;\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcsaUNBQWlDLEdBQUcsK0JBQStCLEdBQUcseUJBQXlCLEdBQUcsNEJBQTRCO0FBQzlKLDJCQUEyQixtQkFBTyxDQUFDLCtKQUErQjtBQUNsRSxtQ0FBbUMsbUJBQU8sQ0FBQyxzTEFBdUM7QUFDbEYsNEJBQTRCO0FBQzVCLHlCQUF5QjtBQUN6QiwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy9jb250cmFjdHMvY29uZmlnLmpzP2E4ODAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldENvbnRyYWN0RGVwbG95bWVudCA9IGV4cG9ydHMuc2FmZURlcGxveW1lbnRzTDFDaGFpbklkcyA9IGV4cG9ydHMuc2FmZURlcGxveW1lbnRzVmVyc2lvbnMgPSBleHBvcnRzLlNBRkVfQkFTRV9WRVJTSU9OID0gZXhwb3J0cy5ERUZBVUxUX1NBRkVfVkVSU0lPTiA9IHZvaWQgMDtcbmNvbnN0IHNhZmVfZGVwbG95bWVudHNfMSA9IHJlcXVpcmUoXCJAc2FmZS1nbG9iYWwvc2FmZS1kZXBsb3ltZW50c1wiKTtcbmNvbnN0IHNhZmVfbW9kdWxlc19kZXBsb3ltZW50c18xID0gcmVxdWlyZShcIkBzYWZlLWdsb2JhbC9zYWZlLW1vZHVsZXMtZGVwbG95bWVudHNcIik7XG5leHBvcnRzLkRFRkFVTFRfU0FGRV9WRVJTSU9OID0gJzEuMy4wJztcbmV4cG9ydHMuU0FGRV9CQVNFX1ZFUlNJT04gPSAnMS4wLjAnO1xuZXhwb3J0cy5zYWZlRGVwbG95bWVudHNWZXJzaW9ucyA9IHtcbiAgICAnMS40LjEnOiB7XG4gICAgICAgIHNhZmVTaW5nbGV0b25WZXJzaW9uOiAnMS40LjEnLFxuICAgICAgICBzYWZlU2luZ2xldG9uTDJWZXJzaW9uOiAnMS40LjEnLFxuICAgICAgICBzYWZlUHJveHlGYWN0b3J5VmVyc2lvbjogJzEuNC4xJyxcbiAgICAgICAgY29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlcjogJzEuNC4xJyxcbiAgICAgICAgbXVsdGlTZW5kVmVyc2lvbjogJzEuNC4xJyxcbiAgICAgICAgbXVsdGlTZW5kQ2FsbE9ubHlWZXJzaW9uOiAnMS40LjEnLFxuICAgICAgICBzaWduTWVzc2FnZUxpYlZlcnNpb246ICcxLjQuMScsXG4gICAgICAgIGNyZWF0ZUNhbGxWZXJzaW9uOiAnMS40LjEnLFxuICAgICAgICBzaW11bGF0ZVR4QWNjZXNzb3JWZXJzaW9uOiAnMS40LjEnLFxuICAgICAgICBzYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5VmVyc2lvbjogJzAuMi4xJyxcbiAgICAgICAgc2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyVmVyc2lvbjogJzAuMi4xJ1xuICAgIH0sXG4gICAgJzEuMy4wJzoge1xuICAgICAgICBzYWZlU2luZ2xldG9uVmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2FmZVNpbmdsZXRvbkwyVmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2FmZVByb3h5RmFjdG9yeVZlcnNpb246ICcxLjMuMCcsXG4gICAgICAgIGNvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXI6ICcxLjMuMCcsXG4gICAgICAgIG11bHRpU2VuZFZlcnNpb246ICcxLjMuMCcsXG4gICAgICAgIG11bHRpU2VuZENhbGxPbmx5VmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2lnbk1lc3NhZ2VMaWJWZXJzaW9uOiAnMS4zLjAnLFxuICAgICAgICBjcmVhdGVDYWxsVmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2ltdWxhdGVUeEFjY2Vzc29yVmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeVZlcnNpb246ICcwLjIuMScsXG4gICAgICAgIHNhZmVXZWJBdXRoblNoYXJlZFNpZ25lclZlcnNpb246ICcwLjIuMSdcbiAgICB9LFxuICAgICcxLjIuMCc6IHtcbiAgICAgICAgc2FmZVNpbmdsZXRvblZlcnNpb246ICcxLjIuMCcsXG4gICAgICAgIHNhZmVTaW5nbGV0b25MMlZlcnNpb246IHVuZGVmaW5lZCxcbiAgICAgICAgc2FmZVByb3h5RmFjdG9yeVZlcnNpb246ICcxLjEuMScsXG4gICAgICAgIGNvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXI6ICcxLjMuMCcsXG4gICAgICAgIG11bHRpU2VuZFZlcnNpb246ICcxLjEuMScsXG4gICAgICAgIG11bHRpU2VuZENhbGxPbmx5VmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2lnbk1lc3NhZ2VMaWJWZXJzaW9uOiAnMS4zLjAnLFxuICAgICAgICBjcmVhdGVDYWxsVmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeVZlcnNpb246ICcwLjIuMScsXG4gICAgICAgIHNhZmVXZWJBdXRoblNoYXJlZFNpZ25lclZlcnNpb246ICcwLjIuMSdcbiAgICB9LFxuICAgICcxLjEuMSc6IHtcbiAgICAgICAgc2FmZVNpbmdsZXRvblZlcnNpb246ICcxLjEuMScsXG4gICAgICAgIHNhZmVTaW5nbGV0b25MMlZlcnNpb246IHVuZGVmaW5lZCxcbiAgICAgICAgc2FmZVByb3h5RmFjdG9yeVZlcnNpb246ICcxLjEuMScsXG4gICAgICAgIGNvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXI6ICcxLjMuMCcsXG4gICAgICAgIG11bHRpU2VuZFZlcnNpb246ICcxLjEuMScsXG4gICAgICAgIG11bHRpU2VuZENhbGxPbmx5VmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2lnbk1lc3NhZ2VMaWJWZXJzaW9uOiAnMS4zLjAnLFxuICAgICAgICBjcmVhdGVDYWxsVmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeVZlcnNpb246ICcwLjIuMScsXG4gICAgICAgIHNhZmVXZWJBdXRoblNoYXJlZFNpZ25lclZlcnNpb246ICcwLjIuMSdcbiAgICB9LFxuICAgICcxLjAuMCc6IHtcbiAgICAgICAgc2FmZVNpbmdsZXRvblZlcnNpb246ICcxLjAuMCcsXG4gICAgICAgIHNhZmVTaW5nbGV0b25MMlZlcnNpb246IHVuZGVmaW5lZCxcbiAgICAgICAgc2FmZVByb3h5RmFjdG9yeVZlcnNpb246ICcxLjAuMCcsXG4gICAgICAgIGNvbXBhdGliaWxpdHlGYWxsYmFja0hhbmRsZXI6ICcxLjMuMCcsXG4gICAgICAgIG11bHRpU2VuZFZlcnNpb246ICcxLjEuMScsXG4gICAgICAgIG11bHRpU2VuZENhbGxPbmx5VmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2lnbk1lc3NhZ2VMaWJWZXJzaW9uOiAnMS4zLjAnLFxuICAgICAgICBjcmVhdGVDYWxsVmVyc2lvbjogJzEuMy4wJyxcbiAgICAgICAgc2FmZVdlYkF1dGhuU2lnbmVyRmFjdG9yeVZlcnNpb246ICcwLjIuMScsXG4gICAgICAgIHNhZmVXZWJBdXRoblNoYXJlZFNpZ25lclZlcnNpb246ICcwLjIuMSdcbiAgICB9XG59O1xuZXhwb3J0cy5zYWZlRGVwbG95bWVudHNMMUNoYWluSWRzID0gW1xuICAgIDFuIC8vIEV0aGVyZXVtIE1haW5uZXRcbl07XG5jb25zdCBjb250cmFjdEZ1bmN0aW9ucyA9IHtcbiAgICBzYWZlU2luZ2xldG9uVmVyc2lvbjogc2FmZV9kZXBsb3ltZW50c18xLmdldFNhZmVTaW5nbGV0b25EZXBsb3ltZW50LFxuICAgIHNhZmVTaW5nbGV0b25MMlZlcnNpb246IHNhZmVfZGVwbG95bWVudHNfMS5nZXRTYWZlTDJTaW5nbGV0b25EZXBsb3ltZW50LFxuICAgIHNhZmVQcm94eUZhY3RvcnlWZXJzaW9uOiBzYWZlX2RlcGxveW1lbnRzXzEuZ2V0UHJveHlGYWN0b3J5RGVwbG95bWVudCxcbiAgICBjb21wYXRpYmlsaXR5RmFsbGJhY2tIYW5kbGVyOiBzYWZlX2RlcGxveW1lbnRzXzEuZ2V0Q29tcGF0aWJpbGl0eUZhbGxiYWNrSGFuZGxlckRlcGxveW1lbnQsXG4gICAgbXVsdGlTZW5kVmVyc2lvbjogc2FmZV9kZXBsb3ltZW50c18xLmdldE11bHRpU2VuZERlcGxveW1lbnQsXG4gICAgbXVsdGlTZW5kQ2FsbE9ubHlWZXJzaW9uOiBzYWZlX2RlcGxveW1lbnRzXzEuZ2V0TXVsdGlTZW5kQ2FsbE9ubHlEZXBsb3ltZW50LFxuICAgIHNpZ25NZXNzYWdlTGliVmVyc2lvbjogc2FmZV9kZXBsb3ltZW50c18xLmdldFNpZ25NZXNzYWdlTGliRGVwbG95bWVudCxcbiAgICBjcmVhdGVDYWxsVmVyc2lvbjogc2FmZV9kZXBsb3ltZW50c18xLmdldENyZWF0ZUNhbGxEZXBsb3ltZW50LFxuICAgIHNpbXVsYXRlVHhBY2Nlc3NvclZlcnNpb246IHNhZmVfZGVwbG95bWVudHNfMS5nZXRTaW11bGF0ZVR4QWNjZXNzb3JEZXBsb3ltZW50LFxuICAgIHNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlWZXJzaW9uOiBzYWZlX21vZHVsZXNfZGVwbG95bWVudHNfMS5nZXRTYWZlV2ViQXV0aG5TaWduZXJGYWN0b3J5RGVwbG95bWVudCxcbiAgICBzYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJWZXJzaW9uOiBzYWZlX21vZHVsZXNfZGVwbG95bWVudHNfMS5nZXRTYWZlV2ViQXV0aG5TaGFyZVNpZ25lckRlcGxveW1lbnRcbn07XG5mdW5jdGlvbiBnZXRDb250cmFjdERlcGxveW1lbnQoc2FmZVZlcnNpb24sIGNoYWluSWQsIGNvbnRyYWN0TmFtZSkge1xuICAgIGNvbnN0IGNvbnRyYWN0VmVyc2lvbiA9IGV4cG9ydHMuc2FmZURlcGxveW1lbnRzVmVyc2lvbnNbc2FmZVZlcnNpb25dW2NvbnRyYWN0TmFtZV07XG4gICAgY29uc3QgZmlsdGVycyA9IHtcbiAgICAgICAgdmVyc2lvbjogY29udHJhY3RWZXJzaW9uLFxuICAgICAgICBuZXR3b3JrOiBjaGFpbklkLnRvU3RyaW5nKCksXG4gICAgICAgIHJlbGVhc2VkOiB0cnVlXG4gICAgfTtcbiAgICBjb25zdCBkZXBsb3ltZW50ID0gY29udHJhY3RGdW5jdGlvbnNbY29udHJhY3ROYW1lXShmaWx0ZXJzKTtcbiAgICByZXR1cm4gZGVwbG95bWVudDtcbn1cbmV4cG9ydHMuZ2V0Q29udHJhY3REZXBsb3ltZW50ID0gZ2V0Q29udHJhY3REZXBsb3ltZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZmlnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/contractInstances.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/contractInstances.js ***!
  \************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSafeWebAuthnSharedSignerContractInstance = exports.getSafeWebAuthnSignerFactoryContractInstance = exports.getSimulateTxAccessorContractInstance = exports.getCreateCallContractInstance = exports.getSignMessageLibContractInstance = exports.getSafeProxyFactoryContractInstance = exports.getMultiSendCallOnlyContractInstance = exports.getMultiSendContractInstance = exports.getCompatibilityFallbackHandlerContractInstance = exports.getSafeContractInstance = void 0;\nconst CreateCallContract_v1_3_0_1 = __importDefault(__webpack_require__(/*! ./CreateCall/v1.3.0/CreateCallContract_v1_3_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/v1.3.0/CreateCallContract_v1_3_0.js\"));\nconst CreateCallContract_v1_4_1_1 = __importDefault(__webpack_require__(/*! ./CreateCall/v1.4.1/CreateCallContract_v1_4_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/v1.4.1/CreateCallContract_v1_4_1.js\"));\nconst MultiSendContract_v1_1_1_1 = __importDefault(__webpack_require__(/*! ./MultiSend/v1.1.1/MultiSendContract_v1_1_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.1.1/MultiSendContract_v1_1_1.js\"));\nconst MultiSendContract_v1_3_0_1 = __importDefault(__webpack_require__(/*! ./MultiSend/v1.3.0/MultiSendContract_v1_3_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.3.0/MultiSendContract_v1_3_0.js\"));\nconst MultiSendContract_v1_4_1_1 = __importDefault(__webpack_require__(/*! ./MultiSend/v1.4.1/MultiSendContract_v1_4_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.4.1/MultiSendContract_v1_4_1.js\"));\nconst MultiSendCallOnlyContract_v1_3_0_1 = __importDefault(__webpack_require__(/*! ./MultiSend/v1.3.0/MultiSendCallOnlyContract_v1_3_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.3.0/MultiSendCallOnlyContract_v1_3_0.js\"));\nconst MultiSendCallOnlyContract_v1_4_1_1 = __importDefault(__webpack_require__(/*! ./MultiSend/v1.4.1/MultiSendCallOnlyContract_v1_4_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/v1.4.1/MultiSendCallOnlyContract_v1_4_1.js\"));\nconst SignMessageLibContract_v1_3_0_1 = __importDefault(__webpack_require__(/*! ./SignMessageLib/v1.3.0/SignMessageLibContract_v1_3_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/v1.3.0/SignMessageLibContract_v1_3_0.js\"));\nconst SignMessageLibContract_v1_4_1_1 = __importDefault(__webpack_require__(/*! ./SignMessageLib/v1.4.1/SignMessageLibContract_v1_4_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/v1.4.1/SignMessageLibContract_v1_4_1.js\"));\nconst SafeContract_v1_0_0_1 = __importDefault(__webpack_require__(/*! ./Safe/v1.0.0/SafeContract_v1_0_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.0.0/SafeContract_v1_0_0.js\"));\nconst SafeContract_v1_1_1_1 = __importDefault(__webpack_require__(/*! ./Safe/v1.1.1/SafeContract_v1_1_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.1.1/SafeContract_v1_1_1.js\"));\nconst SafeContract_v1_2_0_1 = __importDefault(__webpack_require__(/*! ./Safe/v1.2.0/SafeContract_v1_2_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.2.0/SafeContract_v1_2_0.js\"));\nconst SafeContract_v1_3_0_1 = __importDefault(__webpack_require__(/*! ./Safe/v1.3.0/SafeContract_v1_3_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.3.0/SafeContract_v1_3_0.js\"));\nconst SafeContract_v1_4_1_1 = __importDefault(__webpack_require__(/*! ./Safe/v1.4.1/SafeContract_v1_4_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/v1.4.1/SafeContract_v1_4_1.js\"));\nconst SafeProxyFactoryContract_v1_0_0_1 = __importDefault(__webpack_require__(/*! ./SafeProxyFactory/v1.0.0/SafeProxyFactoryContract_v1_0_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.0.0/SafeProxyFactoryContract_v1_0_0.js\"));\nconst SafeProxyFactoryContract_v1_1_1_1 = __importDefault(__webpack_require__(/*! ./SafeProxyFactory/v1.1.1/SafeProxyFactoryContract_v1_1_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.1.1/SafeProxyFactoryContract_v1_1_1.js\"));\nconst SafeProxyFactoryContract_v1_3_0_1 = __importDefault(__webpack_require__(/*! ./SafeProxyFactory/v1.3.0/SafeProxyFactoryContract_v1_3_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.3.0/SafeProxyFactoryContract_v1_3_0.js\"));\nconst SafeProxyFactoryContract_v1_4_1_1 = __importDefault(__webpack_require__(/*! ./SafeProxyFactory/v1.4.1/SafeProxyFactoryContract_v1_4_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/v1.4.1/SafeProxyFactoryContract_v1_4_1.js\"));\nconst SimulateTxAccessorContract_v1_3_0_1 = __importDefault(__webpack_require__(/*! ./SimulateTxAccessor/v1.3.0/SimulateTxAccessorContract_v1_3_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/v1.3.0/SimulateTxAccessorContract_v1_3_0.js\"));\nconst SimulateTxAccessorContract_v1_4_1_1 = __importDefault(__webpack_require__(/*! ./SimulateTxAccessor/v1.4.1/SimulateTxAccessorContract_v1_4_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SimulateTxAccessor/v1.4.1/SimulateTxAccessorContract_v1_4_1.js\"));\nconst CompatibilityFallbackHandlerContract_v1_3_0_1 = __importDefault(__webpack_require__(/*! ./CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandlerContract_v1_3_0 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandlerContract_v1_3_0.js\"));\nconst CompatibilityFallbackHandlerContract_v1_4_1_1 = __importDefault(__webpack_require__(/*! ./CompatibilityFallbackHandler/v1.4.1/CompatibilityFallbackHandlerContract_v1_4_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CompatibilityFallbackHandler/v1.4.1/CompatibilityFallbackHandlerContract_v1_4_1.js\"));\nconst SafeWebAuthnSignerFactoryContract_v0_2_1_1 = __importDefault(__webpack_require__(/*! ./SafeWebAuthnSignerFactory/v0.2.1/SafeWebAuthnSignerFactoryContract_v0_2_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSignerFactory/v0.2.1/SafeWebAuthnSignerFactoryContract_v0_2_1.js\"));\nconst SafeWebAuthnSharedSignerContract_v0_2_1_1 = __importDefault(__webpack_require__(/*! ./SafeWebAuthnSharedSigner/v0.2.1/SafeWebAuthnSharedSignerContract_v0_2_1 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeWebAuthnSharedSigner/v0.2.1/SafeWebAuthnSharedSignerContract_v0_2_1.js\"));\nasync function getSafeContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi, isL1SafeSingleton) {\n    const chainId = await safeProvider.getChainId();\n    let safeContractInstance;\n    switch (safeVersion) {\n        case '1.4.1':\n            safeContractInstance = new SafeContract_v1_4_1_1.default(chainId, safeProvider, isL1SafeSingleton, contractAddress, customContractAbi);\n            break;\n        case '1.3.0':\n            safeContractInstance = new SafeContract_v1_3_0_1.default(chainId, safeProvider, isL1SafeSingleton, contractAddress, customContractAbi);\n            break;\n        case '1.2.0':\n            safeContractInstance = new SafeContract_v1_2_0_1.default(chainId, safeProvider, isL1SafeSingleton, contractAddress, customContractAbi);\n            break;\n        case '1.1.1':\n            safeContractInstance = new SafeContract_v1_1_1_1.default(chainId, safeProvider, isL1SafeSingleton, contractAddress, customContractAbi);\n            break;\n        case '1.0.0':\n            safeContractInstance = new SafeContract_v1_0_0_1.default(chainId, safeProvider, isL1SafeSingleton, contractAddress, customContractAbi);\n            break;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n    await safeContractInstance.init();\n    return safeContractInstance;\n}\nexports.getSafeContractInstance = getSafeContractInstance;\nasync function getCompatibilityFallbackHandlerContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    let compatibilityFallbackHandlerInstance;\n    switch (safeVersion) {\n        case '1.4.1':\n            compatibilityFallbackHandlerInstance = new CompatibilityFallbackHandlerContract_v1_4_1_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        case '1.3.0':\n        case '1.2.0':\n        case '1.1.1':\n            compatibilityFallbackHandlerInstance = new CompatibilityFallbackHandlerContract_v1_3_0_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n    await compatibilityFallbackHandlerInstance.init();\n    return compatibilityFallbackHandlerInstance;\n}\nexports.getCompatibilityFallbackHandlerContractInstance = getCompatibilityFallbackHandlerContractInstance;\nasync function getMultiSendContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    let multiSendContractInstance;\n    switch (safeVersion) {\n        case '1.4.1':\n            multiSendContractInstance = new MultiSendContract_v1_4_1_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        case '1.3.0':\n            multiSendContractInstance = new MultiSendContract_v1_3_0_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        case '1.2.0':\n        case '1.1.1':\n        case '1.0.0':\n            multiSendContractInstance = new MultiSendContract_v1_1_1_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n    await multiSendContractInstance.init();\n    return multiSendContractInstance;\n}\nexports.getMultiSendContractInstance = getMultiSendContractInstance;\nasync function getMultiSendCallOnlyContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    let multiSendCallOnlyContractInstance;\n    switch (safeVersion) {\n        case '1.4.1':\n            multiSendCallOnlyContractInstance = new MultiSendCallOnlyContract_v1_4_1_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        case '1.3.0':\n        case '1.2.0':\n        case '1.1.1':\n        case '1.0.0':\n            multiSendCallOnlyContractInstance = new MultiSendCallOnlyContract_v1_3_0_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n    await multiSendCallOnlyContractInstance.init();\n    return multiSendCallOnlyContractInstance;\n}\nexports.getMultiSendCallOnlyContractInstance = getMultiSendCallOnlyContractInstance;\nasync function getSafeProxyFactoryContractInstance(safeVersion, safeProvider, signerOrProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    let safeProxyFactoryContractInstance;\n    switch (safeVersion) {\n        case '1.4.1':\n            safeProxyFactoryContractInstance = new SafeProxyFactoryContract_v1_4_1_1.default(chainId, safeProvider, contractAddress, customContractAbi, signerOrProvider);\n            break;\n        case '1.3.0':\n            safeProxyFactoryContractInstance = new SafeProxyFactoryContract_v1_3_0_1.default(chainId, safeProvider, contractAddress, customContractAbi, signerOrProvider);\n            break;\n        case '1.2.0':\n        case '1.1.1':\n            safeProxyFactoryContractInstance = new SafeProxyFactoryContract_v1_1_1_1.default(chainId, safeProvider, contractAddress, customContractAbi, signerOrProvider);\n            break;\n        case '1.0.0':\n            safeProxyFactoryContractInstance = new SafeProxyFactoryContract_v1_0_0_1.default(chainId, safeProvider, contractAddress, customContractAbi, signerOrProvider);\n            break;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n    await safeProxyFactoryContractInstance.init();\n    return safeProxyFactoryContractInstance;\n}\nexports.getSafeProxyFactoryContractInstance = getSafeProxyFactoryContractInstance;\nasync function getSignMessageLibContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    let signMessageLibContractInstance;\n    switch (safeVersion) {\n        case '1.4.1':\n            signMessageLibContractInstance = new SignMessageLibContract_v1_4_1_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        case '1.3.0':\n            signMessageLibContractInstance = new SignMessageLibContract_v1_3_0_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n    await signMessageLibContractInstance.init();\n    return signMessageLibContractInstance;\n}\nexports.getSignMessageLibContractInstance = getSignMessageLibContractInstance;\nasync function getCreateCallContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    let createCallContractInstance;\n    switch (safeVersion) {\n        case '1.4.1':\n            createCallContractInstance = new CreateCallContract_v1_4_1_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        case '1.3.0':\n        case '1.2.0':\n        case '1.1.1':\n        case '1.0.0':\n            createCallContractInstance = new CreateCallContract_v1_3_0_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n    await createCallContractInstance.init();\n    return createCallContractInstance;\n}\nexports.getCreateCallContractInstance = getCreateCallContractInstance;\nasync function getSimulateTxAccessorContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    let simulateTxAccessorContractInstance;\n    switch (safeVersion) {\n        case '1.4.1':\n            simulateTxAccessorContractInstance = new SimulateTxAccessorContract_v1_4_1_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        case '1.3.0':\n            simulateTxAccessorContractInstance = new SimulateTxAccessorContract_v1_3_0_1.default(chainId, safeProvider, contractAddress, customContractAbi);\n            break;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n    await simulateTxAccessorContractInstance.init();\n    return simulateTxAccessorContractInstance;\n}\nexports.getSimulateTxAccessorContractInstance = getSimulateTxAccessorContractInstance;\nasync function getSafeWebAuthnSignerFactoryContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    switch (safeVersion) {\n        case '1.4.1':\n        case '1.3.0':\n            const safeWebAuthnSignerFactoryContractInstance = new SafeWebAuthnSignerFactoryContract_v0_2_1_1.default(chainId, safeProvider, safeVersion, contractAddress, customContractAbi);\n            await safeWebAuthnSignerFactoryContractInstance.init();\n            return safeWebAuthnSignerFactoryContractInstance;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n}\nexports.getSafeWebAuthnSignerFactoryContractInstance = getSafeWebAuthnSignerFactoryContractInstance;\nasync function getSafeWebAuthnSharedSignerContractInstance(safeVersion, safeProvider, contractAddress, customContractAbi) {\n    const chainId = await safeProvider.getChainId();\n    switch (safeVersion) {\n        case '1.4.1':\n        case '1.3.0':\n            const safeWebAuthnSharedSignerContractInstance = new SafeWebAuthnSharedSignerContract_v0_2_1_1.default(chainId, safeProvider, safeVersion, contractAddress, customContractAbi);\n            await safeWebAuthnSharedSignerContractInstance.init();\n            return safeWebAuthnSharedSignerContractInstance;\n        default:\n            throw new Error('Invalid Safe version');\n    }\n}\nexports.getSafeWebAuthnSharedSignerContractInstance = getSafeWebAuthnSharedSignerContractInstance;\n//# sourceMappingURL=contractInstances.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/contractInstances.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/index.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/index.js ***!
  \************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SignMessageLibBaseContract = exports.SafeProxyFactoryBaseContract = exports.SafeBaseContract = exports.MultiSendBaseContract = exports.MultiSendCallOnlyBaseContract = exports.CreateCallBaseContract = void 0;\nconst CreateCallBaseContract_1 = __importDefault(__webpack_require__(/*! ./CreateCall/CreateCallBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/CreateCall/CreateCallBaseContract.js\"));\nexports.CreateCallBaseContract = CreateCallBaseContract_1.default;\nconst MultiSendBaseContract_1 = __importDefault(__webpack_require__(/*! ./MultiSend/MultiSendBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendBaseContract.js\"));\nexports.MultiSendBaseContract = MultiSendBaseContract_1.default;\nconst MultiSendCallOnlyBaseContract_1 = __importDefault(__webpack_require__(/*! ./MultiSend/MultiSendCallOnlyBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/MultiSend/MultiSendCallOnlyBaseContract.js\"));\nexports.MultiSendCallOnlyBaseContract = MultiSendCallOnlyBaseContract_1.default;\nconst SafeBaseContract_1 = __importDefault(__webpack_require__(/*! ./Safe/SafeBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/Safe/SafeBaseContract.js\"));\nexports.SafeBaseContract = SafeBaseContract_1.default;\nconst SafeProxyFactoryBaseContract_1 = __importDefault(__webpack_require__(/*! ./SafeProxyFactory/SafeProxyFactoryBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SafeProxyFactory/SafeProxyFactoryBaseContract.js\"));\nexports.SafeProxyFactoryBaseContract = SafeProxyFactoryBaseContract_1.default;\nconst SignMessageLibBaseContract_1 = __importDefault(__webpack_require__(/*! ./SignMessageLib/SignMessageLibBaseContract */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/SignMessageLib/SignMessageLibBaseContract.js\"));\nexports.SignMessageLibBaseContract = SignMessageLibBaseContract_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQyxHQUFHLG9DQUFvQyxHQUFHLHdCQUF3QixHQUFHLDZCQUE2QixHQUFHLHFDQUFxQyxHQUFHLDhCQUE4QjtBQUM3TSxpREFBaUQsbUJBQU8sQ0FBQyx1TkFBcUM7QUFDOUYsOEJBQThCO0FBQzlCLGdEQUFnRCxtQkFBTyxDQUFDLG1OQUFtQztBQUMzRiw2QkFBNkI7QUFDN0Isd0RBQXdELG1CQUFPLENBQUMsbU9BQTJDO0FBQzNHLHFDQUFxQztBQUNyQywyQ0FBMkMsbUJBQU8sQ0FBQywrTEFBeUI7QUFDNUUsd0JBQXdCO0FBQ3hCLHVEQUF1RCxtQkFBTyxDQUFDLCtPQUFpRDtBQUNoSCxvQ0FBb0M7QUFDcEMscURBQXFELG1CQUFPLENBQUMsdU9BQTZDO0FBQzFHLGtDQUFrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL2NvbnRyYWN0cy9pbmRleC5qcz85NzEzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaWduTWVzc2FnZUxpYkJhc2VDb250cmFjdCA9IGV4cG9ydHMuU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdCA9IGV4cG9ydHMuU2FmZUJhc2VDb250cmFjdCA9IGV4cG9ydHMuTXVsdGlTZW5kQmFzZUNvbnRyYWN0ID0gZXhwb3J0cy5NdWx0aVNlbmRDYWxsT25seUJhc2VDb250cmFjdCA9IGV4cG9ydHMuQ3JlYXRlQ2FsbEJhc2VDb250cmFjdCA9IHZvaWQgMDtcbmNvbnN0IENyZWF0ZUNhbGxCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9DcmVhdGVDYWxsL0NyZWF0ZUNhbGxCYXNlQ29udHJhY3RcIikpO1xuZXhwb3J0cy5DcmVhdGVDYWxsQmFzZUNvbnRyYWN0ID0gQ3JlYXRlQ2FsbEJhc2VDb250cmFjdF8xLmRlZmF1bHQ7XG5jb25zdCBNdWx0aVNlbmRCYXNlQ29udHJhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9NdWx0aVNlbmQvTXVsdGlTZW5kQmFzZUNvbnRyYWN0XCIpKTtcbmV4cG9ydHMuTXVsdGlTZW5kQmFzZUNvbnRyYWN0ID0gTXVsdGlTZW5kQmFzZUNvbnRyYWN0XzEuZGVmYXVsdDtcbmNvbnN0IE11bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vTXVsdGlTZW5kL011bHRpU2VuZENhbGxPbmx5QmFzZUNvbnRyYWN0XCIpKTtcbmV4cG9ydHMuTXVsdGlTZW5kQ2FsbE9ubHlCYXNlQ29udHJhY3QgPSBNdWx0aVNlbmRDYWxsT25seUJhc2VDb250cmFjdF8xLmRlZmF1bHQ7XG5jb25zdCBTYWZlQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vU2FmZS9TYWZlQmFzZUNvbnRyYWN0XCIpKTtcbmV4cG9ydHMuU2FmZUJhc2VDb250cmFjdCA9IFNhZmVCYXNlQ29udHJhY3RfMS5kZWZhdWx0O1xuY29uc3QgU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1NhZmVQcm94eUZhY3RvcnkvU2FmZVByb3h5RmFjdG9yeUJhc2VDb250cmFjdFwiKSk7XG5leHBvcnRzLlNhZmVQcm94eUZhY3RvcnlCYXNlQ29udHJhY3QgPSBTYWZlUHJveHlGYWN0b3J5QmFzZUNvbnRyYWN0XzEuZGVmYXVsdDtcbmNvbnN0IFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vU2lnbk1lc3NhZ2VMaWIvU2lnbk1lc3NhZ2VMaWJCYXNlQ29udHJhY3RcIikpO1xuZXhwb3J0cy5TaWduTWVzc2FnZUxpYkJhc2VDb250cmFjdCA9IFNpZ25NZXNzYWdlTGliQmFzZUNvbnRyYWN0XzEuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js ***!
  \******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSafeWebAuthnSharedSignerContract = exports.getSafeWebAuthnSignerFactoryContract = exports.getSimulateTxAccessorContract = exports.getCreateCallContract = exports.getSignMessageLibContract = exports.getMultiSendCallOnlyContract = exports.getMultiSendContract = exports.getCompatibilityFallbackHandlerContract = exports.getProxyFactoryContract = exports.getSafeContract = void 0;\nasync function getSafeContract({ safeProvider, safeVersion, customSafeAddress, isL1SafeSingleton, customContracts }) {\n    const safeContract = await safeProvider.getSafeContract({\n        safeVersion,\n        customContractAddress: customSafeAddress ?? customContracts?.safeSingletonAddress,\n        customContractAbi: customContracts?.safeSingletonAbi,\n        isL1SafeSingleton\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await safeContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('SafeProxy contract is not deployed on the current network');\n    }\n    return safeContract;\n}\nexports.getSafeContract = getSafeContract;\nasync function getProxyFactoryContract({ safeProvider, safeVersion, customContracts }) {\n    const safeProxyFactoryContract = await safeProvider.getSafeProxyFactoryContract({\n        safeVersion,\n        customContractAddress: customContracts?.safeProxyFactoryAddress,\n        customContractAbi: customContracts?.safeProxyFactoryAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await safeProxyFactoryContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('SafeProxyFactory contract is not deployed on the current network');\n    }\n    return safeProxyFactoryContract;\n}\nexports.getProxyFactoryContract = getProxyFactoryContract;\nasync function getCompatibilityFallbackHandlerContract({ safeProvider, safeVersion, customContracts }) {\n    const fallbackHandlerContract = await safeProvider.getCompatibilityFallbackHandlerContract({\n        safeVersion,\n        customContractAddress: customContracts?.fallbackHandlerAddress,\n        customContractAbi: customContracts?.fallbackHandlerAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await fallbackHandlerContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('CompatibilityFallbackHandler contract is not deployed on the current network');\n    }\n    return fallbackHandlerContract;\n}\nexports.getCompatibilityFallbackHandlerContract = getCompatibilityFallbackHandlerContract;\nasync function getMultiSendContract({ safeProvider, safeVersion, customContracts }) {\n    const multiSendContract = await safeProvider.getMultiSendContract({\n        safeVersion,\n        customContractAddress: customContracts?.multiSendAddress,\n        customContractAbi: customContracts?.multiSendAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await multiSendContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('MultiSend contract is not deployed on the current network');\n    }\n    return multiSendContract;\n}\nexports.getMultiSendContract = getMultiSendContract;\nasync function getMultiSendCallOnlyContract({ safeProvider, safeVersion, customContracts }) {\n    const multiSendCallOnlyContract = await safeProvider.getMultiSendCallOnlyContract({\n        safeVersion,\n        customContractAddress: customContracts?.multiSendCallOnlyAddress,\n        customContractAbi: customContracts?.multiSendCallOnlyAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await multiSendCallOnlyContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('MultiSendCallOnly contract is not deployed on the current network');\n    }\n    return multiSendCallOnlyContract;\n}\nexports.getMultiSendCallOnlyContract = getMultiSendCallOnlyContract;\nasync function getSignMessageLibContract({ safeProvider, safeVersion, customContracts }) {\n    const signMessageLibContract = await safeProvider.getSignMessageLibContract({\n        safeVersion,\n        customContractAddress: customContracts?.signMessageLibAddress,\n        customContractAbi: customContracts?.signMessageLibAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await signMessageLibContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('SignMessageLib contract is not deployed on the current network');\n    }\n    return signMessageLibContract;\n}\nexports.getSignMessageLibContract = getSignMessageLibContract;\nasync function getCreateCallContract({ safeProvider, safeVersion, customContracts }) {\n    const createCallContract = await safeProvider.getCreateCallContract({\n        safeVersion,\n        customContractAddress: customContracts?.createCallAddress,\n        customContractAbi: customContracts?.createCallAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await createCallContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('CreateCall contract is not deployed on the current network');\n    }\n    return createCallContract;\n}\nexports.getCreateCallContract = getCreateCallContract;\nasync function getSimulateTxAccessorContract({ safeProvider, safeVersion, customContracts }) {\n    const simulateTxAccessorContract = await safeProvider.getSimulateTxAccessorContract({\n        safeVersion,\n        customContractAddress: customContracts?.simulateTxAccessorAddress,\n        customContractAbi: customContracts?.simulateTxAccessorAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await simulateTxAccessorContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('SimulateTxAccessor contract is not deployed on the current network');\n    }\n    return simulateTxAccessorContract;\n}\nexports.getSimulateTxAccessorContract = getSimulateTxAccessorContract;\nasync function getSafeWebAuthnSignerFactoryContract({ safeProvider, safeVersion, customContracts }) {\n    const safeWebAuthnSignerFactoryContract = await safeProvider.getSafeWebAuthnSignerFactoryContract({\n        safeVersion,\n        customContractAddress: customContracts?.safeWebAuthnSignerFactoryAddress,\n        customContractAbi: customContracts?.safeWebAuthnSignerFactoryAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await safeWebAuthnSignerFactoryContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('safeWebAuthnSignerFactory contract is not deployed on the current network');\n    }\n    return safeWebAuthnSignerFactoryContract;\n}\nexports.getSafeWebAuthnSignerFactoryContract = getSafeWebAuthnSignerFactoryContract;\nasync function getSafeWebAuthnSharedSignerContract({ safeProvider, safeVersion, customContracts }) {\n    const safeWebAuthnSharedSignerContract = await safeProvider.getSafeWebAuthnSharedSignerContract({\n        safeVersion,\n        customContractAddress: customContracts?.safeWebAuthnSharedSignerAddress,\n        customContractAbi: customContracts?.safeWebAuthnSharedSignerAbi\n    });\n    const isContractDeployed = await safeProvider.isContractDeployed(await safeWebAuthnSharedSignerContract.getAddress());\n    if (!isContractDeployed) {\n        throw new Error('safeWebAuthnSharedSigner contract is not deployed on the current network');\n    }\n    return safeWebAuthnSharedSignerContract;\n}\nexports.getSafeWebAuthnSharedSignerContract = getSafeWebAuthnSharedSignerContract;\n//# sourceMappingURL=safeDeploymentContracts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js ***!
  \************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSignerCompatible = exports.isTypedDataSigner = exports.toTxResult = exports.zkSyncEraCreate2Address = exports.validateSafeDeploymentConfig = exports.validateSafeAccountConfig = exports.predictSafeAddress = exports.getPredictedSafeAddressInitCode = exports.getChainSpecificDefaultSaltNonce = exports.encodeSetupCallData = exports.encodeCreateProxyWithNonce = exports.PREDETERMINED_SALT_NONCE = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst sha3_1 = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/sha3.js\");\nconst config_1 = __webpack_require__(/*! ../contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\nconst constants_1 = __webpack_require__(/*! ../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nconst memoized_1 = __webpack_require__(/*! ../utils/memoized */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/memoized.js\");\nconst ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"(ssr)/./node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist/index.js\");\nconst satisfies_1 = __importDefault(__webpack_require__(/*! semver/functions/satisfies */ \"(ssr)/./node_modules/.pnpm/semver@7.6.2/node_modules/semver/functions/satisfies.js\"));\nconst safeDeploymentContracts_1 = __webpack_require__(/*! ../contracts/safeDeploymentContracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js\");\n// keccak256(toUtf8Bytes('Safe Account Abstraction'))\nexports.PREDETERMINED_SALT_NONCE = '0xb1073742015cbcf5a3a4d9d1ae33ecf619439710b89475f92e2abd2117e90f90';\nconst ZKSYNC_MAINNET = 324n;\nconst ZKSYNC_TESTNET = 280n;\n// For bundle size efficiency we store SafeProxy.sol/GnosisSafeProxy.sol zksync bytecode hash in hex.\n// To get the values below we need to:\n// 1. Compile Safe smart contracts for zksync\n// 2. Get `deployedBytecode` from SafeProxy.json/GnosisSafeProxy.json\n// 3. Use zksync-web3 SDK to get the bytecode hash\n//    const bytecodeHash = zkSyncUtils.hashBytecode(${deployedBytecode})\n// 4. Use ethers to convert the array into hex\n//    const deployedBytecodeHash = ethers.hexlify(bytecodeHash)\nconst ZKSYNC_SAFE_PROXY_DEPLOYED_BYTECODE = {\n    '1.3.0': {\n        deployedBytecodeHash: '0x0100004124426fb9ebb25e27d670c068e52f9ba631bd383279a188be47e3f86d'\n    }\n};\n// keccak256(toUtf8Bytes('zksyncCreate2'))\nconst ZKSYNC_CREATE2_PREFIX = '0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494';\nfunction encodeCreateProxyWithNonce(safeProxyFactoryContract, safeSingletonAddress, initializer, salt) {\n    return safeProxyFactoryContract.encode('createProxyWithNonce', [\n        safeSingletonAddress,\n        initializer,\n        BigInt(salt || exports.PREDETERMINED_SALT_NONCE)\n    ]);\n}\nexports.encodeCreateProxyWithNonce = encodeCreateProxyWithNonce;\nconst memoizedGetCompatibilityFallbackHandlerContract = (0, memoized_1.createMemoizedFunction)(safeDeploymentContracts_1.getCompatibilityFallbackHandlerContract);\nasync function encodeSetupCallData({ safeProvider, safeAccountConfig, safeContract, customContracts, customSafeVersion }) {\n    const { owners, threshold, to = constants_1.ZERO_ADDRESS, data = constants_1.EMPTY_DATA, fallbackHandler, paymentToken = constants_1.ZERO_ADDRESS, payment = 0, paymentReceiver = constants_1.ZERO_ADDRESS } = safeAccountConfig;\n    const safeVersion = customSafeVersion || (await safeContract.getVersion());\n    if ((0, satisfies_1.default)(safeVersion, '<=1.0.0')) {\n        return safeContract.encode('setup', [\n            owners,\n            threshold,\n            to,\n            data,\n            paymentToken,\n            payment,\n            paymentReceiver\n        ]);\n    }\n    let fallbackHandlerAddress = fallbackHandler;\n    const isValidAddress = fallbackHandlerAddress !== undefined && (0, ethers_1.isAddress)(fallbackHandlerAddress);\n    if (!isValidAddress) {\n        const fallbackHandlerContract = await memoizedGetCompatibilityFallbackHandlerContract({\n            safeProvider,\n            safeVersion,\n            customContracts\n        });\n        fallbackHandlerAddress = await fallbackHandlerContract.getAddress();\n    }\n    return safeContract.encode('setup', [\n        owners,\n        threshold,\n        to,\n        data,\n        fallbackHandlerAddress,\n        paymentToken,\n        payment,\n        paymentReceiver\n    ]);\n}\nexports.encodeSetupCallData = encodeSetupCallData;\nconst memoizedGetProxyFactoryContract = (0, memoized_1.createMemoizedFunction)(({ safeProvider, safeVersion, customContracts }) => (0, safeDeploymentContracts_1.getProxyFactoryContract)({ safeProvider, safeVersion, customContracts }));\nconst memoizedGetProxyCreationCode = (0, memoized_1.createMemoizedFunction)(async ({ safeProvider, safeVersion, customContracts, chainId }) => {\n    const safeProxyFactoryContract = await memoizedGetProxyFactoryContract({\n        safeProvider,\n        safeVersion,\n        customContracts,\n        chainId\n    });\n    return safeProxyFactoryContract.proxyCreationCode();\n});\nconst memoizedGetSafeContract = (0, memoized_1.createMemoizedFunction)(({ safeProvider, safeVersion, isL1SafeSingleton, customContracts }) => (0, safeDeploymentContracts_1.getSafeContract)({ safeProvider, safeVersion, isL1SafeSingleton, customContracts }));\n/**\n * Provides a chain-specific default salt nonce for generating unique addresses\n * for the same Safe configuration across different chains.\n *\n * @param {bigint} chainId - The chain ID associated with the chain.\n * @returns {string} The chain-specific salt nonce in hexadecimal format.\n */\nfunction getChainSpecificDefaultSaltNonce(chainId) {\n    return `0x${Buffer.from((0, sha3_1.keccak_256)(exports.PREDETERMINED_SALT_NONCE + chainId)).toString('hex')}`;\n}\nexports.getChainSpecificDefaultSaltNonce = getChainSpecificDefaultSaltNonce;\nasync function getPredictedSafeAddressInitCode({ safeProvider, chainId, safeAccountConfig, safeDeploymentConfig = {}, isL1SafeSingleton = false, customContracts }) {\n    (0, exports.validateSafeAccountConfig)(safeAccountConfig);\n    (0, exports.validateSafeDeploymentConfig)(safeDeploymentConfig);\n    const { safeVersion = config_1.DEFAULT_SAFE_VERSION, saltNonce = getChainSpecificDefaultSaltNonce(chainId) } = safeDeploymentConfig;\n    const safeProxyFactoryContract = await memoizedGetProxyFactoryContract({\n        safeProvider,\n        safeVersion,\n        customContracts,\n        chainId: chainId.toString()\n    });\n    const safeContract = await memoizedGetSafeContract({\n        safeProvider,\n        safeVersion,\n        isL1SafeSingleton,\n        customContracts,\n        chainId: chainId.toString()\n    });\n    const initializer = await encodeSetupCallData({\n        safeProvider,\n        safeAccountConfig,\n        safeContract,\n        customContracts,\n        customSafeVersion: safeVersion // it is more efficient if we provide the safeVersion manually\n    });\n    const encodedNonce = (0, ethereumjs_util_1.toBuffer)(safeProvider.encodeParameters(['uint256'], [saltNonce])).toString('hex');\n    const safeSingletonAddress = await safeContract.getAddress();\n    const initCodeCallData = encodeCreateProxyWithNonce(safeProxyFactoryContract, safeSingletonAddress, initializer, '0x' + encodedNonce);\n    const safeProxyFactoryAddress = await safeProxyFactoryContract.getAddress();\n    const initCode = `0x${[safeProxyFactoryAddress, initCodeCallData].reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n    return initCode;\n}\nexports.getPredictedSafeAddressInitCode = getPredictedSafeAddressInitCode;\nasync function predictSafeAddress({ safeProvider, chainId, safeAccountConfig, safeDeploymentConfig = {}, isL1SafeSingleton = false, customContracts }) {\n    (0, exports.validateSafeAccountConfig)(safeAccountConfig);\n    (0, exports.validateSafeDeploymentConfig)(safeDeploymentConfig);\n    const { safeVersion = config_1.DEFAULT_SAFE_VERSION, saltNonce = getChainSpecificDefaultSaltNonce(chainId) } = safeDeploymentConfig;\n    const safeProxyFactoryContract = await memoizedGetProxyFactoryContract({\n        safeProvider,\n        safeVersion,\n        customContracts,\n        chainId: chainId.toString()\n    });\n    const proxyCreationCode = await memoizedGetProxyCreationCode({\n        safeProvider,\n        safeVersion,\n        customContracts,\n        chainId: chainId.toString()\n    });\n    const safeContract = await memoizedGetSafeContract({\n        safeProvider,\n        safeVersion,\n        isL1SafeSingleton,\n        customContracts,\n        chainId: chainId.toString()\n    });\n    const initializer = await encodeSetupCallData({\n        safeProvider,\n        safeAccountConfig,\n        safeContract,\n        customContracts,\n        customSafeVersion: safeVersion // it is more efficient if we provide the safeVersion manually\n    });\n    const encodedNonce = (0, ethereumjs_util_1.toBuffer)(safeProvider.encodeParameters(['uint256'], [saltNonce])).toString('hex');\n    const salt = (0, ethereumjs_util_1.keccak256)((0, ethereumjs_util_1.toBuffer)('0x' + (0, ethereumjs_util_1.keccak256)((0, ethereumjs_util_1.toBuffer)(initializer)).toString('hex') + encodedNonce));\n    const input = safeProvider.encodeParameters(['address'], [await safeContract.getAddress()]);\n    const from = await safeProxyFactoryContract.getAddress();\n    // On the zkSync Era chain, the counterfactual deployment address is calculated differently\n    const isZkSyncEraChain = [ZKSYNC_MAINNET, ZKSYNC_TESTNET].includes(chainId);\n    if (isZkSyncEraChain) {\n        const proxyAddress = zkSyncEraCreate2Address(from, safeVersion, salt, input);\n        return safeProvider.getChecksummedAddress(proxyAddress);\n    }\n    const constructorData = (0, ethereumjs_util_1.toBuffer)(input).toString('hex');\n    const initCode = proxyCreationCode + constructorData;\n    const proxyAddress = '0x' + (0, ethereumjs_util_1.generateAddress2)((0, ethereumjs_util_1.toBuffer)(from), (0, ethereumjs_util_1.toBuffer)(salt), (0, ethereumjs_util_1.toBuffer)(initCode)).toString('hex');\n    return safeProvider.getChecksummedAddress(proxyAddress);\n}\nexports.predictSafeAddress = predictSafeAddress;\nconst validateSafeAccountConfig = ({ owners, threshold }) => {\n    if (owners.length <= 0)\n        throw new Error('Owner list must have at least one owner');\n    if (threshold <= 0)\n        throw new Error('Threshold must be greater than or equal to 1');\n    if (threshold > owners.length)\n        throw new Error('Threshold must be lower than or equal to owners length');\n};\nexports.validateSafeAccountConfig = validateSafeAccountConfig;\nconst validateSafeDeploymentConfig = ({ saltNonce }) => {\n    if (saltNonce && BigInt(saltNonce) < 0)\n        throw new Error('saltNonce must be greater than or equal to 0');\n};\nexports.validateSafeDeploymentConfig = validateSafeDeploymentConfig;\n/**\n * Generates a zkSync Era address. zkSync Era uses a distinct address derivation method compared to Ethereum\n * see: https://era.zksync.io/docs/reference/architecture/differences-with-ethereum.html#address-derivation\n *\n * @param {string} from - The sender's address.\n * @param {SafeVersion} safeVersion - The version of the safe.\n * @param {Buffer} salt - The salt used for address derivation.\n * @param {string} input - Additional input data for the derivation.\n *\n * @returns {string} The derived zkSync Era address.\n */\nfunction zkSyncEraCreate2Address(from, safeVersion, salt, input) {\n    const bytecodeHash = ZKSYNC_SAFE_PROXY_DEPLOYED_BYTECODE[safeVersion].deployedBytecodeHash;\n    const inputHash = (0, ethereumjs_util_1.keccak256)((0, ethereumjs_util_1.toBuffer)(input));\n    const addressBytes = (0, ethereumjs_util_1.keccak256)((0, ethereumjs_util_1.toBuffer)(ZKSYNC_CREATE2_PREFIX +\n        (0, ethers_1.zeroPadValue)(from, 32).slice(2) +\n        salt.toString('hex') +\n        bytecodeHash.slice(2) +\n        inputHash.toString('hex')))\n        .toString('hex')\n        .slice(24);\n    return addressBytes;\n}\nexports.zkSyncEraCreate2Address = zkSyncEraCreate2Address;\nfunction toTxResult(transactionResponse, options) {\n    return {\n        hash: transactionResponse.hash,\n        options,\n        transactionResponse\n    };\n}\nexports.toTxResult = toTxResult;\nfunction isTypedDataSigner(signer) {\n    const isPasskeySigner = !!signer?.passkeyRawId;\n    return signer.signTypedData !== undefined || !isPasskeySigner;\n}\nexports.isTypedDataSigner = isTypedDataSigner;\n/**\n * Check if the signerOrProvider is compatible with `Signer`\n * @param signerOrProvider - Signer or provider\n * @returns true if the parameter is compatible with `Signer`\n */\nfunction isSignerCompatible(signerOrProvider) {\n    const candidate = signerOrProvider;\n    const isSigntransactionCompatible = typeof candidate.signTransaction === 'function';\n    const isSignMessageCompatible = typeof candidate.signMessage === 'function';\n    const isGetAddressCompatible = typeof candidate.getAddress === 'function';\n    return isSigntransactionCompatible && isSignMessageCompatible && isGetAddressCompatible;\n}\nexports.isSignerCompatible = isSignerCompatible;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/index.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/index.js ***!
  \**************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EthSafeTransaction = exports.SafeProvider = exports.generateTypedData = exports.hashSafeMessage = exports.getEip712MessageTypes = exports.getEip712TxTypes = exports.preimageSafeMessageHash = exports.preimageSafeTransactionHash = exports.buildSignatureBytes = exports.buildContractSignature = exports.generateEIP712Signature = exports.generateSignature = exports.validateEthereumAddress = exports.validateEip3770Address = exports.standardizeSafeTransactionData = exports.getPredictedSafeAddressInitCode = exports.predictSafeAddress = exports.isGasTokenCompatibleWithHandlePayment = exports.getDefaultFCLP256VerifierAddress = exports.getSafeWebAuthnSharedSignerContract = exports.getSafeWebAuthnSignerFactoryContract = exports.getSignMessageLibContract = exports.getSafeContract = exports.getProxyFactoryContract = exports.getMultiSendContract = exports.getMultiSendCallOnlyContract = exports.getERC20Decimals = exports.getCreateCallContract = exports.getCompatibilityFallbackHandlerContract = exports.encodeSetupCallData = exports.encodeMultiSendData = exports.encodeCreateProxyWithNonce = exports.SignMessageLibBaseContract = exports.SafeProxyFactoryBaseContract = exports.SafeFactory = exports.SafeBaseContract = exports.PREDETERMINED_SALT_NONCE = exports.MultiSendBaseContract = exports.MultiSendCallOnlyBaseContract = exports.EthSafeSignature = exports.DEFAULT_SAFE_VERSION = exports.createERC20TokenTransferTransaction = exports.CreateCallBaseContract = exports.ContractManager = exports.extractPasskeyCoordinates = exports.extractPasskeyData = exports.estimateSafeDeploymentGas = exports.estimateSafeTxGas = exports.estimateTxGas = exports.estimateTxBaseGas = void 0;\nexports.getPasskeyOwnerAddress = exports.PasskeySigner = exports.EthSafeMessage = void 0;\nconst Safe_1 = __importDefault(__webpack_require__(/*! ./Safe */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/Safe.js\"));\nconst SafeProvider_1 = __importDefault(__webpack_require__(/*! ./SafeProvider */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js\"));\nexports.SafeProvider = SafeProvider_1.default;\nconst contracts_1 = __webpack_require__(/*! ./contracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/index.js\");\nObject.defineProperty(exports, \"CreateCallBaseContract\", ({ enumerable: true, get: function () { return contracts_1.CreateCallBaseContract; } }));\nObject.defineProperty(exports, \"MultiSendBaseContract\", ({ enumerable: true, get: function () { return contracts_1.MultiSendBaseContract; } }));\nObject.defineProperty(exports, \"MultiSendCallOnlyBaseContract\", ({ enumerable: true, get: function () { return contracts_1.MultiSendCallOnlyBaseContract; } }));\nObject.defineProperty(exports, \"SafeBaseContract\", ({ enumerable: true, get: function () { return contracts_1.SafeBaseContract; } }));\nObject.defineProperty(exports, \"SafeProxyFactoryBaseContract\", ({ enumerable: true, get: function () { return contracts_1.SafeProxyFactoryBaseContract; } }));\nObject.defineProperty(exports, \"SignMessageLibBaseContract\", ({ enumerable: true, get: function () { return contracts_1.SignMessageLibBaseContract; } }));\nconst config_1 = __webpack_require__(/*! ./contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\nObject.defineProperty(exports, \"DEFAULT_SAFE_VERSION\", ({ enumerable: true, get: function () { return config_1.DEFAULT_SAFE_VERSION; } }));\nconst safeDeploymentContracts_1 = __webpack_require__(/*! ./contracts/safeDeploymentContracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js\");\nObject.defineProperty(exports, \"getCompatibilityFallbackHandlerContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getCompatibilityFallbackHandlerContract; } }));\nObject.defineProperty(exports, \"getCreateCallContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getCreateCallContract; } }));\nObject.defineProperty(exports, \"getMultiSendCallOnlyContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getMultiSendCallOnlyContract; } }));\nObject.defineProperty(exports, \"getMultiSendContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getMultiSendContract; } }));\nObject.defineProperty(exports, \"getProxyFactoryContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getProxyFactoryContract; } }));\nObject.defineProperty(exports, \"getSafeContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getSafeContract; } }));\nObject.defineProperty(exports, \"getSignMessageLibContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getSignMessageLibContract; } }));\nObject.defineProperty(exports, \"getSafeWebAuthnSignerFactoryContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getSafeWebAuthnSignerFactoryContract; } }));\nObject.defineProperty(exports, \"getSafeWebAuthnSharedSignerContract\", ({ enumerable: true, get: function () { return safeDeploymentContracts_1.getSafeWebAuthnSharedSignerContract; } }));\nconst utils_1 = __webpack_require__(/*! ./contracts/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js\");\nObject.defineProperty(exports, \"PREDETERMINED_SALT_NONCE\", ({ enumerable: true, get: function () { return utils_1.PREDETERMINED_SALT_NONCE; } }));\nObject.defineProperty(exports, \"encodeCreateProxyWithNonce\", ({ enumerable: true, get: function () { return utils_1.encodeCreateProxyWithNonce; } }));\nObject.defineProperty(exports, \"encodeSetupCallData\", ({ enumerable: true, get: function () { return utils_1.encodeSetupCallData; } }));\nObject.defineProperty(exports, \"predictSafeAddress\", ({ enumerable: true, get: function () { return utils_1.predictSafeAddress; } }));\nObject.defineProperty(exports, \"getPredictedSafeAddressInitCode\", ({ enumerable: true, get: function () { return utils_1.getPredictedSafeAddressInitCode; } }));\nconst contractManager_1 = __importDefault(__webpack_require__(/*! ./managers/contractManager */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/contractManager.js\"));\nexports.ContractManager = contractManager_1.default;\nconst SafeFactory_1 = __importDefault(__webpack_require__(/*! ./SafeFactory */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeFactory.js\"));\nexports.SafeFactory = SafeFactory_1.default;\nconst utils_2 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nObject.defineProperty(exports, \"EthSafeSignature\", ({ enumerable: true, get: function () { return utils_2.EthSafeSignature; } }));\nObject.defineProperty(exports, \"estimateTxBaseGas\", ({ enumerable: true, get: function () { return utils_2.estimateTxBaseGas; } }));\nObject.defineProperty(exports, \"estimateTxGas\", ({ enumerable: true, get: function () { return utils_2.estimateTxGas; } }));\nObject.defineProperty(exports, \"estimateSafeTxGas\", ({ enumerable: true, get: function () { return utils_2.estimateSafeTxGas; } }));\nObject.defineProperty(exports, \"estimateSafeDeploymentGas\", ({ enumerable: true, get: function () { return utils_2.estimateSafeDeploymentGas; } }));\nObject.defineProperty(exports, \"extractPasskeyData\", ({ enumerable: true, get: function () { return utils_2.extractPasskeyData; } }));\nObject.defineProperty(exports, \"getDefaultFCLP256VerifierAddress\", ({ enumerable: true, get: function () { return utils_2.getDefaultFCLP256VerifierAddress; } }));\nObject.defineProperty(exports, \"extractPasskeyCoordinates\", ({ enumerable: true, get: function () { return utils_2.extractPasskeyCoordinates; } }));\nObject.defineProperty(exports, \"validateEthereumAddress\", ({ enumerable: true, get: function () { return utils_2.validateEthereumAddress; } }));\nObject.defineProperty(exports, \"validateEip3770Address\", ({ enumerable: true, get: function () { return utils_2.validateEip3770Address; } }));\nconst SafeTransaction_1 = __importDefault(__webpack_require__(/*! ./utils/transactions/SafeTransaction */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/SafeTransaction.js\"));\nexports.EthSafeTransaction = SafeTransaction_1.default;\nconst SafeMessage_1 = __importDefault(__webpack_require__(/*! ./utils/messages/SafeMessage */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/messages/SafeMessage.js\"));\nexports.EthSafeMessage = SafeMessage_1.default;\nconst utils_3 = __webpack_require__(/*! ./utils/transactions/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/utils.js\");\nObject.defineProperty(exports, \"encodeMultiSendData\", ({ enumerable: true, get: function () { return utils_3.encodeMultiSendData; } }));\nObject.defineProperty(exports, \"standardizeSafeTransactionData\", ({ enumerable: true, get: function () { return utils_3.standardizeSafeTransactionData; } }));\nconst erc_20_1 = __webpack_require__(/*! ./utils/erc-20 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/erc-20/index.js\");\nObject.defineProperty(exports, \"getERC20Decimals\", ({ enumerable: true, get: function () { return erc_20_1.getERC20Decimals; } }));\nObject.defineProperty(exports, \"isGasTokenCompatibleWithHandlePayment\", ({ enumerable: true, get: function () { return erc_20_1.isGasTokenCompatibleWithHandlePayment; } }));\nObject.defineProperty(exports, \"createERC20TokenTransferTransaction\", ({ enumerable: true, get: function () { return erc_20_1.createERC20TokenTransferTransaction; } }));\nconst utils_4 = __webpack_require__(/*! ./utils/signatures/utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/utils.js\");\nObject.defineProperty(exports, \"generateSignature\", ({ enumerable: true, get: function () { return utils_4.generateSignature; } }));\nObject.defineProperty(exports, \"generateEIP712Signature\", ({ enumerable: true, get: function () { return utils_4.generateEIP712Signature; } }));\nObject.defineProperty(exports, \"buildContractSignature\", ({ enumerable: true, get: function () { return utils_4.buildContractSignature; } }));\nObject.defineProperty(exports, \"buildSignatureBytes\", ({ enumerable: true, get: function () { return utils_4.buildSignatureBytes; } }));\nObject.defineProperty(exports, \"preimageSafeTransactionHash\", ({ enumerable: true, get: function () { return utils_4.preimageSafeTransactionHash; } }));\nObject.defineProperty(exports, \"preimageSafeMessageHash\", ({ enumerable: true, get: function () { return utils_4.preimageSafeMessageHash; } }));\nconst eip_712_1 = __webpack_require__(/*! ./utils/eip-712 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-712/index.js\");\nObject.defineProperty(exports, \"getEip712TxTypes\", ({ enumerable: true, get: function () { return eip_712_1.getEip712TxTypes; } }));\nObject.defineProperty(exports, \"getEip712MessageTypes\", ({ enumerable: true, get: function () { return eip_712_1.getEip712MessageTypes; } }));\nObject.defineProperty(exports, \"hashSafeMessage\", ({ enumerable: true, get: function () { return eip_712_1.hashSafeMessage; } }));\nObject.defineProperty(exports, \"generateTypedData\", ({ enumerable: true, get: function () { return eip_712_1.generateTypedData; } }));\nconst PasskeySigner_1 = __importDefault(__webpack_require__(/*! ./utils/passkeys/PasskeySigner */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/PasskeySigner.js\"));\nexports.PasskeySigner = PasskeySigner_1.default;\nconst getPasskeyOwnerAddress_1 = __importDefault(__webpack_require__(/*! ./utils/passkeys/getPasskeyOwnerAddress */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/getPasskeyOwnerAddress.js\"));\nexports.getPasskeyOwnerAddress = getPasskeyOwnerAddress_1.default;\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/index.js\"), exports);\nexports[\"default\"] = Safe_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/contractManager.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/contractManager.js ***!
  \*********************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ContractManager_instances, _ContractManager_contractNetworks, _ContractManager_isL1SafeSingleton, _ContractManager_safeContract, _ContractManager_multiSendContract, _ContractManager_multiSendCallOnlyContract, _ContractManager_initializeContractManager;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst config_1 = __webpack_require__(/*! ../contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\nconst safeDeploymentContracts_1 = __webpack_require__(/*! ../contracts/safeDeploymentContracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js\");\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/types.js\");\nclass ContractManager {\n    constructor() {\n        _ContractManager_instances.add(this);\n        _ContractManager_contractNetworks.set(this, void 0);\n        _ContractManager_isL1SafeSingleton.set(this, void 0);\n        _ContractManager_safeContract.set(this, void 0);\n        _ContractManager_multiSendContract.set(this, void 0);\n        _ContractManager_multiSendCallOnlyContract.set(this, void 0);\n    }\n    static async init(config, safeProvider) {\n        const contractManager = new ContractManager();\n        await __classPrivateFieldGet(contractManager, _ContractManager_instances, \"m\", _ContractManager_initializeContractManager).call(contractManager, config, safeProvider);\n        return contractManager;\n    }\n    get contractNetworks() {\n        return __classPrivateFieldGet(this, _ContractManager_contractNetworks, \"f\");\n    }\n    get isL1SafeSingleton() {\n        return __classPrivateFieldGet(this, _ContractManager_isL1SafeSingleton, \"f\");\n    }\n    get safeContract() {\n        return __classPrivateFieldGet(this, _ContractManager_safeContract, \"f\");\n    }\n    get multiSendContract() {\n        return __classPrivateFieldGet(this, _ContractManager_multiSendContract, \"f\");\n    }\n    get multiSendCallOnlyContract() {\n        return __classPrivateFieldGet(this, _ContractManager_multiSendCallOnlyContract, \"f\");\n    }\n}\n_ContractManager_contractNetworks = new WeakMap(), _ContractManager_isL1SafeSingleton = new WeakMap(), _ContractManager_safeContract = new WeakMap(), _ContractManager_multiSendContract = new WeakMap(), _ContractManager_multiSendCallOnlyContract = new WeakMap(), _ContractManager_instances = new WeakSet(), _ContractManager_initializeContractManager = async function _ContractManager_initializeContractManager(config, safeProvider) {\n    const { isL1SafeSingleton, contractNetworks, predictedSafe, safeAddress } = config;\n    const chainId = await safeProvider.getChainId();\n    const customContracts = contractNetworks?.[chainId.toString()];\n    __classPrivateFieldSet(this, _ContractManager_contractNetworks, contractNetworks, \"f\");\n    __classPrivateFieldSet(this, _ContractManager_isL1SafeSingleton, isL1SafeSingleton, \"f\");\n    let safeVersion;\n    if ((0, types_1.isSafeConfigWithPredictedSafe)(config)) {\n        safeVersion = predictedSafe?.safeDeploymentConfig?.safeVersion ?? config_1.DEFAULT_SAFE_VERSION;\n    }\n    else {\n        // We use the default version of the Safe contract to get the correct version of this Safe\n        const defaultSafeContractInstance = await (0, safeDeploymentContracts_1.getSafeContract)({\n            safeProvider,\n            safeVersion: config_1.DEFAULT_SAFE_VERSION,\n            isL1SafeSingleton,\n            customSafeAddress: safeAddress,\n            customContracts\n        });\n        // We check the correct version of the Safe from the blockchain\n        safeVersion = await defaultSafeContractInstance.getVersion();\n        // We get the correct Safe Contract if the real Safe version is not the lastest\n        const isTheDefaultSafeVersion = safeVersion === config_1.DEFAULT_SAFE_VERSION;\n        __classPrivateFieldSet(this, _ContractManager_safeContract, isTheDefaultSafeVersion\n            ? defaultSafeContractInstance\n            : await (0, safeDeploymentContracts_1.getSafeContract)({\n                safeProvider,\n                safeVersion,\n                isL1SafeSingleton,\n                customSafeAddress: safeAddress,\n                customContracts\n            }), \"f\");\n    }\n    __classPrivateFieldSet(this, _ContractManager_multiSendContract, await (0, safeDeploymentContracts_1.getMultiSendContract)({\n        safeProvider,\n        safeVersion,\n        customContracts\n    }), \"f\");\n    __classPrivateFieldSet(this, _ContractManager_multiSendCallOnlyContract, await (0, safeDeploymentContracts_1.getMultiSendCallOnlyContract)({\n        safeProvider,\n        safeVersion,\n        customContracts\n    }), \"f\");\n};\nexports[\"default\"] = ContractManager;\n//# sourceMappingURL=contractManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/contractManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/fallbackHandlerManager.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/fallbackHandlerManager.js ***!
  \****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FallbackHandlerManager_safeProvider, _FallbackHandlerManager_safeContract, _FallbackHandlerManager_slot;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst constants_1 = __webpack_require__(/*! ../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nclass FallbackHandlerManager {\n    constructor(safeProvider, safeContract) {\n        _FallbackHandlerManager_safeProvider.set(this, void 0);\n        _FallbackHandlerManager_safeContract.set(this, void 0);\n        // keccak256(\"fallback_manager.handler.address\")\n        _FallbackHandlerManager_slot.set(this, '0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d5');\n        __classPrivateFieldSet(this, _FallbackHandlerManager_safeProvider, safeProvider, \"f\");\n        __classPrivateFieldSet(this, _FallbackHandlerManager_safeContract, safeContract, \"f\");\n    }\n    validateFallbackHandlerAddress(fallbackHandlerAddress) {\n        const isValidAddress = __classPrivateFieldGet(this, _FallbackHandlerManager_safeProvider, \"f\").isAddress(fallbackHandlerAddress);\n        if (!isValidAddress || (0, utils_1.isZeroAddress)(fallbackHandlerAddress)) {\n            throw new Error('Invalid fallback handler address provided');\n        }\n    }\n    validateFallbackHandlerIsNotEnabled(currentFallbackHandler, newFallbackHandlerAddress) {\n        if ((0, utils_1.sameString)(currentFallbackHandler, newFallbackHandlerAddress)) {\n            throw new Error('Fallback handler provided is already enabled');\n        }\n    }\n    validateFallbackHandlerIsEnabled(fallbackHandlerAddress) {\n        if ((0, utils_1.isZeroAddress)(fallbackHandlerAddress)) {\n            throw new Error('There is no fallback handler enabled yet');\n        }\n    }\n    async isFallbackHandlerCompatible() {\n        if (!__classPrivateFieldGet(this, _FallbackHandlerManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const safeVersion = await __classPrivateFieldGet(this, _FallbackHandlerManager_safeContract, \"f\").getVersion();\n        if (!(0, utils_1.hasSafeFeature)(utils_1.SAFE_FEATURES.SAFE_FALLBACK_HANDLER, safeVersion)) {\n            throw new Error('Current version of the Safe does not support the fallback handler functionality');\n        }\n        return __classPrivateFieldGet(this, _FallbackHandlerManager_safeContract, \"f\");\n    }\n    async getFallbackHandler() {\n        const safeContract = await this.isFallbackHandlerCompatible();\n        return __classPrivateFieldGet(this, _FallbackHandlerManager_safeProvider, \"f\").getStorageAt(await safeContract.getAddress(), __classPrivateFieldGet(this, _FallbackHandlerManager_slot, \"f\"));\n    }\n    async encodeEnableFallbackHandlerData(fallbackHandlerAddress) {\n        const safeContract = await this.isFallbackHandlerCompatible();\n        this.validateFallbackHandlerAddress(fallbackHandlerAddress);\n        const currentFallbackHandler = await this.getFallbackHandler();\n        this.validateFallbackHandlerIsNotEnabled(currentFallbackHandler, fallbackHandlerAddress);\n        return safeContract.encode('setFallbackHandler', [fallbackHandlerAddress]);\n    }\n    async encodeDisableFallbackHandlerData() {\n        const safeContract = await this.isFallbackHandlerCompatible();\n        const currentFallbackHandler = await this.getFallbackHandler();\n        this.validateFallbackHandlerIsEnabled(currentFallbackHandler);\n        return safeContract.encode('setFallbackHandler', [constants_1.ZERO_ADDRESS]);\n    }\n}\n_FallbackHandlerManager_safeProvider = new WeakMap(), _FallbackHandlerManager_safeContract = new WeakMap(), _FallbackHandlerManager_slot = new WeakMap();\nexports[\"default\"] = FallbackHandlerManager;\n//# sourceMappingURL=fallbackHandlerManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL21hbmFnZXJzL2ZhbGxiYWNrSGFuZGxlck1hbmFnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsNEpBQVU7QUFDbEMsb0JBQW9CLG1CQUFPLENBQUMsMEtBQW9CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy9tYW5hZ2Vycy9mYWxsYmFja0hhbmRsZXJNYW5hZ2VyLmpzP2MzYjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX0ZhbGxiYWNrSGFuZGxlck1hbmFnZXJfc2FmZVByb3ZpZGVyLCBfRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zYWZlQ29udHJhY3QsIF9GYWxsYmFja0hhbmRsZXJNYW5hZ2VyX3Nsb3Q7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvY29uc3RhbnRzXCIpO1xuY2xhc3MgRmFsbGJhY2tIYW5kbGVyTWFuYWdlciB7XG4gICAgY29uc3RydWN0b3Ioc2FmZVByb3ZpZGVyLCBzYWZlQ29udHJhY3QpIHtcbiAgICAgICAgX0ZhbGxiYWNrSGFuZGxlck1hbmFnZXJfc2FmZVByb3ZpZGVyLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zYWZlQ29udHJhY3Quc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIC8vIGtlY2NhazI1NihcImZhbGxiYWNrX21hbmFnZXIuaGFuZGxlci5hZGRyZXNzXCIpXG4gICAgICAgIF9GYWxsYmFja0hhbmRsZXJNYW5hZ2VyX3Nsb3Quc2V0KHRoaXMsICcweDZjOWE2YzRhMzkyODRlMzdlZDFjZjUzZDMzNzU3N2QxNDIxMmE0ODcwZmI5NzZhNDM2NmM2OTNiOTM5OTE4ZDUnKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zYWZlUHJvdmlkZXIsIHNhZmVQcm92aWRlciwgXCJmXCIpO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9GYWxsYmFja0hhbmRsZXJNYW5hZ2VyX3NhZmVDb250cmFjdCwgc2FmZUNvbnRyYWN0LCBcImZcIik7XG4gICAgfVxuICAgIHZhbGlkYXRlRmFsbGJhY2tIYW5kbGVyQWRkcmVzcyhmYWxsYmFja0hhbmRsZXJBZGRyZXNzKSB7XG4gICAgICAgIGNvbnN0IGlzVmFsaWRBZGRyZXNzID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zYWZlUHJvdmlkZXIsIFwiZlwiKS5pc0FkZHJlc3MoZmFsbGJhY2tIYW5kbGVyQWRkcmVzcyk7XG4gICAgICAgIGlmICghaXNWYWxpZEFkZHJlc3MgfHwgKDAsIHV0aWxzXzEuaXNaZXJvQWRkcmVzcykoZmFsbGJhY2tIYW5kbGVyQWRkcmVzcykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBmYWxsYmFjayBoYW5kbGVyIGFkZHJlc3MgcHJvdmlkZWQnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2YWxpZGF0ZUZhbGxiYWNrSGFuZGxlcklzTm90RW5hYmxlZChjdXJyZW50RmFsbGJhY2tIYW5kbGVyLCBuZXdGYWxsYmFja0hhbmRsZXJBZGRyZXNzKSB7XG4gICAgICAgIGlmICgoMCwgdXRpbHNfMS5zYW1lU3RyaW5nKShjdXJyZW50RmFsbGJhY2tIYW5kbGVyLCBuZXdGYWxsYmFja0hhbmRsZXJBZGRyZXNzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWxsYmFjayBoYW5kbGVyIHByb3ZpZGVkIGlzIGFscmVhZHkgZW5hYmxlZCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZhbGlkYXRlRmFsbGJhY2tIYW5kbGVySXNFbmFibGVkKGZhbGxiYWNrSGFuZGxlckFkZHJlc3MpIHtcbiAgICAgICAgaWYgKCgwLCB1dGlsc18xLmlzWmVyb0FkZHJlc3MpKGZhbGxiYWNrSGFuZGxlckFkZHJlc3MpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZXJlIGlzIG5vIGZhbGxiYWNrIGhhbmRsZXIgZW5hYmxlZCB5ZXQnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBpc0ZhbGxiYWNrSGFuZGxlckNvbXBhdGlibGUoKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zYWZlQ29udHJhY3QsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTYWZlIGlzIG5vdCBkZXBsb3llZCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gYXdhaXQgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zYWZlQ29udHJhY3QsIFwiZlwiKS5nZXRWZXJzaW9uKCk7XG4gICAgICAgIGlmICghKDAsIHV0aWxzXzEuaGFzU2FmZUZlYXR1cmUpKHV0aWxzXzEuU0FGRV9GRUFUVVJFUy5TQUZFX0ZBTExCQUNLX0hBTkRMRVIsIHNhZmVWZXJzaW9uKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDdXJyZW50IHZlcnNpb24gb2YgdGhlIFNhZmUgZG9lcyBub3Qgc3VwcG9ydCB0aGUgZmFsbGJhY2sgaGFuZGxlciBmdW5jdGlvbmFsaXR5Jyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0ZhbGxiYWNrSGFuZGxlck1hbmFnZXJfc2FmZUNvbnRyYWN0LCBcImZcIik7XG4gICAgfVxuICAgIGFzeW5jIGdldEZhbGxiYWNrSGFuZGxlcigpIHtcbiAgICAgICAgY29uc3Qgc2FmZUNvbnRyYWN0ID0gYXdhaXQgdGhpcy5pc0ZhbGxiYWNrSGFuZGxlckNvbXBhdGlibGUoKTtcbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0ZhbGxiYWNrSGFuZGxlck1hbmFnZXJfc2FmZVByb3ZpZGVyLCBcImZcIikuZ2V0U3RvcmFnZUF0KGF3YWl0IHNhZmVDb250cmFjdC5nZXRBZGRyZXNzKCksIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0ZhbGxiYWNrSGFuZGxlck1hbmFnZXJfc2xvdCwgXCJmXCIpKTtcbiAgICB9XG4gICAgYXN5bmMgZW5jb2RlRW5hYmxlRmFsbGJhY2tIYW5kbGVyRGF0YShmYWxsYmFja0hhbmRsZXJBZGRyZXNzKSB7XG4gICAgICAgIGNvbnN0IHNhZmVDb250cmFjdCA9IGF3YWl0IHRoaXMuaXNGYWxsYmFja0hhbmRsZXJDb21wYXRpYmxlKCk7XG4gICAgICAgIHRoaXMudmFsaWRhdGVGYWxsYmFja0hhbmRsZXJBZGRyZXNzKGZhbGxiYWNrSGFuZGxlckFkZHJlc3MpO1xuICAgICAgICBjb25zdCBjdXJyZW50RmFsbGJhY2tIYW5kbGVyID0gYXdhaXQgdGhpcy5nZXRGYWxsYmFja0hhbmRsZXIoKTtcbiAgICAgICAgdGhpcy52YWxpZGF0ZUZhbGxiYWNrSGFuZGxlcklzTm90RW5hYmxlZChjdXJyZW50RmFsbGJhY2tIYW5kbGVyLCBmYWxsYmFja0hhbmRsZXJBZGRyZXNzKTtcbiAgICAgICAgcmV0dXJuIHNhZmVDb250cmFjdC5lbmNvZGUoJ3NldEZhbGxiYWNrSGFuZGxlcicsIFtmYWxsYmFja0hhbmRsZXJBZGRyZXNzXSk7XG4gICAgfVxuICAgIGFzeW5jIGVuY29kZURpc2FibGVGYWxsYmFja0hhbmRsZXJEYXRhKCkge1xuICAgICAgICBjb25zdCBzYWZlQ29udHJhY3QgPSBhd2FpdCB0aGlzLmlzRmFsbGJhY2tIYW5kbGVyQ29tcGF0aWJsZSgpO1xuICAgICAgICBjb25zdCBjdXJyZW50RmFsbGJhY2tIYW5kbGVyID0gYXdhaXQgdGhpcy5nZXRGYWxsYmFja0hhbmRsZXIoKTtcbiAgICAgICAgdGhpcy52YWxpZGF0ZUZhbGxiYWNrSGFuZGxlcklzRW5hYmxlZChjdXJyZW50RmFsbGJhY2tIYW5kbGVyKTtcbiAgICAgICAgcmV0dXJuIHNhZmVDb250cmFjdC5lbmNvZGUoJ3NldEZhbGxiYWNrSGFuZGxlcicsIFtjb25zdGFudHNfMS5aRVJPX0FERFJFU1NdKTtcbiAgICB9XG59XG5fRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zYWZlUHJvdmlkZXIgPSBuZXcgV2Vha01hcCgpLCBfRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zYWZlQ29udHJhY3QgPSBuZXcgV2Vha01hcCgpLCBfRmFsbGJhY2tIYW5kbGVyTWFuYWdlcl9zbG90ID0gbmV3IFdlYWtNYXAoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEZhbGxiYWNrSGFuZGxlck1hbmFnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYWxsYmFja0hhbmRsZXJNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/fallbackHandlerManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/guardManager.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/guardManager.js ***!
  \******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _GuardManager_safeProvider, _GuardManager_safeContract, _GuardManager_slot;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst constants_1 = __webpack_require__(/*! ../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nclass GuardManager {\n    constructor(safeProvider, safeContract) {\n        _GuardManager_safeProvider.set(this, void 0);\n        _GuardManager_safeContract.set(this, void 0);\n        // keccak256(\"guard_manager.guard.address\")\n        _GuardManager_slot.set(this, '0x4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c8');\n        __classPrivateFieldSet(this, _GuardManager_safeProvider, safeProvider, \"f\");\n        __classPrivateFieldSet(this, _GuardManager_safeContract, safeContract, \"f\");\n    }\n    validateGuardAddress(guardAddress) {\n        const isValidAddress = __classPrivateFieldGet(this, _GuardManager_safeProvider, \"f\").isAddress(guardAddress);\n        if (!isValidAddress || (0, utils_1.isZeroAddress)(guardAddress)) {\n            throw new Error('Invalid guard address provided');\n        }\n    }\n    validateGuardIsNotEnabled(currentGuard, newGuardAddress) {\n        if ((0, utils_1.sameString)(currentGuard, newGuardAddress)) {\n            throw new Error('Guard provided is already enabled');\n        }\n    }\n    validateGuardIsEnabled(guardAddress) {\n        if ((0, utils_1.isZeroAddress)(guardAddress)) {\n            throw new Error('There is no guard enabled yet');\n        }\n    }\n    async isGuardCompatible() {\n        if (!__classPrivateFieldGet(this, _GuardManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const safeVersion = await __classPrivateFieldGet(this, _GuardManager_safeContract, \"f\").getVersion();\n        if (!(0, utils_1.hasSafeFeature)(utils_1.SAFE_FEATURES.SAFE_TX_GUARDS, safeVersion)) {\n            throw new Error('Current version of the Safe does not support Safe transaction guards functionality');\n        }\n        return __classPrivateFieldGet(this, _GuardManager_safeContract, \"f\");\n    }\n    async getGuard() {\n        const safeContract = await this.isGuardCompatible();\n        return __classPrivateFieldGet(this, _GuardManager_safeProvider, \"f\").getStorageAt(await safeContract.getAddress(), __classPrivateFieldGet(this, _GuardManager_slot, \"f\"));\n    }\n    async encodeEnableGuardData(guardAddress) {\n        const safeContract = await this.isGuardCompatible();\n        this.validateGuardAddress(guardAddress);\n        const currentGuard = await this.getGuard();\n        this.validateGuardIsNotEnabled(currentGuard, guardAddress);\n        return safeContract.encode('setGuard', [guardAddress]);\n    }\n    async encodeDisableGuardData() {\n        const safeContract = await this.isGuardCompatible();\n        const currentGuard = await this.getGuard();\n        this.validateGuardIsEnabled(currentGuard);\n        return safeContract.encode('setGuard', [constants_1.ZERO_ADDRESS]);\n    }\n}\n_GuardManager_safeProvider = new WeakMap(), _GuardManager_safeContract = new WeakMap(), _GuardManager_slot = new WeakMap();\nexports[\"default\"] = GuardManager;\n//# sourceMappingURL=guardManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL21hbmFnZXJzL2d1YXJkTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyw0SkFBVTtBQUNsQyxvQkFBb0IsbUJBQU8sQ0FBQywwS0FBb0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL21hbmFnZXJzL2d1YXJkTWFuYWdlci5qcz9hZThkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRTZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIHZhbHVlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwibVwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBtZXRob2QgaXMgbm90IHdyaXRhYmxlXCIpO1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiAoa2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIsIHZhbHVlKSA6IGYgPyBmLnZhbHVlID0gdmFsdWUgOiBzdGF0ZS5zZXQocmVjZWl2ZXIsIHZhbHVlKSksIHZhbHVlO1xufTtcbnZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59O1xudmFyIF9HdWFyZE1hbmFnZXJfc2FmZVByb3ZpZGVyLCBfR3VhcmRNYW5hZ2VyX3NhZmVDb250cmFjdCwgX0d1YXJkTWFuYWdlcl9zbG90O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL3V0aWxzL2NvbnN0YW50c1wiKTtcbmNsYXNzIEd1YXJkTWFuYWdlciB7XG4gICAgY29uc3RydWN0b3Ioc2FmZVByb3ZpZGVyLCBzYWZlQ29udHJhY3QpIHtcbiAgICAgICAgX0d1YXJkTWFuYWdlcl9zYWZlUHJvdmlkZXIuc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9HdWFyZE1hbmFnZXJfc2FmZUNvbnRyYWN0LnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICAvLyBrZWNjYWsyNTYoXCJndWFyZF9tYW5hZ2VyLmd1YXJkLmFkZHJlc3NcIilcbiAgICAgICAgX0d1YXJkTWFuYWdlcl9zbG90LnNldCh0aGlzLCAnMHg0YTIwNGY2MjBjOGM1Y2NkY2EzZmQ1NGQwMDNiYWRkODViYTUwMDQzNmE0MzFmMGNiZGE0ZjU1OGM5M2MzNGM4Jyk7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0d1YXJkTWFuYWdlcl9zYWZlUHJvdmlkZXIsIHNhZmVQcm92aWRlciwgXCJmXCIpO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9HdWFyZE1hbmFnZXJfc2FmZUNvbnRyYWN0LCBzYWZlQ29udHJhY3QsIFwiZlwiKTtcbiAgICB9XG4gICAgdmFsaWRhdGVHdWFyZEFkZHJlc3MoZ3VhcmRBZGRyZXNzKSB7XG4gICAgICAgIGNvbnN0IGlzVmFsaWRBZGRyZXNzID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfR3VhcmRNYW5hZ2VyX3NhZmVQcm92aWRlciwgXCJmXCIpLmlzQWRkcmVzcyhndWFyZEFkZHJlc3MpO1xuICAgICAgICBpZiAoIWlzVmFsaWRBZGRyZXNzIHx8ICgwLCB1dGlsc18xLmlzWmVyb0FkZHJlc3MpKGd1YXJkQWRkcmVzcykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBndWFyZCBhZGRyZXNzIHByb3ZpZGVkJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFsaWRhdGVHdWFyZElzTm90RW5hYmxlZChjdXJyZW50R3VhcmQsIG5ld0d1YXJkQWRkcmVzcykge1xuICAgICAgICBpZiAoKDAsIHV0aWxzXzEuc2FtZVN0cmluZykoY3VycmVudEd1YXJkLCBuZXdHdWFyZEFkZHJlc3MpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0d1YXJkIHByb3ZpZGVkIGlzIGFscmVhZHkgZW5hYmxlZCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZhbGlkYXRlR3VhcmRJc0VuYWJsZWQoZ3VhcmRBZGRyZXNzKSB7XG4gICAgICAgIGlmICgoMCwgdXRpbHNfMS5pc1plcm9BZGRyZXNzKShndWFyZEFkZHJlc3MpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZXJlIGlzIG5vIGd1YXJkIGVuYWJsZWQgeWV0Jyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgaXNHdWFyZENvbXBhdGlibGUoKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfR3VhcmRNYW5hZ2VyX3NhZmVDb250cmFjdCwgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NhZmUgaXMgbm90IGRlcGxveWVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2FmZVZlcnNpb24gPSBhd2FpdCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9HdWFyZE1hbmFnZXJfc2FmZUNvbnRyYWN0LCBcImZcIikuZ2V0VmVyc2lvbigpO1xuICAgICAgICBpZiAoISgwLCB1dGlsc18xLmhhc1NhZmVGZWF0dXJlKSh1dGlsc18xLlNBRkVfRkVBVFVSRVMuU0FGRV9UWF9HVUFSRFMsIHNhZmVWZXJzaW9uKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDdXJyZW50IHZlcnNpb24gb2YgdGhlIFNhZmUgZG9lcyBub3Qgc3VwcG9ydCBTYWZlIHRyYW5zYWN0aW9uIGd1YXJkcyBmdW5jdGlvbmFsaXR5Jyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0d1YXJkTWFuYWdlcl9zYWZlQ29udHJhY3QsIFwiZlwiKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0R3VhcmQoKSB7XG4gICAgICAgIGNvbnN0IHNhZmVDb250cmFjdCA9IGF3YWl0IHRoaXMuaXNHdWFyZENvbXBhdGlibGUoKTtcbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0d1YXJkTWFuYWdlcl9zYWZlUHJvdmlkZXIsIFwiZlwiKS5nZXRTdG9yYWdlQXQoYXdhaXQgc2FmZUNvbnRyYWN0LmdldEFkZHJlc3MoKSwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfR3VhcmRNYW5hZ2VyX3Nsb3QsIFwiZlwiKSk7XG4gICAgfVxuICAgIGFzeW5jIGVuY29kZUVuYWJsZUd1YXJkRGF0YShndWFyZEFkZHJlc3MpIHtcbiAgICAgICAgY29uc3Qgc2FmZUNvbnRyYWN0ID0gYXdhaXQgdGhpcy5pc0d1YXJkQ29tcGF0aWJsZSgpO1xuICAgICAgICB0aGlzLnZhbGlkYXRlR3VhcmRBZGRyZXNzKGd1YXJkQWRkcmVzcyk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRHdWFyZCA9IGF3YWl0IHRoaXMuZ2V0R3VhcmQoKTtcbiAgICAgICAgdGhpcy52YWxpZGF0ZUd1YXJkSXNOb3RFbmFibGVkKGN1cnJlbnRHdWFyZCwgZ3VhcmRBZGRyZXNzKTtcbiAgICAgICAgcmV0dXJuIHNhZmVDb250cmFjdC5lbmNvZGUoJ3NldEd1YXJkJywgW2d1YXJkQWRkcmVzc10pO1xuICAgIH1cbiAgICBhc3luYyBlbmNvZGVEaXNhYmxlR3VhcmREYXRhKCkge1xuICAgICAgICBjb25zdCBzYWZlQ29udHJhY3QgPSBhd2FpdCB0aGlzLmlzR3VhcmRDb21wYXRpYmxlKCk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRHdWFyZCA9IGF3YWl0IHRoaXMuZ2V0R3VhcmQoKTtcbiAgICAgICAgdGhpcy52YWxpZGF0ZUd1YXJkSXNFbmFibGVkKGN1cnJlbnRHdWFyZCk7XG4gICAgICAgIHJldHVybiBzYWZlQ29udHJhY3QuZW5jb2RlKCdzZXRHdWFyZCcsIFtjb25zdGFudHNfMS5aRVJPX0FERFJFU1NdKTtcbiAgICB9XG59XG5fR3VhcmRNYW5hZ2VyX3NhZmVQcm92aWRlciA9IG5ldyBXZWFrTWFwKCksIF9HdWFyZE1hbmFnZXJfc2FmZUNvbnRyYWN0ID0gbmV3IFdlYWtNYXAoKSwgX0d1YXJkTWFuYWdlcl9zbG90ID0gbmV3IFdlYWtNYXAoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEd1YXJkTWFuYWdlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWd1YXJkTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/guardManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/moduleManager.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/moduleManager.js ***!
  \*******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ModuleManager_safeProvider, _ModuleManager_safeContract;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst constants_1 = __webpack_require__(/*! ../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nclass ModuleManager {\n    constructor(safeProvider, safeContract) {\n        _ModuleManager_safeProvider.set(this, void 0);\n        _ModuleManager_safeContract.set(this, void 0);\n        __classPrivateFieldSet(this, _ModuleManager_safeProvider, safeProvider, \"f\");\n        __classPrivateFieldSet(this, _ModuleManager_safeContract, safeContract, \"f\");\n    }\n    validateModuleAddress(moduleAddress) {\n        const isValidAddress = __classPrivateFieldGet(this, _ModuleManager_safeProvider, \"f\").isAddress(moduleAddress);\n        if (!isValidAddress || (0, utils_1.isRestrictedAddress)(moduleAddress)) {\n            throw new Error('Invalid module address provided');\n        }\n    }\n    validateModuleIsNotEnabled(moduleAddress, modules) {\n        const moduleIndex = modules.findIndex((module) => (0, utils_1.sameString)(module, moduleAddress));\n        const isEnabled = moduleIndex >= 0;\n        if (isEnabled) {\n            throw new Error('Module provided is already enabled');\n        }\n    }\n    validateModuleIsEnabled(moduleAddress, modules) {\n        const moduleIndex = modules.findIndex((module) => (0, utils_1.sameString)(module, moduleAddress));\n        const isEnabled = moduleIndex >= 0;\n        if (!isEnabled) {\n            throw new Error('Module provided is not enabled yet');\n        }\n        return moduleIndex;\n    }\n    async getModules() {\n        if (!__classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const [modules] = await __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").getModules();\n        return [...modules];\n    }\n    async getModulesPaginated(start, pageSize) {\n        if (!__classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const [modules, next] = await __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").getModulesPaginated([start, BigInt(pageSize)]);\n        return { modules: modules, next };\n    }\n    async isModuleEnabled(moduleAddress) {\n        if (!__classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const [isModuleEnabled] = await __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").isModuleEnabled([moduleAddress]);\n        return isModuleEnabled;\n    }\n    async encodeEnableModuleData(moduleAddress) {\n        if (!__classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        this.validateModuleAddress(moduleAddress);\n        const modules = await this.getModules();\n        this.validateModuleIsNotEnabled(moduleAddress, modules);\n        return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").encode('enableModule', [moduleAddress]);\n    }\n    async encodeDisableModuleData(moduleAddress) {\n        if (!__classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        this.validateModuleAddress(moduleAddress);\n        const modules = await this.getModules();\n        const moduleIndex = this.validateModuleIsEnabled(moduleAddress, modules);\n        const prevModuleAddress = moduleIndex === 0 ? constants_1.SENTINEL_ADDRESS : modules[moduleIndex - 1];\n        return __classPrivateFieldGet(this, _ModuleManager_safeContract, \"f\").encode('disableModule', [prevModuleAddress, moduleAddress]);\n    }\n}\n_ModuleManager_safeProvider = new WeakMap(), _ModuleManager_safeContract = new WeakMap();\nexports[\"default\"] = ModuleManager;\n//# sourceMappingURL=moduleManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/moduleManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/ownerManager.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/ownerManager.js ***!
  \******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OwnerManager_safeProvider, _OwnerManager_safeContract;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst constants_1 = __webpack_require__(/*! ../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nclass OwnerManager {\n    constructor(safeProvider, safeContract) {\n        _OwnerManager_safeProvider.set(this, void 0);\n        _OwnerManager_safeContract.set(this, void 0);\n        __classPrivateFieldSet(this, _OwnerManager_safeProvider, safeProvider, \"f\");\n        __classPrivateFieldSet(this, _OwnerManager_safeContract, safeContract, \"f\");\n    }\n    validateOwnerAddress(ownerAddress, errorMessage) {\n        const isValidAddress = __classPrivateFieldGet(this, _OwnerManager_safeProvider, \"f\").isAddress(ownerAddress);\n        if (!isValidAddress || (0, utils_1.isRestrictedAddress)(ownerAddress)) {\n            throw new Error(errorMessage || 'Invalid owner address provided');\n        }\n    }\n    validateThreshold(threshold, numOwners) {\n        if (threshold <= 0) {\n            throw new Error('Threshold needs to be greater than 0');\n        }\n        if (threshold > numOwners) {\n            throw new Error('Threshold cannot exceed owner count');\n        }\n    }\n    validateAddressIsNotOwner(ownerAddress, owners, errorMessage) {\n        const ownerIndex = owners.findIndex((owner) => (0, utils_1.sameString)(owner, ownerAddress));\n        const isOwner = ownerIndex >= 0;\n        if (isOwner) {\n            throw new Error(errorMessage || 'Address provided is already an owner');\n        }\n    }\n    validateAddressIsOwner(ownerAddress, owners, errorMessage) {\n        const ownerIndex = owners.findIndex((owner) => (0, utils_1.sameString)(owner, ownerAddress));\n        const isOwner = ownerIndex >= 0;\n        if (!isOwner) {\n            throw new Error(errorMessage || 'Address provided is not an owner');\n        }\n        return ownerIndex;\n    }\n    async getOwners() {\n        if (!__classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const [owners] = await __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").getOwners();\n        return [...owners];\n    }\n    async getThreshold() {\n        if (!__classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const [threshold] = await __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").getThreshold();\n        return Number(threshold);\n    }\n    async isOwner(ownerAddress) {\n        if (!__classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const [isOwner] = await __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").isOwner([ownerAddress]);\n        return isOwner;\n    }\n    async encodeAddOwnerWithThresholdData(ownerAddress, threshold) {\n        if (!__classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        this.validateOwnerAddress(ownerAddress);\n        const owners = await this.getOwners();\n        this.validateAddressIsNotOwner(ownerAddress, owners);\n        const newThreshold = threshold ?? (await this.getThreshold());\n        this.validateThreshold(newThreshold, owners.length + 1);\n        return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").encode('addOwnerWithThreshold', [ownerAddress, newThreshold]);\n    }\n    async encodeRemoveOwnerData(ownerAddress, threshold) {\n        if (!__classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        this.validateOwnerAddress(ownerAddress);\n        const owners = await this.getOwners();\n        const ownerIndex = this.validateAddressIsOwner(ownerAddress, owners);\n        const newThreshold = threshold ?? (await this.getThreshold()) - 1;\n        this.validateThreshold(newThreshold, owners.length - 1);\n        const prevOwnerAddress = ownerIndex === 0 ? constants_1.SENTINEL_ADDRESS : owners[ownerIndex - 1];\n        return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").encode('removeOwner', [prevOwnerAddress, ownerAddress, newThreshold]);\n    }\n    async encodeSwapOwnerData(oldOwnerAddress, newOwnerAddress) {\n        if (!__classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        this.validateOwnerAddress(newOwnerAddress, 'Invalid new owner address provided');\n        this.validateOwnerAddress(oldOwnerAddress, 'Invalid old owner address provided');\n        const owners = await this.getOwners();\n        this.validateAddressIsNotOwner(newOwnerAddress, owners, 'New address provided is already an owner');\n        const oldOwnerIndex = this.validateAddressIsOwner(oldOwnerAddress, owners, 'Old address provided is not an owner');\n        const prevOwnerAddress = oldOwnerIndex === 0 ? constants_1.SENTINEL_ADDRESS : owners[oldOwnerIndex - 1];\n        return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").encode('swapOwner', [\n            prevOwnerAddress,\n            oldOwnerAddress,\n            newOwnerAddress\n        ]);\n    }\n    async encodeChangeThresholdData(threshold) {\n        if (!__classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\")) {\n            throw new Error('Safe is not deployed');\n        }\n        const owners = await this.getOwners();\n        this.validateThreshold(threshold, owners.length);\n        return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").encode('changeThreshold', [threshold]);\n    }\n}\n_OwnerManager_safeProvider = new WeakMap(), _OwnerManager_safeContract = new WeakMap();\nexports[\"default\"] = OwnerManager;\n//# sourceMappingURL=ownerManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL21hbmFnZXJzL293bmVyTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyw0SkFBVTtBQUNsQyxvQkFBb0IsbUJBQU8sQ0FBQywwS0FBb0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvbWFuYWdlcnMvb3duZXJNYW5hZ2VyLmpzPzJlOWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX093bmVyTWFuYWdlcl9zYWZlUHJvdmlkZXIsIF9Pd25lck1hbmFnZXJfc2FmZUNvbnRyYWN0O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL3V0aWxzL2NvbnN0YW50c1wiKTtcbmNsYXNzIE93bmVyTWFuYWdlciB7XG4gICAgY29uc3RydWN0b3Ioc2FmZVByb3ZpZGVyLCBzYWZlQ29udHJhY3QpIHtcbiAgICAgICAgX093bmVyTWFuYWdlcl9zYWZlUHJvdmlkZXIuc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9Pd25lck1hbmFnZXJfc2FmZUNvbnRyYWN0LnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9Pd25lck1hbmFnZXJfc2FmZVByb3ZpZGVyLCBzYWZlUHJvdmlkZXIsIFwiZlwiKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfT3duZXJNYW5hZ2VyX3NhZmVDb250cmFjdCwgc2FmZUNvbnRyYWN0LCBcImZcIik7XG4gICAgfVxuICAgIHZhbGlkYXRlT3duZXJBZGRyZXNzKG93bmVyQWRkcmVzcywgZXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IGlzVmFsaWRBZGRyZXNzID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfT3duZXJNYW5hZ2VyX3NhZmVQcm92aWRlciwgXCJmXCIpLmlzQWRkcmVzcyhvd25lckFkZHJlc3MpO1xuICAgICAgICBpZiAoIWlzVmFsaWRBZGRyZXNzIHx8ICgwLCB1dGlsc18xLmlzUmVzdHJpY3RlZEFkZHJlc3MpKG93bmVyQWRkcmVzcykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UgfHwgJ0ludmFsaWQgb3duZXIgYWRkcmVzcyBwcm92aWRlZCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZhbGlkYXRlVGhyZXNob2xkKHRocmVzaG9sZCwgbnVtT3duZXJzKSB7XG4gICAgICAgIGlmICh0aHJlc2hvbGQgPD0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaHJlc2hvbGQgbmVlZHMgdG8gYmUgZ3JlYXRlciB0aGFuIDAnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhyZXNob2xkID4gbnVtT3duZXJzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RocmVzaG9sZCBjYW5ub3QgZXhjZWVkIG93bmVyIGNvdW50Jyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFsaWRhdGVBZGRyZXNzSXNOb3RPd25lcihvd25lckFkZHJlc3MsIG93bmVycywgZXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IG93bmVySW5kZXggPSBvd25lcnMuZmluZEluZGV4KChvd25lcikgPT4gKDAsIHV0aWxzXzEuc2FtZVN0cmluZykob3duZXIsIG93bmVyQWRkcmVzcykpO1xuICAgICAgICBjb25zdCBpc093bmVyID0gb3duZXJJbmRleCA+PSAwO1xuICAgICAgICBpZiAoaXNPd25lcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yTWVzc2FnZSB8fCAnQWRkcmVzcyBwcm92aWRlZCBpcyBhbHJlYWR5IGFuIG93bmVyJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFsaWRhdGVBZGRyZXNzSXNPd25lcihvd25lckFkZHJlc3MsIG93bmVycywgZXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IG93bmVySW5kZXggPSBvd25lcnMuZmluZEluZGV4KChvd25lcikgPT4gKDAsIHV0aWxzXzEuc2FtZVN0cmluZykob3duZXIsIG93bmVyQWRkcmVzcykpO1xuICAgICAgICBjb25zdCBpc093bmVyID0gb3duZXJJbmRleCA+PSAwO1xuICAgICAgICBpZiAoIWlzT3duZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UgfHwgJ0FkZHJlc3MgcHJvdmlkZWQgaXMgbm90IGFuIG93bmVyJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG93bmVySW5kZXg7XG4gICAgfVxuICAgIGFzeW5jIGdldE93bmVycygpIHtcbiAgICAgICAgaWYgKCFfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9Pd25lck1hbmFnZXJfc2FmZUNvbnRyYWN0LCBcImZcIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2FmZSBpcyBub3QgZGVwbG95ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbb3duZXJzXSA9IGF3YWl0IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX093bmVyTWFuYWdlcl9zYWZlQ29udHJhY3QsIFwiZlwiKS5nZXRPd25lcnMoKTtcbiAgICAgICAgcmV0dXJuIFsuLi5vd25lcnNdO1xuICAgIH1cbiAgICBhc3luYyBnZXRUaHJlc2hvbGQoKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfT3duZXJNYW5hZ2VyX3NhZmVDb250cmFjdCwgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NhZmUgaXMgbm90IGRlcGxveWVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW3RocmVzaG9sZF0gPSBhd2FpdCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9Pd25lck1hbmFnZXJfc2FmZUNvbnRyYWN0LCBcImZcIikuZ2V0VGhyZXNob2xkKCk7XG4gICAgICAgIHJldHVybiBOdW1iZXIodGhyZXNob2xkKTtcbiAgICB9XG4gICAgYXN5bmMgaXNPd25lcihvd25lckFkZHJlc3MpIHtcbiAgICAgICAgaWYgKCFfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9Pd25lck1hbmFnZXJfc2FmZUNvbnRyYWN0LCBcImZcIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2FmZSBpcyBub3QgZGVwbG95ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbaXNPd25lcl0gPSBhd2FpdCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9Pd25lck1hbmFnZXJfc2FmZUNvbnRyYWN0LCBcImZcIikuaXNPd25lcihbb3duZXJBZGRyZXNzXSk7XG4gICAgICAgIHJldHVybiBpc093bmVyO1xuICAgIH1cbiAgICBhc3luYyBlbmNvZGVBZGRPd25lcldpdGhUaHJlc2hvbGREYXRhKG93bmVyQWRkcmVzcywgdGhyZXNob2xkKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfT3duZXJNYW5hZ2VyX3NhZmVDb250cmFjdCwgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NhZmUgaXMgbm90IGRlcGxveWVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52YWxpZGF0ZU93bmVyQWRkcmVzcyhvd25lckFkZHJlc3MpO1xuICAgICAgICBjb25zdCBvd25lcnMgPSBhd2FpdCB0aGlzLmdldE93bmVycygpO1xuICAgICAgICB0aGlzLnZhbGlkYXRlQWRkcmVzc0lzTm90T3duZXIob3duZXJBZGRyZXNzLCBvd25lcnMpO1xuICAgICAgICBjb25zdCBuZXdUaHJlc2hvbGQgPSB0aHJlc2hvbGQgPz8gKGF3YWl0IHRoaXMuZ2V0VGhyZXNob2xkKCkpO1xuICAgICAgICB0aGlzLnZhbGlkYXRlVGhyZXNob2xkKG5ld1RocmVzaG9sZCwgb3duZXJzLmxlbmd0aCArIDEpO1xuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfT3duZXJNYW5hZ2VyX3NhZmVDb250cmFjdCwgXCJmXCIpLmVuY29kZSgnYWRkT3duZXJXaXRoVGhyZXNob2xkJywgW293bmVyQWRkcmVzcywgbmV3VGhyZXNob2xkXSk7XG4gICAgfVxuICAgIGFzeW5jIGVuY29kZVJlbW92ZU93bmVyRGF0YShvd25lckFkZHJlc3MsIHRocmVzaG9sZCkge1xuICAgICAgICBpZiAoIV9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX093bmVyTWFuYWdlcl9zYWZlQ29udHJhY3QsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTYWZlIGlzIG5vdCBkZXBsb3llZCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudmFsaWRhdGVPd25lckFkZHJlc3Mob3duZXJBZGRyZXNzKTtcbiAgICAgICAgY29uc3Qgb3duZXJzID0gYXdhaXQgdGhpcy5nZXRPd25lcnMoKTtcbiAgICAgICAgY29uc3Qgb3duZXJJbmRleCA9IHRoaXMudmFsaWRhdGVBZGRyZXNzSXNPd25lcihvd25lckFkZHJlc3MsIG93bmVycyk7XG4gICAgICAgIGNvbnN0IG5ld1RocmVzaG9sZCA9IHRocmVzaG9sZCA/PyAoYXdhaXQgdGhpcy5nZXRUaHJlc2hvbGQoKSkgLSAxO1xuICAgICAgICB0aGlzLnZhbGlkYXRlVGhyZXNob2xkKG5ld1RocmVzaG9sZCwgb3duZXJzLmxlbmd0aCAtIDEpO1xuICAgICAgICBjb25zdCBwcmV2T3duZXJBZGRyZXNzID0gb3duZXJJbmRleCA9PT0gMCA/IGNvbnN0YW50c18xLlNFTlRJTkVMX0FERFJFU1MgOiBvd25lcnNbb3duZXJJbmRleCAtIDFdO1xuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfT3duZXJNYW5hZ2VyX3NhZmVDb250cmFjdCwgXCJmXCIpLmVuY29kZSgncmVtb3ZlT3duZXInLCBbcHJldk93bmVyQWRkcmVzcywgb3duZXJBZGRyZXNzLCBuZXdUaHJlc2hvbGRdKTtcbiAgICB9XG4gICAgYXN5bmMgZW5jb2RlU3dhcE93bmVyRGF0YShvbGRPd25lckFkZHJlc3MsIG5ld093bmVyQWRkcmVzcykge1xuICAgICAgICBpZiAoIV9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX093bmVyTWFuYWdlcl9zYWZlQ29udHJhY3QsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTYWZlIGlzIG5vdCBkZXBsb3llZCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudmFsaWRhdGVPd25lckFkZHJlc3MobmV3T3duZXJBZGRyZXNzLCAnSW52YWxpZCBuZXcgb3duZXIgYWRkcmVzcyBwcm92aWRlZCcpO1xuICAgICAgICB0aGlzLnZhbGlkYXRlT3duZXJBZGRyZXNzKG9sZE93bmVyQWRkcmVzcywgJ0ludmFsaWQgb2xkIG93bmVyIGFkZHJlc3MgcHJvdmlkZWQnKTtcbiAgICAgICAgY29uc3Qgb3duZXJzID0gYXdhaXQgdGhpcy5nZXRPd25lcnMoKTtcbiAgICAgICAgdGhpcy52YWxpZGF0ZUFkZHJlc3NJc05vdE93bmVyKG5ld093bmVyQWRkcmVzcywgb3duZXJzLCAnTmV3IGFkZHJlc3MgcHJvdmlkZWQgaXMgYWxyZWFkeSBhbiBvd25lcicpO1xuICAgICAgICBjb25zdCBvbGRPd25lckluZGV4ID0gdGhpcy52YWxpZGF0ZUFkZHJlc3NJc093bmVyKG9sZE93bmVyQWRkcmVzcywgb3duZXJzLCAnT2xkIGFkZHJlc3MgcHJvdmlkZWQgaXMgbm90IGFuIG93bmVyJyk7XG4gICAgICAgIGNvbnN0IHByZXZPd25lckFkZHJlc3MgPSBvbGRPd25lckluZGV4ID09PSAwID8gY29uc3RhbnRzXzEuU0VOVElORUxfQUREUkVTUyA6IG93bmVyc1tvbGRPd25lckluZGV4IC0gMV07XG4gICAgICAgIHJldHVybiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9Pd25lck1hbmFnZXJfc2FmZUNvbnRyYWN0LCBcImZcIikuZW5jb2RlKCdzd2FwT3duZXInLCBbXG4gICAgICAgICAgICBwcmV2T3duZXJBZGRyZXNzLFxuICAgICAgICAgICAgb2xkT3duZXJBZGRyZXNzLFxuICAgICAgICAgICAgbmV3T3duZXJBZGRyZXNzXG4gICAgICAgIF0pO1xuICAgIH1cbiAgICBhc3luYyBlbmNvZGVDaGFuZ2VUaHJlc2hvbGREYXRhKHRocmVzaG9sZCkge1xuICAgICAgICBpZiAoIV9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX093bmVyTWFuYWdlcl9zYWZlQ29udHJhY3QsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTYWZlIGlzIG5vdCBkZXBsb3llZCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG93bmVycyA9IGF3YWl0IHRoaXMuZ2V0T3duZXJzKCk7XG4gICAgICAgIHRoaXMudmFsaWRhdGVUaHJlc2hvbGQodGhyZXNob2xkLCBvd25lcnMubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX093bmVyTWFuYWdlcl9zYWZlQ29udHJhY3QsIFwiZlwiKS5lbmNvZGUoJ2NoYW5nZVRocmVzaG9sZCcsIFt0aHJlc2hvbGRdKTtcbiAgICB9XG59XG5fT3duZXJNYW5hZ2VyX3NhZmVQcm92aWRlciA9IG5ldyBXZWFrTWFwKCksIF9Pd25lck1hbmFnZXJfc2FmZUNvbnRyYWN0ID0gbmV3IFdlYWtNYXAoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IE93bmVyTWFuYWdlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW93bmVyTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/managers/ownerManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/contracts.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/contracts.js ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=contracts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL2NvbnRyYWN0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL2NvbnRyYWN0cy5qcz9kZjk1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udHJhY3RzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/contracts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/index.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/index.js ***!
  \********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./contracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/contracts.js\"), exports);\n__exportStar(__webpack_require__(/*! ./safeConfig */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeConfig.js\"), exports);\n__exportStar(__webpack_require__(/*! ./safeFactory */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./safeProvider */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./signing */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/signing.js\"), exports);\n__exportStar(__webpack_require__(/*! ./transactions */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/transactions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./passkeys */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/passkeys.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxtS0FBYTtBQUNsQyxhQUFhLG1CQUFPLENBQUMscUtBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLHVLQUFlO0FBQ3BDLGFBQWEsbUJBQU8sQ0FBQyx5S0FBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLCtKQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyx5S0FBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLGlLQUFZO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdHlwZXMvaW5kZXguanM/NTA2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnRyYWN0c1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2FmZUNvbmZpZ1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2FmZUZhY3RvcnlcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NhZmVQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnbmluZ1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhbnNhY3Rpb25zXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wYXNza2V5c1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/passkeys.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/passkeys.js ***!
  \***********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=passkeys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3Bhc3NrZXlzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdHlwZXMvcGFzc2tleXMuanM/Nzk5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhc3NrZXlzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/passkeys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeConfig.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeConfig.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=safeConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3NhZmVDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy90eXBlcy9zYWZlQ29uZmlnLmpzP2RlZDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zYWZlQ29uZmlnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeFactory.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeFactory.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=safeFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3NhZmVGYWN0b3J5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdHlwZXMvc2FmZUZhY3RvcnkuanM/ZjhlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNhZmVGYWN0b3J5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeFactory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeProvider.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeProvider.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=safeProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3NhZmVQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3NhZmVQcm92aWRlci5qcz9mYzllIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FmZVByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/safeProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/signing.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/signing.js ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SigningMethod = void 0;\nvar SigningMethod;\n(function (SigningMethod) {\n    SigningMethod[\"ETH_SIGN\"] = \"eth_sign\";\n    SigningMethod[\"ETH_SIGN_TYPED_DATA\"] = \"eth_signTypedData\";\n    SigningMethod[\"ETH_SIGN_TYPED_DATA_V3\"] = \"eth_signTypedData_v3\";\n    SigningMethod[\"ETH_SIGN_TYPED_DATA_V4\"] = \"eth_signTypedData_v4\";\n    SigningMethod[\"SAFE_SIGNATURE\"] = \"safe_sign\";\n})(SigningMethod || (exports.SigningMethod = SigningMethod = {}));\n//# sourceMappingURL=signing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3NpZ25pbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0IscUJBQXFCLHFCQUFxQjtBQUMvRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3NpZ25pbmcuanM/NDU2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmluZ01ldGhvZCA9IHZvaWQgMDtcbnZhciBTaWduaW5nTWV0aG9kO1xuKGZ1bmN0aW9uIChTaWduaW5nTWV0aG9kKSB7XG4gICAgU2lnbmluZ01ldGhvZFtcIkVUSF9TSUdOXCJdID0gXCJldGhfc2lnblwiO1xuICAgIFNpZ25pbmdNZXRob2RbXCJFVEhfU0lHTl9UWVBFRF9EQVRBXCJdID0gXCJldGhfc2lnblR5cGVkRGF0YVwiO1xuICAgIFNpZ25pbmdNZXRob2RbXCJFVEhfU0lHTl9UWVBFRF9EQVRBX1YzXCJdID0gXCJldGhfc2lnblR5cGVkRGF0YV92M1wiO1xuICAgIFNpZ25pbmdNZXRob2RbXCJFVEhfU0lHTl9UWVBFRF9EQVRBX1Y0XCJdID0gXCJldGhfc2lnblR5cGVkRGF0YV92NFwiO1xuICAgIFNpZ25pbmdNZXRob2RbXCJTQUZFX1NJR05BVFVSRVwiXSA9IFwic2FmZV9zaWduXCI7XG59KShTaWduaW5nTWV0aG9kIHx8IChleHBvcnRzLlNpZ25pbmdNZXRob2QgPSBTaWduaW5nTWV0aG9kID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25pbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/signing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/transactions.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/transactions.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=transactions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3RyYW5zYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3R5cGVzL3RyYW5zYWN0aW9ucy5qcz80NGI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNhY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/transactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/address.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/address.js ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRestrictedAddress = exports.isSentinelAddress = exports.isZeroAddress = exports.sameString = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nfunction sameString(str1, str2) {\n    return str1.toLowerCase() === str2.toLowerCase();\n}\nexports.sameString = sameString;\nfunction isZeroAddress(address) {\n    return sameString(address, constants_1.ZERO_ADDRESS);\n}\nexports.isZeroAddress = isZeroAddress;\nfunction isSentinelAddress(address) {\n    return sameString(address, constants_1.SENTINEL_ADDRESS);\n}\nexports.isSentinelAddress = isSentinelAddress;\nfunction isRestrictedAddress(address) {\n    return isZeroAddress(address) || isSentinelAddress(address);\n}\nexports.isRestrictedAddress = isRestrictedAddress;\n//# sourceMappingURL=address.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL2FkZHJlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcseUJBQXlCLEdBQUcscUJBQXFCLEdBQUcsa0JBQWtCO0FBQ3BHLG9CQUFvQixtQkFBTyxDQUFDLG1LQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL2FkZHJlc3MuanM/MzA2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNSZXN0cmljdGVkQWRkcmVzcyA9IGV4cG9ydHMuaXNTZW50aW5lbEFkZHJlc3MgPSBleHBvcnRzLmlzWmVyb0FkZHJlc3MgPSBleHBvcnRzLnNhbWVTdHJpbmcgPSB2b2lkIDA7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmZ1bmN0aW9uIHNhbWVTdHJpbmcoc3RyMSwgc3RyMikge1xuICAgIHJldHVybiBzdHIxLnRvTG93ZXJDYXNlKCkgPT09IHN0cjIudG9Mb3dlckNhc2UoKTtcbn1cbmV4cG9ydHMuc2FtZVN0cmluZyA9IHNhbWVTdHJpbmc7XG5mdW5jdGlvbiBpc1plcm9BZGRyZXNzKGFkZHJlc3MpIHtcbiAgICByZXR1cm4gc2FtZVN0cmluZyhhZGRyZXNzLCBjb25zdGFudHNfMS5aRVJPX0FERFJFU1MpO1xufVxuZXhwb3J0cy5pc1plcm9BZGRyZXNzID0gaXNaZXJvQWRkcmVzcztcbmZ1bmN0aW9uIGlzU2VudGluZWxBZGRyZXNzKGFkZHJlc3MpIHtcbiAgICByZXR1cm4gc2FtZVN0cmluZyhhZGRyZXNzLCBjb25zdGFudHNfMS5TRU5USU5FTF9BRERSRVNTKTtcbn1cbmV4cG9ydHMuaXNTZW50aW5lbEFkZHJlc3MgPSBpc1NlbnRpbmVsQWRkcmVzcztcbmZ1bmN0aW9uIGlzUmVzdHJpY3RlZEFkZHJlc3MoYWRkcmVzcykge1xuICAgIHJldHVybiBpc1plcm9BZGRyZXNzKGFkZHJlc3MpIHx8IGlzU2VudGluZWxBZGRyZXNzKGFkZHJlc3MpO1xufVxuZXhwb3J0cy5pc1Jlc3RyaWN0ZWRBZGRyZXNzID0gaXNSZXN0cmljdGVkQWRkcmVzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZHJlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/address.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SENTINEL_ADDRESS = exports.EMPTY_DATA = exports.ZERO_ADDRESS = void 0;\nexports.ZERO_ADDRESS = `0x${'0'.repeat(40)}`;\nexports.EMPTY_DATA = '0x';\nexports.SENTINEL_ADDRESS = '0x0000000000000000000000000000000000000001';\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRyxrQkFBa0IsR0FBRyxvQkFBb0I7QUFDcEUsb0JBQW9CLFFBQVEsZUFBZTtBQUMzQyxrQkFBa0I7QUFDbEIsd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdXRpbHMvY29uc3RhbnRzLmpzPzU5NDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNFTlRJTkVMX0FERFJFU1MgPSBleHBvcnRzLkVNUFRZX0RBVEEgPSBleHBvcnRzLlpFUk9fQUREUkVTUyA9IHZvaWQgMDtcbmV4cG9ydHMuWkVST19BRERSRVNTID0gYDB4JHsnMCcucmVwZWF0KDQwKX1gO1xuZXhwb3J0cy5FTVBUWV9EQVRBID0gJzB4JztcbmV4cG9ydHMuU0VOVElORUxfQUREUkVTUyA9ICcweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/config.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/config.js ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.networks = void 0;\n// https://github.com/ethereum-lists/chains/tree/master/_data/chains\nexports.networks = [\n    { chainId: 1n, shortName: 'eth' },\n    { chainId: 3n, shortName: 'rop' },\n    { chainId: 4n, shortName: 'rin' },\n    { chainId: 5n, shortName: 'gor' },\n    { chainId: 10n, shortName: 'oeth' },\n    { chainId: 11n, shortName: 'meta' },\n    { chainId: 12n, shortName: 'kal' },\n    { chainId: 18n, shortName: 'tst' },\n    { chainId: 25n, shortName: 'cro' },\n    { chainId: 28n, shortName: 'bobarinkeby' },\n    { chainId: 30n, shortName: 'rsk' },\n    { chainId: 31n, shortName: 'trsk' },\n    { chainId: 39n, shortName: 'u2u' },\n    { chainId: 40n, shortName: 'telosevm' },\n    { chainId: 41n, shortName: 'telosevmtestnet' },\n    { chainId: 42n, shortName: 'kov' },\n    { chainId: 43n, shortName: 'pangolin' },\n    { chainId: 44n, shortName: 'crab' },\n    { chainId: 46n, shortName: 'darwinia' },\n    { chainId: 50n, shortName: 'xdc' },\n    { chainId: 51n, shortName: 'txdc' },\n    { chainId: 56n, shortName: 'bnb' },\n    { chainId: 57n, shortName: 'sys' },\n    { chainId: 61n, shortName: 'etc' },\n    { chainId: 63n, shortName: 'metc' },\n    { chainId: 69n, shortName: 'okov' },\n    { chainId: 71n, shortName: 'cfxtest' },\n    { chainId: 81n, shortName: 'joc' },\n    { chainId: 82n, shortName: 'meter' },\n    { chainId: 83n, shortName: 'meter-test' },\n    { chainId: 88n, shortName: 'tomo' },\n    { chainId: 97n, shortName: 'bnbt' },\n    { chainId: 100n, shortName: 'gno' },\n    { chainId: 106n, shortName: 'vlx' },\n    { chainId: 108n, shortName: 'tt' },\n    { chainId: 109n, shortName: 'shibariumecosystem' },\n    { chainId: 111n, shortName: 'etl' },\n    { chainId: 122n, shortName: 'fuse' },\n    { chainId: 123n, shortName: 'spark' },\n    { chainId: 137n, shortName: 'matic' },\n    { chainId: 148n, shortName: 'shimmerevm' },\n    { chainId: 155n, shortName: 'tenet-testnet' },\n    { chainId: 169n, shortName: 'manta' },\n    { chainId: 179n, shortName: 'abey' },\n    { chainId: 195n, shortName: 'tokb' },\n    { chainId: 196n, shortName: 'okb' },\n    { chainId: 204n, shortName: 'opbnb' },\n    { chainId: 246n, shortName: 'ewt' },\n    { chainId: 250n, shortName: 'ftm' },\n    { chainId: 252n, shortName: 'fraxtal' },\n    { chainId: 255n, shortName: 'kroma' },\n    { chainId: 280n, shortName: 'zksync-goerli' },\n    { chainId: 288n, shortName: 'boba' },\n    { chainId: 291n, shortName: 'orderly' },\n    { chainId: 300n, shortName: 'ogn' },\n    { chainId: 321n, shortName: 'kcs' },\n    { chainId: 322n, shortName: 'kcst' },\n    { chainId: 324n, shortName: 'zksync' },\n    { chainId: 336n, shortName: 'sdn' },\n    { chainId: 338n, shortName: 'tcro' },\n    { chainId: 369n, shortName: 'pls' },\n    { chainId: 420n, shortName: 'ogor' },\n    { chainId: 424n, shortName: 'PGN' },\n    { chainId: 480n, shortName: 'wc' },\n    { chainId: 530n, shortName: 'FxCore' },\n    { chainId: 570n, shortName: 'sys-rollux' },\n    { chainId: 588n, shortName: 'metis-stardust' },\n    { chainId: 592n, shortName: 'astr' },\n    { chainId: 595n, shortName: 'maca' },\n    { chainId: 599n, shortName: 'metis-goerli' },\n    { chainId: 686n, shortName: 'kar' },\n    { chainId: 690n, shortName: 'redstone' },\n    { chainId: 787n, shortName: 'aca' },\n    { chainId: 919n, shortName: 'modesep' },\n    { chainId: 943n, shortName: 't4pls' },\n    { chainId: 1001n, shortName: 'baobab' },\n    { chainId: 1008n, shortName: 'eun' },\n    { chainId: 1030n, shortName: 'cfx' },\n    { chainId: 1088n, shortName: 'metis-andromeda' },\n    { chainId: 1101n, shortName: 'zkevm' },\n    { chainId: 1111n, shortName: 'wemix' },\n    { chainId: 1112n, shortName: 'twemix' },\n    { chainId: 1115n, shortName: 'tcore' },\n    { chainId: 1116n, shortName: 'core' },\n    { chainId: 1135n, shortName: 'lisk' },\n    { chainId: 1230n, shortName: 'UltronTestnet' },\n    { chainId: 1231n, shortName: 'UltronMainnet' },\n    { chainId: 1284n, shortName: 'mbeam' },\n    { chainId: 1285n, shortName: 'mriver' },\n    { chainId: 1287n, shortName: 'mbase' },\n    { chainId: 1294n, shortName: 'bobabeam' },\n    { chainId: 1329n, shortName: 'sei' },\n    { chainId: 1337n, shortName: 'geth' },\n    { chainId: 1442n, shortName: 'testnet-zkEVM-mango' },\n    { chainId: 1559n, shortName: 'tenet' },\n    { chainId: 1625n, shortName: 'gravity' },\n    { chainId: 1663n, shortName: 'Gobi' },\n    { chainId: 1729n, shortName: 'reya' },\n    { chainId: 1807n, shortName: 'rana' },\n    { chainId: 1890n, shortName: 'lightlink_phoenix' },\n    { chainId: 1891n, shortName: 'lightlink_pegasus' },\n    { chainId: 1984n, shortName: 'euntest' },\n    { chainId: 1998n, shortName: 'kyoto-testnet' },\n    { chainId: 2000n, shortName: 'dc' },\n    { chainId: 2001n, shortName: 'milkada' },\n    { chainId: 2002n, shortName: 'milkalgo' },\n    { chainId: 2008n, shortName: 'cloudwalk_testnet' },\n    { chainId: 2019n, shortName: 'pmint_test' },\n    { chainId: 2020n, shortName: 'pmint' },\n    { chainId: 2021n, shortName: 'edg' },\n    { chainId: 2039n, shortName: 'aleph' },\n    { chainId: 2221n, shortName: 'tkava' },\n    { chainId: 2222n, shortName: 'kava' },\n    { chainId: 2331n, shortName: 'rss3-testnet' },\n    { chainId: 2358n, shortName: 'kroma-sepolia' },\n    { chainId: 2810n, shortName: 'hmorph' },\n    { chainId: 3338n, shortName: 'PEAQ' },\n    { chainId: 3636n, shortName: 'BTNX' },\n    { chainId: 3737n, shortName: 'csb' },\n    { chainId: 3776n, shortName: 'astrzk' },\n    { chainId: 4002n, shortName: 'tftm' },\n    { chainId: 4078n, shortName: 'muster' },\n    { chainId: 4157n, shortName: 'crossfi-testnet' },\n    { chainId: 4202n, shortName: 'lisksep' },\n    { chainId: 4337n, shortName: 'beam' },\n    { chainId: 4460n, shortName: 'orderlyl2' },\n    { chainId: 4653n, shortName: 'gold' },\n    { chainId: 4689n, shortName: 'iotex-mainnet' },\n    { chainId: 4918n, shortName: 'txvm' },\n    { chainId: 4919n, shortName: 'xvm' },\n    { chainId: 5000n, shortName: 'mantle' },\n    { chainId: 5001n, shortName: 'mantle-testnet' },\n    { chainId: 5003n, shortName: 'mnt-sep' },\n    { chainId: 5700n, shortName: 'tsys' },\n    { chainId: 6001n, shortName: 'bouncebit-mainnet' },\n    { chainId: 6102n, shortName: 'cascadia' },\n    { chainId: 6321n, shortName: 'eaura' },\n    { chainId: 6322n, shortName: 'aura' },\n    { chainId: 7000n, shortName: 'zetachain-mainnet' },\n    { chainId: 7001n, shortName: 'zetachain-testnet' },\n    { chainId: 7171n, shortName: 'bitrock' },\n    { chainId: 7332n, shortName: 'EON' },\n    { chainId: 7341n, shortName: 'shyft' },\n    { chainId: 7560n, shortName: 'cyeth' },\n    { chainId: 7700n, shortName: 'canto' },\n    { chainId: 7771n, shortName: 'tbitrock' },\n    { chainId: 8192n, shortName: 'tqf' },\n    { chainId: 8194n, shortName: 'ttqf' },\n    { chainId: 8217n, shortName: 'cypress' },\n    { chainId: 8329n, shortName: 'lrz' },\n    { chainId: 8453n, shortName: 'base' },\n    { chainId: 8822n, shortName: 'iotaevm' },\n    { chainId: 9000n, shortName: 'evmos-testnet' },\n    { chainId: 9001n, shortName: 'evmos' },\n    { chainId: 9728n, shortName: 'boba-testnet' },\n    { chainId: 10000n, shortName: 'smartbch' },\n    { chainId: 10001n, shortName: 'smartbchtest' },\n    { chainId: 10081n, shortName: 'joct' },\n    { chainId: 10200n, shortName: 'chi' },\n    { chainId: 10242n, shortName: 'aa' },\n    { chainId: 10243n, shortName: 'aat' },\n    { chainId: 10849n, shortName: 'lamina1' },\n    { chainId: 11111n, shortName: 'WAGMI' },\n    { chainId: 11235n, shortName: 'islm' },\n    { chainId: 11437n, shortName: 'shyftt' },\n    { chainId: 11891n, shortName: 'Arianee' },\n    { chainId: 12324n, shortName: 'l3x' },\n    { chainId: 12325n, shortName: 'l3x-testnet' },\n    { chainId: 12357n, shortName: 'rei-testnet' },\n    { chainId: 12553n, shortName: 'rss3' },\n    { chainId: 13337n, shortName: 'beam-testnet' },\n    { chainId: 13371n, shortName: 'imx' },\n    { chainId: 13473n, shortName: 'imx-testnet' },\n    { chainId: 17000n, shortName: 'holesky' },\n    { chainId: 17069n, shortName: 'garnet' },\n    { chainId: 17172n, shortName: 'eclipse' },\n    { chainId: 18231n, shortName: 'unreal-old' },\n    { chainId: 18233n, shortName: 'unreal' },\n    { chainId: 22776n, shortName: 'mapo' },\n    { chainId: 23294n, shortName: 'sapphire' },\n    { chainId: 23295n, shortName: 'sapphire-testnet' },\n    { chainId: 28979n, shortName: 'kimbonet-testnet' },\n    { chainId: 32769n, shortName: 'zil' },\n    { chainId: 33101n, shortName: 'zil-testnet' },\n    { chainId: 34443n, shortName: 'mode' },\n    { chainId: 42161n, shortName: 'arb1' },\n    { chainId: 42170n, shortName: 'arb-nova' },\n    { chainId: 42220n, shortName: 'celo' },\n    { chainId: 42793n, shortName: 'etlk' },\n    { chainId: 43113n, shortName: 'fuji' },\n    { chainId: 43114n, shortName: 'avax' },\n    { chainId: 43288n, shortName: 'boba-avax' },\n    { chainId: 44787n, shortName: 'alfa' },\n    { chainId: 45000n, shortName: 'autobahnnetwork' },\n    { chainId: 47763n, shortName: 'neox-mainnet' },\n    { chainId: 47805n, shortName: 'rei' },\n    { chainId: 48899n, shortName: 'zircuit-testnet' },\n    { chainId: 53457n, shortName: 'dodochain' },\n    { chainId: 54211n, shortName: 'islmt' },\n    { chainId: 56288n, shortName: 'boba-bnb' },\n    { chainId: 57000n, shortName: 'tsys-rollux' },\n    { chainId: 58008n, shortName: 'sepPGN' },\n    { chainId: 59140n, shortName: 'linea-goerli' },\n    { chainId: 59141n, shortName: 'linea-sepolia' },\n    { chainId: 59144n, shortName: 'linea' },\n    { chainId: 71401n, shortName: 'gw-testnet-v1' },\n    { chainId: 71402n, shortName: 'gw-mainnet-v1' },\n    { chainId: 73799n, shortName: 'vt' },\n    { chainId: 80001n, shortName: 'maticmum' },\n    { chainId: 80002n, shortName: 'polygonamoy' },\n    { chainId: 80084n, shortName: 'berachainbArtio' },\n    { chainId: 80085n, shortName: 'berachainArtio' },\n    { chainId: 81457n, shortName: 'blastmainnet' },\n    { chainId: 83291n, shortName: 'lrz-testnet' },\n    { chainId: 84531n, shortName: 'basegor' },\n    { chainId: 84532n, shortName: 'basesep' },\n    { chainId: 90001n, shortName: 'dhobyghaut' },\n    { chainId: 103454n, shortName: 'masatest' },\n    { chainId: 105105n, shortName: 'stratis' },\n    { chainId: 111188n, shortName: 're-al' },\n    { chainId: 128123n, shortName: 'etlt' },\n    { chainId: 167000n, shortName: 'tko-mainnet' },\n    { chainId: 167008n, shortName: 'tko-katla' },\n    { chainId: 167009n, shortName: 'tko-hekla' },\n    { chainId: 200101n, shortName: 'milktada' },\n    { chainId: 200202n, shortName: 'milktalgo' },\n    { chainId: 200810n, shortName: 'btrt' },\n    { chainId: 205205n, shortName: 'auroria' },\n    { chainId: 333999n, shortName: 'olympus' },\n    { chainId: 421611n, shortName: 'arb-rinkeby' },\n    { chainId: 421613n, shortName: 'arb-goerli' },\n    { chainId: 421614n, shortName: 'arb-sep' },\n    { chainId: 444444n, shortName: 'syndr' },\n    { chainId: 490000n, shortName: 'ATN' },\n    { chainId: 534351n, shortName: 'scr-sepolia' },\n    { chainId: 534352n, shortName: 'scr' },\n    { chainId: 534353n, shortName: 'scr-alpha' },\n    { chainId: 555666n, shortName: 'eclipset' },\n    { chainId: 622277n, shortName: 'rth' },\n    { chainId: 656476n, shortName: 'open-campus-codex' },\n    { chainId: 660279n, shortName: 'xai' },\n    { chainId: 713715n, shortName: 'sei-devnet' },\n    { chainId: 764984n, shortName: 'lamina1test' },\n    { chainId: 810180n, shortName: 'zklink-nova' },\n    { chainId: 978657n, shortName: 'treasure-ruby' },\n    { chainId: 6038361n, shortName: 'azkyt' },\n    { chainId: 7225878n, shortName: 'saakuru' },\n    { chainId: 7777777n, shortName: 'zora' },\n    { chainId: 11155111n, shortName: 'sep' },\n    { chainId: 11155420n, shortName: 'opsep' },\n    { chainId: 12227332n, shortName: 'neox-t4' },\n    { chainId: 94204209n, shortName: 'polygon-blackberry' },\n    { chainId: 111557560n, shortName: 'cysep' },\n    { chainId: 123420111n, shortName: 'opcelestia-raspberry' },\n    { chainId: 161221135n, shortName: 'plume-testnet' },\n    { chainId: 168587773n, shortName: 'blastsepolia' },\n    { chainId: 222000222n, shortName: 'kanazawa' },\n    { chainId: 245022926n, shortName: 'neonevm-devnet' },\n    { chainId: 245022934n, shortName: 'neonevm-mainnet' },\n    { chainId: 333000333n, shortName: 'meld' },\n    { chainId: 476462898n, shortName: 'Skopje' },\n    { chainId: 666666666n, shortName: 'degen-chain' },\n    { chainId: 999999999n, shortName: 'zsep' },\n    { chainId: 1313161554n, shortName: 'aurora' },\n    { chainId: 1313161555n, shortName: 'aurora-testnet' },\n    { chainId: 1666600000n, shortName: 'hmy-s0' },\n    { chainId: 1666700000n, shortName: 'hmy-b-s0' },\n    { chainId: 11297108099n, shortName: 'tpalm' },\n    { chainId: 11297108109n, shortName: 'palm' },\n    { chainId: 37714555429n, shortName: 'xaitestnet' },\n    { chainId: 88153591557n, shortName: 'arb-blueberry' }\n];\nif (process.env.TEST_NETWORK === 'hardhat') {\n    exports.networks.push({ shortName: 'local', chainId: 31337n });\n}\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/index.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/index.js ***!
  \*****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateEip3770Address = exports.validateEthereumAddress = exports.validateEip3770NetworkPrefix = exports.isValidEip3770NetworkPrefix = exports.getEip3770NetworkPrefixFromChainId = exports.parseEip3770Address = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst config_1 = __webpack_require__(/*! ./config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/config.js\");\nfunction parseEip3770Address(fullAddress) {\n    const parts = fullAddress.split(':');\n    const address = parts.length > 1 ? parts[1] : parts[0];\n    const prefix = parts.length > 1 ? parts[0] : '';\n    return { prefix, address };\n}\nexports.parseEip3770Address = parseEip3770Address;\nfunction getEip3770NetworkPrefixFromChainId(chainId) {\n    const network = config_1.networks.find((network) => chainId === network.chainId);\n    if (!network) {\n        throw new Error('No network prefix supported for the current chainId');\n    }\n    return network.shortName;\n}\nexports.getEip3770NetworkPrefixFromChainId = getEip3770NetworkPrefixFromChainId;\nfunction isValidEip3770NetworkPrefix(prefix) {\n    return config_1.networks.some(({ shortName }) => shortName === prefix);\n}\nexports.isValidEip3770NetworkPrefix = isValidEip3770NetworkPrefix;\nfunction validateEip3770NetworkPrefix(prefix, currentChainId) {\n    const isCurrentNetworkPrefix = prefix === getEip3770NetworkPrefixFromChainId(currentChainId);\n    if (!isValidEip3770NetworkPrefix(prefix) || !isCurrentNetworkPrefix) {\n        throw new Error('The network prefix must match the current network');\n    }\n}\nexports.validateEip3770NetworkPrefix = validateEip3770NetworkPrefix;\nfunction validateEthereumAddress(address) {\n    const isValidAddress = ethers_1.ethers.isHexString(address) && ethers_1.ethers.isAddress(address);\n    if (!isValidAddress) {\n        throw new Error(`Invalid Ethereum address ${address}`);\n    }\n}\nexports.validateEthereumAddress = validateEthereumAddress;\nfunction validateEip3770Address(fullAddress, currentChainId) {\n    const { address, prefix } = parseEip3770Address(fullAddress);\n    validateEthereumAddress(address);\n    if (prefix) {\n        validateEip3770NetworkPrefix(prefix, currentChainId);\n    }\n    return { address, prefix };\n}\nexports.validateEip3770Address = validateEip3770Address;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL2VpcC0zNzcwL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QixHQUFHLCtCQUErQixHQUFHLG9DQUFvQyxHQUFHLG1DQUFtQyxHQUFHLDBDQUEwQyxHQUFHLDJCQUEyQjtBQUN4TixpQkFBaUIsbUJBQU8sQ0FBQyxrR0FBUTtBQUNqQyxpQkFBaUIsbUJBQU8sQ0FBQyxzS0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQztBQUMxQztBQUNBLHFDQUFxQyxXQUFXO0FBQ2hEO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQSxvREFBb0QsUUFBUTtBQUM1RDtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsWUFBWSxrQkFBa0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSw4QkFBOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy9laXAtMzc3MC9pbmRleC5qcz80ZDk1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52YWxpZGF0ZUVpcDM3NzBBZGRyZXNzID0gZXhwb3J0cy52YWxpZGF0ZUV0aGVyZXVtQWRkcmVzcyA9IGV4cG9ydHMudmFsaWRhdGVFaXAzNzcwTmV0d29ya1ByZWZpeCA9IGV4cG9ydHMuaXNWYWxpZEVpcDM3NzBOZXR3b3JrUHJlZml4ID0gZXhwb3J0cy5nZXRFaXAzNzcwTmV0d29ya1ByZWZpeEZyb21DaGFpbklkID0gZXhwb3J0cy5wYXJzZUVpcDM3NzBBZGRyZXNzID0gdm9pZCAwO1xuY29uc3QgZXRoZXJzXzEgPSByZXF1aXJlKFwiZXRoZXJzXCIpO1xuY29uc3QgY29uZmlnXzEgPSByZXF1aXJlKFwiLi9jb25maWdcIik7XG5mdW5jdGlvbiBwYXJzZUVpcDM3NzBBZGRyZXNzKGZ1bGxBZGRyZXNzKSB7XG4gICAgY29uc3QgcGFydHMgPSBmdWxsQWRkcmVzcy5zcGxpdCgnOicpO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBwYXJ0cy5sZW5ndGggPiAxID8gcGFydHNbMV0gOiBwYXJ0c1swXTtcbiAgICBjb25zdCBwcmVmaXggPSBwYXJ0cy5sZW5ndGggPiAxID8gcGFydHNbMF0gOiAnJztcbiAgICByZXR1cm4geyBwcmVmaXgsIGFkZHJlc3MgfTtcbn1cbmV4cG9ydHMucGFyc2VFaXAzNzcwQWRkcmVzcyA9IHBhcnNlRWlwMzc3MEFkZHJlc3M7XG5mdW5jdGlvbiBnZXRFaXAzNzcwTmV0d29ya1ByZWZpeEZyb21DaGFpbklkKGNoYWluSWQpIHtcbiAgICBjb25zdCBuZXR3b3JrID0gY29uZmlnXzEubmV0d29ya3MuZmluZCgobmV0d29yaykgPT4gY2hhaW5JZCA9PT0gbmV0d29yay5jaGFpbklkKTtcbiAgICBpZiAoIW5ldHdvcmspIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBuZXR3b3JrIHByZWZpeCBzdXBwb3J0ZWQgZm9yIHRoZSBjdXJyZW50IGNoYWluSWQnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldHdvcmsuc2hvcnROYW1lO1xufVxuZXhwb3J0cy5nZXRFaXAzNzcwTmV0d29ya1ByZWZpeEZyb21DaGFpbklkID0gZ2V0RWlwMzc3ME5ldHdvcmtQcmVmaXhGcm9tQ2hhaW5JZDtcbmZ1bmN0aW9uIGlzVmFsaWRFaXAzNzcwTmV0d29ya1ByZWZpeChwcmVmaXgpIHtcbiAgICByZXR1cm4gY29uZmlnXzEubmV0d29ya3Muc29tZSgoeyBzaG9ydE5hbWUgfSkgPT4gc2hvcnROYW1lID09PSBwcmVmaXgpO1xufVxuZXhwb3J0cy5pc1ZhbGlkRWlwMzc3ME5ldHdvcmtQcmVmaXggPSBpc1ZhbGlkRWlwMzc3ME5ldHdvcmtQcmVmaXg7XG5mdW5jdGlvbiB2YWxpZGF0ZUVpcDM3NzBOZXR3b3JrUHJlZml4KHByZWZpeCwgY3VycmVudENoYWluSWQpIHtcbiAgICBjb25zdCBpc0N1cnJlbnROZXR3b3JrUHJlZml4ID0gcHJlZml4ID09PSBnZXRFaXAzNzcwTmV0d29ya1ByZWZpeEZyb21DaGFpbklkKGN1cnJlbnRDaGFpbklkKTtcbiAgICBpZiAoIWlzVmFsaWRFaXAzNzcwTmV0d29ya1ByZWZpeChwcmVmaXgpIHx8ICFpc0N1cnJlbnROZXR3b3JrUHJlZml4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIG5ldHdvcmsgcHJlZml4IG11c3QgbWF0Y2ggdGhlIGN1cnJlbnQgbmV0d29yaycpO1xuICAgIH1cbn1cbmV4cG9ydHMudmFsaWRhdGVFaXAzNzcwTmV0d29ya1ByZWZpeCA9IHZhbGlkYXRlRWlwMzc3ME5ldHdvcmtQcmVmaXg7XG5mdW5jdGlvbiB2YWxpZGF0ZUV0aGVyZXVtQWRkcmVzcyhhZGRyZXNzKSB7XG4gICAgY29uc3QgaXNWYWxpZEFkZHJlc3MgPSBldGhlcnNfMS5ldGhlcnMuaXNIZXhTdHJpbmcoYWRkcmVzcykgJiYgZXRoZXJzXzEuZXRoZXJzLmlzQWRkcmVzcyhhZGRyZXNzKTtcbiAgICBpZiAoIWlzVmFsaWRBZGRyZXNzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBFdGhlcmV1bSBhZGRyZXNzICR7YWRkcmVzc31gKTtcbiAgICB9XG59XG5leHBvcnRzLnZhbGlkYXRlRXRoZXJldW1BZGRyZXNzID0gdmFsaWRhdGVFdGhlcmV1bUFkZHJlc3M7XG5mdW5jdGlvbiB2YWxpZGF0ZUVpcDM3NzBBZGRyZXNzKGZ1bGxBZGRyZXNzLCBjdXJyZW50Q2hhaW5JZCkge1xuICAgIGNvbnN0IHsgYWRkcmVzcywgcHJlZml4IH0gPSBwYXJzZUVpcDM3NzBBZGRyZXNzKGZ1bGxBZGRyZXNzKTtcbiAgICB2YWxpZGF0ZUV0aGVyZXVtQWRkcmVzcyhhZGRyZXNzKTtcbiAgICBpZiAocHJlZml4KSB7XG4gICAgICAgIHZhbGlkYXRlRWlwMzc3ME5ldHdvcmtQcmVmaXgocHJlZml4LCBjdXJyZW50Q2hhaW5JZCk7XG4gICAgfVxuICAgIHJldHVybiB7IGFkZHJlc3MsIHByZWZpeCB9O1xufVxuZXhwb3J0cy52YWxpZGF0ZUVpcDM3NzBBZGRyZXNzID0gdmFsaWRhdGVFaXAzNzcwQWRkcmVzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-712/index.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-712/index.js ***!
  \****************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.generateTypedData = exports.hashSafeMessage = exports.hashTypedData = exports.getEip712MessageTypes = exports.getEip712TxTypes = exports.EIP712_DOMAIN = exports.EIP712_DOMAIN_BEFORE_V130 = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst satisfies_1 = __importDefault(__webpack_require__(/*! semver/functions/satisfies */ \"(ssr)/./node_modules/.pnpm/semver@7.6.2/node_modules/semver/functions/satisfies.js\"));\nconst EQ_OR_GT_1_3_0 = '>=1.3.0';\nexports.EIP712_DOMAIN_BEFORE_V130 = [\n    {\n        type: 'address',\n        name: 'verifyingContract'\n    }\n];\nexports.EIP712_DOMAIN = [\n    {\n        type: 'uint256',\n        name: 'chainId'\n    },\n    {\n        type: 'address',\n        name: 'verifyingContract'\n    }\n];\n// This function returns the types structure for signing off-chain messages according to EIP-712\nfunction getEip712TxTypes(safeVersion) {\n    const eip712WithChainId = (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_3_0);\n    return {\n        EIP712Domain: eip712WithChainId ? exports.EIP712_DOMAIN : exports.EIP712_DOMAIN_BEFORE_V130,\n        SafeTx: [\n            { type: 'address', name: 'to' },\n            { type: 'uint256', name: 'value' },\n            { type: 'bytes', name: 'data' },\n            { type: 'uint8', name: 'operation' },\n            { type: 'uint256', name: 'safeTxGas' },\n            { type: 'uint256', name: 'baseGas' },\n            { type: 'uint256', name: 'gasPrice' },\n            { type: 'address', name: 'gasToken' },\n            { type: 'address', name: 'refundReceiver' },\n            { type: 'uint256', name: 'nonce' }\n        ]\n    };\n}\nexports.getEip712TxTypes = getEip712TxTypes;\nfunction getEip712MessageTypes(safeVersion) {\n    const eip712WithChainId = (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_3_0);\n    return {\n        EIP712Domain: eip712WithChainId ? exports.EIP712_DOMAIN : exports.EIP712_DOMAIN_BEFORE_V130,\n        SafeMessage: [{ type: 'bytes', name: 'message' }]\n    };\n}\nexports.getEip712MessageTypes = getEip712MessageTypes;\nconst hashTypedData = (typedData) => {\n    // `ethers` doesn't require `EIP712Domain` and otherwise throws\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { EIP712Domain: _, ...types } = typedData.types;\n    return ethers_1.ethers.TypedDataEncoder.hash(typedData.domain, types, typedData.message);\n};\nexports.hashTypedData = hashTypedData;\nconst hashMessage = (message) => {\n    return ethers_1.ethers.hashMessage(message);\n};\nconst hashSafeMessage = (message) => {\n    return typeof message === 'string' ? hashMessage(message) : (0, exports.hashTypedData)(message);\n};\nexports.hashSafeMessage = hashSafeMessage;\nfunction generateTypedData({ safeAddress, safeVersion, chainId, data }) {\n    const isSafeTransactionDataType = data.hasOwnProperty('to');\n    const eip712WithChainId = (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_3_0);\n    let typedData;\n    if (isSafeTransactionDataType) {\n        const txData = data;\n        typedData = {\n            types: getEip712TxTypes(safeVersion),\n            domain: {\n                verifyingContract: safeAddress\n            },\n            primaryType: 'SafeTx',\n            message: {\n                ...txData,\n                value: txData.value,\n                safeTxGas: txData.safeTxGas,\n                baseGas: txData.baseGas,\n                gasPrice: txData.gasPrice,\n                nonce: txData.nonce\n            }\n        };\n    }\n    else {\n        const message = data;\n        typedData = {\n            types: getEip712MessageTypes(safeVersion),\n            domain: {\n                verifyingContract: safeAddress\n            },\n            primaryType: 'SafeMessage',\n            message: { message: (0, exports.hashSafeMessage)(message) }\n        };\n    }\n    if (eip712WithChainId) {\n        typedData.domain.chainId = chainId.toString();\n    }\n    return typedData;\n}\nexports.generateTypedData = generateTypedData;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL2VpcC03MTIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyx1QkFBdUIsR0FBRyxxQkFBcUIsR0FBRyw2QkFBNkIsR0FBRyx3QkFBd0IsR0FBRyxxQkFBcUIsR0FBRyxpQ0FBaUM7QUFDbE0saUJBQWlCLG1CQUFPLENBQUMsa0dBQVE7QUFDakMsb0NBQW9DLG1CQUFPLENBQUMsc0hBQTRCO0FBQ3hFO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDZCQUE2QjtBQUMzQyxjQUFjLGdDQUFnQztBQUM5QyxjQUFjLDZCQUE2QjtBQUMzQyxjQUFjLGtDQUFrQztBQUNoRCxjQUFjLG9DQUFvQztBQUNsRCxjQUFjLGtDQUFrQztBQUNoRCxjQUFjLG1DQUFtQztBQUNqRCxjQUFjLG1DQUFtQztBQUNqRCxjQUFjLHlDQUF5QztBQUN2RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdDQUFnQztBQUN4RDtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLFlBQVksNEJBQTRCO0FBQ3hDO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLDZCQUE2Qix5Q0FBeUM7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy9laXAtNzEyL2luZGV4LmpzP2MwZmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdlbmVyYXRlVHlwZWREYXRhID0gZXhwb3J0cy5oYXNoU2FmZU1lc3NhZ2UgPSBleHBvcnRzLmhhc2hUeXBlZERhdGEgPSBleHBvcnRzLmdldEVpcDcxMk1lc3NhZ2VUeXBlcyA9IGV4cG9ydHMuZ2V0RWlwNzEyVHhUeXBlcyA9IGV4cG9ydHMuRUlQNzEyX0RPTUFJTiA9IGV4cG9ydHMuRUlQNzEyX0RPTUFJTl9CRUZPUkVfVjEzMCA9IHZvaWQgMDtcbmNvbnN0IGV0aGVyc18xID0gcmVxdWlyZShcImV0aGVyc1wiKTtcbmNvbnN0IHNhdGlzZmllc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzZW12ZXIvZnVuY3Rpb25zL3NhdGlzZmllc1wiKSk7XG5jb25zdCBFUV9PUl9HVF8xXzNfMCA9ICc+PTEuMy4wJztcbmV4cG9ydHMuRUlQNzEyX0RPTUFJTl9CRUZPUkVfVjEzMCA9IFtcbiAgICB7XG4gICAgICAgIHR5cGU6ICdhZGRyZXNzJyxcbiAgICAgICAgbmFtZTogJ3ZlcmlmeWluZ0NvbnRyYWN0J1xuICAgIH1cbl07XG5leHBvcnRzLkVJUDcxMl9ET01BSU4gPSBbXG4gICAge1xuICAgICAgICB0eXBlOiAndWludDI1NicsXG4gICAgICAgIG5hbWU6ICdjaGFpbklkJ1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAnYWRkcmVzcycsXG4gICAgICAgIG5hbWU6ICd2ZXJpZnlpbmdDb250cmFjdCdcbiAgICB9XG5dO1xuLy8gVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSB0eXBlcyBzdHJ1Y3R1cmUgZm9yIHNpZ25pbmcgb2ZmLWNoYWluIG1lc3NhZ2VzIGFjY29yZGluZyB0byBFSVAtNzEyXG5mdW5jdGlvbiBnZXRFaXA3MTJUeFR5cGVzKHNhZmVWZXJzaW9uKSB7XG4gICAgY29uc3QgZWlwNzEyV2l0aENoYWluSWQgPSAoMCwgc2F0aXNmaWVzXzEuZGVmYXVsdCkoc2FmZVZlcnNpb24sIEVRX09SX0dUXzFfM18wKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBFSVA3MTJEb21haW46IGVpcDcxMldpdGhDaGFpbklkID8gZXhwb3J0cy5FSVA3MTJfRE9NQUlOIDogZXhwb3J0cy5FSVA3MTJfRE9NQUlOX0JFRk9SRV9WMTMwLFxuICAgICAgICBTYWZlVHg6IFtcbiAgICAgICAgICAgIHsgdHlwZTogJ2FkZHJlc3MnLCBuYW1lOiAndG8nIH0sXG4gICAgICAgICAgICB7IHR5cGU6ICd1aW50MjU2JywgbmFtZTogJ3ZhbHVlJyB9LFxuICAgICAgICAgICAgeyB0eXBlOiAnYnl0ZXMnLCBuYW1lOiAnZGF0YScgfSxcbiAgICAgICAgICAgIHsgdHlwZTogJ3VpbnQ4JywgbmFtZTogJ29wZXJhdGlvbicgfSxcbiAgICAgICAgICAgIHsgdHlwZTogJ3VpbnQyNTYnLCBuYW1lOiAnc2FmZVR4R2FzJyB9LFxuICAgICAgICAgICAgeyB0eXBlOiAndWludDI1NicsIG5hbWU6ICdiYXNlR2FzJyB9LFxuICAgICAgICAgICAgeyB0eXBlOiAndWludDI1NicsIG5hbWU6ICdnYXNQcmljZScgfSxcbiAgICAgICAgICAgIHsgdHlwZTogJ2FkZHJlc3MnLCBuYW1lOiAnZ2FzVG9rZW4nIH0sXG4gICAgICAgICAgICB7IHR5cGU6ICdhZGRyZXNzJywgbmFtZTogJ3JlZnVuZFJlY2VpdmVyJyB9LFxuICAgICAgICAgICAgeyB0eXBlOiAndWludDI1NicsIG5hbWU6ICdub25jZScgfVxuICAgICAgICBdXG4gICAgfTtcbn1cbmV4cG9ydHMuZ2V0RWlwNzEyVHhUeXBlcyA9IGdldEVpcDcxMlR4VHlwZXM7XG5mdW5jdGlvbiBnZXRFaXA3MTJNZXNzYWdlVHlwZXMoc2FmZVZlcnNpb24pIHtcbiAgICBjb25zdCBlaXA3MTJXaXRoQ2hhaW5JZCA9ICgwLCBzYXRpc2ZpZXNfMS5kZWZhdWx0KShzYWZlVmVyc2lvbiwgRVFfT1JfR1RfMV8zXzApO1xuICAgIHJldHVybiB7XG4gICAgICAgIEVJUDcxMkRvbWFpbjogZWlwNzEyV2l0aENoYWluSWQgPyBleHBvcnRzLkVJUDcxMl9ET01BSU4gOiBleHBvcnRzLkVJUDcxMl9ET01BSU5fQkVGT1JFX1YxMzAsXG4gICAgICAgIFNhZmVNZXNzYWdlOiBbeyB0eXBlOiAnYnl0ZXMnLCBuYW1lOiAnbWVzc2FnZScgfV1cbiAgICB9O1xufVxuZXhwb3J0cy5nZXRFaXA3MTJNZXNzYWdlVHlwZXMgPSBnZXRFaXA3MTJNZXNzYWdlVHlwZXM7XG5jb25zdCBoYXNoVHlwZWREYXRhID0gKHR5cGVkRGF0YSkgPT4ge1xuICAgIC8vIGBldGhlcnNgIGRvZXNuJ3QgcmVxdWlyZSBgRUlQNzEyRG9tYWluYCBhbmQgb3RoZXJ3aXNlIHRocm93c1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICBjb25zdCB7IEVJUDcxMkRvbWFpbjogXywgLi4udHlwZXMgfSA9IHR5cGVkRGF0YS50eXBlcztcbiAgICByZXR1cm4gZXRoZXJzXzEuZXRoZXJzLlR5cGVkRGF0YUVuY29kZXIuaGFzaCh0eXBlZERhdGEuZG9tYWluLCB0eXBlcywgdHlwZWREYXRhLm1lc3NhZ2UpO1xufTtcbmV4cG9ydHMuaGFzaFR5cGVkRGF0YSA9IGhhc2hUeXBlZERhdGE7XG5jb25zdCBoYXNoTWVzc2FnZSA9IChtZXNzYWdlKSA9PiB7XG4gICAgcmV0dXJuIGV0aGVyc18xLmV0aGVycy5oYXNoTWVzc2FnZShtZXNzYWdlKTtcbn07XG5jb25zdCBoYXNoU2FmZU1lc3NhZ2UgPSAobWVzc2FnZSkgPT4ge1xuICAgIHJldHVybiB0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycgPyBoYXNoTWVzc2FnZShtZXNzYWdlKSA6ICgwLCBleHBvcnRzLmhhc2hUeXBlZERhdGEpKG1lc3NhZ2UpO1xufTtcbmV4cG9ydHMuaGFzaFNhZmVNZXNzYWdlID0gaGFzaFNhZmVNZXNzYWdlO1xuZnVuY3Rpb24gZ2VuZXJhdGVUeXBlZERhdGEoeyBzYWZlQWRkcmVzcywgc2FmZVZlcnNpb24sIGNoYWluSWQsIGRhdGEgfSkge1xuICAgIGNvbnN0IGlzU2FmZVRyYW5zYWN0aW9uRGF0YVR5cGUgPSBkYXRhLmhhc093blByb3BlcnR5KCd0bycpO1xuICAgIGNvbnN0IGVpcDcxMldpdGhDaGFpbklkID0gKDAsIHNhdGlzZmllc18xLmRlZmF1bHQpKHNhZmVWZXJzaW9uLCBFUV9PUl9HVF8xXzNfMCk7XG4gICAgbGV0IHR5cGVkRGF0YTtcbiAgICBpZiAoaXNTYWZlVHJhbnNhY3Rpb25EYXRhVHlwZSkge1xuICAgICAgICBjb25zdCB0eERhdGEgPSBkYXRhO1xuICAgICAgICB0eXBlZERhdGEgPSB7XG4gICAgICAgICAgICB0eXBlczogZ2V0RWlwNzEyVHhUeXBlcyhzYWZlVmVyc2lvbiksXG4gICAgICAgICAgICBkb21haW46IHtcbiAgICAgICAgICAgICAgICB2ZXJpZnlpbmdDb250cmFjdDogc2FmZUFkZHJlc3NcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwcmltYXJ5VHlwZTogJ1NhZmVUeCcsXG4gICAgICAgICAgICBtZXNzYWdlOiB7XG4gICAgICAgICAgICAgICAgLi4udHhEYXRhLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB0eERhdGEudmFsdWUsXG4gICAgICAgICAgICAgICAgc2FmZVR4R2FzOiB0eERhdGEuc2FmZVR4R2FzLFxuICAgICAgICAgICAgICAgIGJhc2VHYXM6IHR4RGF0YS5iYXNlR2FzLFxuICAgICAgICAgICAgICAgIGdhc1ByaWNlOiB0eERhdGEuZ2FzUHJpY2UsXG4gICAgICAgICAgICAgICAgbm9uY2U6IHR4RGF0YS5ub25jZVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IGRhdGE7XG4gICAgICAgIHR5cGVkRGF0YSA9IHtcbiAgICAgICAgICAgIHR5cGVzOiBnZXRFaXA3MTJNZXNzYWdlVHlwZXMoc2FmZVZlcnNpb24pLFxuICAgICAgICAgICAgZG9tYWluOiB7XG4gICAgICAgICAgICAgICAgdmVyaWZ5aW5nQ29udHJhY3Q6IHNhZmVBZGRyZXNzXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHJpbWFyeVR5cGU6ICdTYWZlTWVzc2FnZScsXG4gICAgICAgICAgICBtZXNzYWdlOiB7IG1lc3NhZ2U6ICgwLCBleHBvcnRzLmhhc2hTYWZlTWVzc2FnZSkobWVzc2FnZSkgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoZWlwNzEyV2l0aENoYWluSWQpIHtcbiAgICAgICAgdHlwZWREYXRhLmRvbWFpbi5jaGFpbklkID0gY2hhaW5JZC50b1N0cmluZygpO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZWREYXRhO1xufVxuZXhwb3J0cy5nZW5lcmF0ZVR5cGVkRGF0YSA9IGdlbmVyYXRlVHlwZWREYXRhO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-712/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/erc-20/index.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/erc-20/index.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createERC20TokenTransferTransaction = exports.isGasTokenCompatibleWithHandlePayment = exports.getERC20Decimals = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nconst ERC20_ABI = [\n    'function transfer(address recipient, uint256 amount) returns (bool)',\n    'function decimals() view returns (uint8)'\n];\n/**\n * Returns the number of decimals of a given ERC-20 token.\n *\n * @async\n * @param {string} tokenAddress - The address of the ERC-20 token.\n * @param {Safe} safe - The Safe object.\n * @returns {Promise<number>} The number of decimals that the token uses.\n * @throws \"Invalid ERC-20 decimals\"\n */\nasync function getERC20Decimals(tokenAddress, safe) {\n    const safeProvider = safe.getSafeProvider();\n    const erc20Interface = new ethers_1.Interface(ERC20_ABI);\n    const getTokenDecimalsTransaction = {\n        to: tokenAddress,\n        from: tokenAddress,\n        value: '0',\n        data: erc20Interface.encodeFunctionData('decimals')\n    };\n    const response = await safeProvider.call(getTokenDecimalsTransaction);\n    const decimals = Number(response);\n    if (Number.isNaN(decimals)) {\n        throw new Error('Invalid ERC-20 decimals');\n    }\n    return decimals;\n}\nexports.getERC20Decimals = getERC20Decimals;\nconst STANDARD_ERC20_DECIMALS = 18;\n/**\n * Checks if the given gas token is compatible with the handlePayment function present in the Safe smart contract.\n * A token is considered compatible if it is a native token or a standard ERC-20 token with 18 decimals.\n *\n * @async\n * @export\n * @param {string} gasToken - The address of the gas token.\n * @param {Safe} safe - The Safe object.\n * @returns {Promise<boolean>} Returns true if the gas token is compatible, otherwise false.\n */\nasync function isGasTokenCompatibleWithHandlePayment(gasToken, safe) {\n    const isNativeToken = gasToken === constants_1.ZERO_ADDRESS;\n    if (isNativeToken) {\n        return true;\n    }\n    // Only ERC20 tokens with the standard 18 decimals are compatible\n    const gasTokenDecimals = await getERC20Decimals(gasToken, safe);\n    const hasTokenStandardERC20Decimals = gasTokenDecimals === STANDARD_ERC20_DECIMALS;\n    return hasTokenStandardERC20Decimals;\n}\nexports.isGasTokenCompatibleWithHandlePayment = isGasTokenCompatibleWithHandlePayment;\n/**\n * Creates a transaction object to perform a transfer of a specified amount of ERC-20 tokens to a given address.\n *\n * @export\n * @param {string} tokenAddress - The address of the ERC-20 token.\n * @param {string} toAddress - The address to which the tokens should be transferred.\n * @param {string} amount - The amount of tokens to transfer.\n * @returns {Transaction} Returns a transaction object that represents the transfer.\n */\nfunction createERC20TokenTransferTransaction(tokenAddress, toAddress, amount) {\n    const erc20Interface = new ethers_1.Interface(ERC20_ABI);\n    const transferTransaction = {\n        to: tokenAddress,\n        value: '0',\n        data: erc20Interface.encodeFunctionData('transfer', [toAddress, amount])\n    };\n    return transferTransaction;\n}\nexports.createERC20TokenTransferTransaction = createERC20TokenTransferTransaction;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL2VyYy0yMC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQ0FBMkMsR0FBRyw2Q0FBNkMsR0FBRyx3QkFBd0I7QUFDdEgsaUJBQWlCLG1CQUFPLENBQUMsa0dBQVE7QUFDakMsb0JBQW9CLG1CQUFPLENBQUMsb0tBQWM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLE1BQU07QUFDakIsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsTUFBTTtBQUNqQixhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdXRpbHMvZXJjLTIwL2luZGV4LmpzPzZjNDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUVSQzIwVG9rZW5UcmFuc2ZlclRyYW5zYWN0aW9uID0gZXhwb3J0cy5pc0dhc1Rva2VuQ29tcGF0aWJsZVdpdGhIYW5kbGVQYXltZW50ID0gZXhwb3J0cy5nZXRFUkMyMERlY2ltYWxzID0gdm9pZCAwO1xuY29uc3QgZXRoZXJzXzEgPSByZXF1aXJlKFwiZXRoZXJzXCIpO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzXCIpO1xuY29uc3QgRVJDMjBfQUJJID0gW1xuICAgICdmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHJlY2lwaWVudCwgdWludDI1NiBhbW91bnQpIHJldHVybnMgKGJvb2wpJyxcbiAgICAnZnVuY3Rpb24gZGVjaW1hbHMoKSB2aWV3IHJldHVybnMgKHVpbnQ4KSdcbl07XG4vKipcbiAqIFJldHVybnMgdGhlIG51bWJlciBvZiBkZWNpbWFscyBvZiBhIGdpdmVuIEVSQy0yMCB0b2tlbi5cbiAqXG4gKiBAYXN5bmNcbiAqIEBwYXJhbSB7c3RyaW5nfSB0b2tlbkFkZHJlc3MgLSBUaGUgYWRkcmVzcyBvZiB0aGUgRVJDLTIwIHRva2VuLlxuICogQHBhcmFtIHtTYWZlfSBzYWZlIC0gVGhlIFNhZmUgb2JqZWN0LlxuICogQHJldHVybnMge1Byb21pc2U8bnVtYmVyPn0gVGhlIG51bWJlciBvZiBkZWNpbWFscyB0aGF0IHRoZSB0b2tlbiB1c2VzLlxuICogQHRocm93cyBcIkludmFsaWQgRVJDLTIwIGRlY2ltYWxzXCJcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZ2V0RVJDMjBEZWNpbWFscyh0b2tlbkFkZHJlc3MsIHNhZmUpIHtcbiAgICBjb25zdCBzYWZlUHJvdmlkZXIgPSBzYWZlLmdldFNhZmVQcm92aWRlcigpO1xuICAgIGNvbnN0IGVyYzIwSW50ZXJmYWNlID0gbmV3IGV0aGVyc18xLkludGVyZmFjZShFUkMyMF9BQkkpO1xuICAgIGNvbnN0IGdldFRva2VuRGVjaW1hbHNUcmFuc2FjdGlvbiA9IHtcbiAgICAgICAgdG86IHRva2VuQWRkcmVzcyxcbiAgICAgICAgZnJvbTogdG9rZW5BZGRyZXNzLFxuICAgICAgICB2YWx1ZTogJzAnLFxuICAgICAgICBkYXRhOiBlcmMyMEludGVyZmFjZS5lbmNvZGVGdW5jdGlvbkRhdGEoJ2RlY2ltYWxzJylcbiAgICB9O1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgc2FmZVByb3ZpZGVyLmNhbGwoZ2V0VG9rZW5EZWNpbWFsc1RyYW5zYWN0aW9uKTtcbiAgICBjb25zdCBkZWNpbWFscyA9IE51bWJlcihyZXNwb25zZSk7XG4gICAgaWYgKE51bWJlci5pc05hTihkZWNpbWFscykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEVSQy0yMCBkZWNpbWFscycpO1xuICAgIH1cbiAgICByZXR1cm4gZGVjaW1hbHM7XG59XG5leHBvcnRzLmdldEVSQzIwRGVjaW1hbHMgPSBnZXRFUkMyMERlY2ltYWxzO1xuY29uc3QgU1RBTkRBUkRfRVJDMjBfREVDSU1BTFMgPSAxODtcbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBnYXMgdG9rZW4gaXMgY29tcGF0aWJsZSB3aXRoIHRoZSBoYW5kbGVQYXltZW50IGZ1bmN0aW9uIHByZXNlbnQgaW4gdGhlIFNhZmUgc21hcnQgY29udHJhY3QuXG4gKiBBIHRva2VuIGlzIGNvbnNpZGVyZWQgY29tcGF0aWJsZSBpZiBpdCBpcyBhIG5hdGl2ZSB0b2tlbiBvciBhIHN0YW5kYXJkIEVSQy0yMCB0b2tlbiB3aXRoIDE4IGRlY2ltYWxzLlxuICpcbiAqIEBhc3luY1xuICogQGV4cG9ydFxuICogQHBhcmFtIHtzdHJpbmd9IGdhc1Rva2VuIC0gVGhlIGFkZHJlc3Mgb2YgdGhlIGdhcyB0b2tlbi5cbiAqIEBwYXJhbSB7U2FmZX0gc2FmZSAtIFRoZSBTYWZlIG9iamVjdC5cbiAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIHRydWUgaWYgdGhlIGdhcyB0b2tlbiBpcyBjb21wYXRpYmxlLCBvdGhlcndpc2UgZmFsc2UuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGlzR2FzVG9rZW5Db21wYXRpYmxlV2l0aEhhbmRsZVBheW1lbnQoZ2FzVG9rZW4sIHNhZmUpIHtcbiAgICBjb25zdCBpc05hdGl2ZVRva2VuID0gZ2FzVG9rZW4gPT09IGNvbnN0YW50c18xLlpFUk9fQUREUkVTUztcbiAgICBpZiAoaXNOYXRpdmVUb2tlbikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgLy8gT25seSBFUkMyMCB0b2tlbnMgd2l0aCB0aGUgc3RhbmRhcmQgMTggZGVjaW1hbHMgYXJlIGNvbXBhdGlibGVcbiAgICBjb25zdCBnYXNUb2tlbkRlY2ltYWxzID0gYXdhaXQgZ2V0RVJDMjBEZWNpbWFscyhnYXNUb2tlbiwgc2FmZSk7XG4gICAgY29uc3QgaGFzVG9rZW5TdGFuZGFyZEVSQzIwRGVjaW1hbHMgPSBnYXNUb2tlbkRlY2ltYWxzID09PSBTVEFOREFSRF9FUkMyMF9ERUNJTUFMUztcbiAgICByZXR1cm4gaGFzVG9rZW5TdGFuZGFyZEVSQzIwRGVjaW1hbHM7XG59XG5leHBvcnRzLmlzR2FzVG9rZW5Db21wYXRpYmxlV2l0aEhhbmRsZVBheW1lbnQgPSBpc0dhc1Rva2VuQ29tcGF0aWJsZVdpdGhIYW5kbGVQYXltZW50O1xuLyoqXG4gKiBDcmVhdGVzIGEgdHJhbnNhY3Rpb24gb2JqZWN0IHRvIHBlcmZvcm0gYSB0cmFuc2ZlciBvZiBhIHNwZWNpZmllZCBhbW91bnQgb2YgRVJDLTIwIHRva2VucyB0byBhIGdpdmVuIGFkZHJlc3MuXG4gKlxuICogQGV4cG9ydFxuICogQHBhcmFtIHtzdHJpbmd9IHRva2VuQWRkcmVzcyAtIFRoZSBhZGRyZXNzIG9mIHRoZSBFUkMtMjAgdG9rZW4uXG4gKiBAcGFyYW0ge3N0cmluZ30gdG9BZGRyZXNzIC0gVGhlIGFkZHJlc3MgdG8gd2hpY2ggdGhlIHRva2VucyBzaG91bGQgYmUgdHJhbnNmZXJyZWQuXG4gKiBAcGFyYW0ge3N0cmluZ30gYW1vdW50IC0gVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gdHJhbnNmZXIuXG4gKiBAcmV0dXJucyB7VHJhbnNhY3Rpb259IFJldHVybnMgYSB0cmFuc2FjdGlvbiBvYmplY3QgdGhhdCByZXByZXNlbnRzIHRoZSB0cmFuc2Zlci5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlRVJDMjBUb2tlblRyYW5zZmVyVHJhbnNhY3Rpb24odG9rZW5BZGRyZXNzLCB0b0FkZHJlc3MsIGFtb3VudCkge1xuICAgIGNvbnN0IGVyYzIwSW50ZXJmYWNlID0gbmV3IGV0aGVyc18xLkludGVyZmFjZShFUkMyMF9BQkkpO1xuICAgIGNvbnN0IHRyYW5zZmVyVHJhbnNhY3Rpb24gPSB7XG4gICAgICAgIHRvOiB0b2tlbkFkZHJlc3MsXG4gICAgICAgIHZhbHVlOiAnMCcsXG4gICAgICAgIGRhdGE6IGVyYzIwSW50ZXJmYWNlLmVuY29kZUZ1bmN0aW9uRGF0YSgndHJhbnNmZXInLCBbdG9BZGRyZXNzLCBhbW91bnRdKVxuICAgIH07XG4gICAgcmV0dXJuIHRyYW5zZmVyVHJhbnNhY3Rpb247XG59XG5leHBvcnRzLmNyZWF0ZUVSQzIwVG9rZW5UcmFuc2ZlclRyYW5zYWN0aW9uID0gY3JlYXRlRVJDMjBUb2tlblRyYW5zZmVyVHJhbnNhY3Rpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/erc-20/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js ***!
  \********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./address */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/address.js\"), exports);\n__exportStar(__webpack_require__(/*! ./eip-3770 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./eip-712 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-712/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./safeVersions */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/safeVersions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./signatures */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./transactions */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./passkeys */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQywrSkFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsdUtBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLHFLQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyx5S0FBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLDJLQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQywrS0FBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLHVLQUFZO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdXRpbHMvaW5kZXguanM/NDE1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FkZHJlc3NcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VpcC0zNzcwXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9laXAtNzEyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zYWZlVmVyc2lvbnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NpZ25hdHVyZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYW5zYWN0aW9uc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGFzc2tleXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/memoized.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/memoized.js ***!
  \***********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createMemoizedFunction = void 0;\nconst SafeProvider_1 = __importDefault(__webpack_require__(/*! ../SafeProvider */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js\"));\nfunction createMemoizedFunction(callback, cache = {}) {\n    const replacer = createSafeContractSerializerReplacer();\n    return (...args) => {\n        const key = JSON.stringify(args, replacer);\n        cache[key] = cache[key] || callback(...args);\n        return cache[key];\n    };\n}\nexports.createMemoizedFunction = createMemoizedFunction;\n// EIP1193 providers from web3.currentProvider and hre.network.provider fail to serialize BigInts\nfunction createSafeContractSerializerReplacer() {\n    const seen = new Set();\n    return (_, value) => {\n        // Serialize Bigints as strings\n        if (typeof value === 'bigint') {\n            return value.toString();\n        }\n        // Avoid circular references\n        if (value instanceof SafeProvider_1.default && value !== null) {\n            if (seen.has(value)) {\n                return undefined;\n            }\n            seen.add(value);\n            return {\n                $safeProvider: {\n                    provider: typeof value.provider === 'object' ? 'EIP1193Provider' : value.provider,\n                    signer: value.signer\n                }\n            };\n        }\n        return value;\n    };\n}\n//# sourceMappingURL=memoized.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL21lbW9pemVkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLHVDQUF1QyxtQkFBTyxDQUFDLG9LQUFpQjtBQUNoRSxvREFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy9tZW1vaXplZC5qcz8wNjExIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVNZW1vaXplZEZ1bmN0aW9uID0gdm9pZCAwO1xuY29uc3QgU2FmZVByb3ZpZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL1NhZmVQcm92aWRlclwiKSk7XG5mdW5jdGlvbiBjcmVhdGVNZW1vaXplZEZ1bmN0aW9uKGNhbGxiYWNrLCBjYWNoZSA9IHt9KSB7XG4gICAgY29uc3QgcmVwbGFjZXIgPSBjcmVhdGVTYWZlQ29udHJhY3RTZXJpYWxpemVyUmVwbGFjZXIoKTtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgY29uc3Qga2V5ID0gSlNPTi5zdHJpbmdpZnkoYXJncywgcmVwbGFjZXIpO1xuICAgICAgICBjYWNoZVtrZXldID0gY2FjaGVba2V5XSB8fCBjYWxsYmFjayguLi5hcmdzKTtcbiAgICAgICAgcmV0dXJuIGNhY2hlW2tleV07XG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlTWVtb2l6ZWRGdW5jdGlvbiA9IGNyZWF0ZU1lbW9pemVkRnVuY3Rpb247XG4vLyBFSVAxMTkzIHByb3ZpZGVycyBmcm9tIHdlYjMuY3VycmVudFByb3ZpZGVyIGFuZCBocmUubmV0d29yay5wcm92aWRlciBmYWlsIHRvIHNlcmlhbGl6ZSBCaWdJbnRzXG5mdW5jdGlvbiBjcmVhdGVTYWZlQ29udHJhY3RTZXJpYWxpemVyUmVwbGFjZXIoKSB7XG4gICAgY29uc3Qgc2VlbiA9IG5ldyBTZXQoKTtcbiAgICByZXR1cm4gKF8sIHZhbHVlKSA9PiB7XG4gICAgICAgIC8vIFNlcmlhbGl6ZSBCaWdpbnRzIGFzIHN0cmluZ3NcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2JpZ2ludCcpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEF2b2lkIGNpcmN1bGFyIHJlZmVyZW5jZXNcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgU2FmZVByb3ZpZGVyXzEuZGVmYXVsdCAmJiB2YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHNlZW4uaGFzKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWVuLmFkZCh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICRzYWZlUHJvdmlkZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZXI6IHR5cGVvZiB2YWx1ZS5wcm92aWRlciA9PT0gJ29iamVjdCcgPyAnRUlQMTE5M1Byb3ZpZGVyJyA6IHZhbHVlLnByb3ZpZGVyLFxuICAgICAgICAgICAgICAgICAgICBzaWduZXI6IHZhbHVlLnNpZ25lclxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZW1vaXplZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/memoized.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/messages/SafeMessage.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/messages/SafeMessage.js ***!
  \***********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst signatures_1 = __webpack_require__(/*! ../signatures */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/index.js\");\nclass EthSafeMessage {\n    constructor(data) {\n        this.signatures = new Map();\n        this.data = data;\n    }\n    getSignature(signer) {\n        return this.signatures.get(signer.toLowerCase());\n    }\n    addSignature(signature) {\n        this.signatures.set(signature.signer.toLowerCase(), signature);\n    }\n    encodedSignatures() {\n        return (0, signatures_1.buildSignatureBytes)(Array.from(this.signatures.values()));\n    }\n}\nexports[\"default\"] = EthSafeMessage;\n//# sourceMappingURL=SafeMessage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL21lc3NhZ2VzL1NhZmVNZXNzYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixtQkFBTyxDQUFDLDRLQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy9tZXNzYWdlcy9TYWZlTWVzc2FnZS5qcz82YjM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgc2lnbmF0dXJlc18xID0gcmVxdWlyZShcIi4uL3NpZ25hdHVyZXNcIik7XG5jbGFzcyBFdGhTYWZlTWVzc2FnZSB7XG4gICAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgICAgICB0aGlzLnNpZ25hdHVyZXMgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgfVxuICAgIGdldFNpZ25hdHVyZShzaWduZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2lnbmF0dXJlcy5nZXQoc2lnbmVyLnRvTG93ZXJDYXNlKCkpO1xuICAgIH1cbiAgICBhZGRTaWduYXR1cmUoc2lnbmF0dXJlKSB7XG4gICAgICAgIHRoaXMuc2lnbmF0dXJlcy5zZXQoc2lnbmF0dXJlLnNpZ25lci50b0xvd2VyQ2FzZSgpLCBzaWduYXR1cmUpO1xuICAgIH1cbiAgICBlbmNvZGVkU2lnbmF0dXJlcygpIHtcbiAgICAgICAgcmV0dXJuICgwLCBzaWduYXR1cmVzXzEuYnVpbGRTaWduYXR1cmVCeXRlcykoQXJyYXkuZnJvbSh0aGlzLnNpZ25hdHVyZXMudmFsdWVzKCkpKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBFdGhTYWZlTWVzc2FnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNhZmVNZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/messages/SafeMessage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/PasskeySigner.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/PasskeySigner.js ***!
  \*************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst extractPasskeyData_1 = __webpack_require__(/*! ./extractPasskeyData */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/extractPasskeyData.js\");\nconst isSharedSigner_1 = __importDefault(__webpack_require__(/*! ./isSharedSigner */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/isSharedSigner.js\"));\n/**\n * Represents a Signer that is created using a passkey.\n * This class extends the AbstractSigner to implement signer functionalities.\n *\n * @extends {AbstractSigner}\n */\nclass PasskeySigner extends ethers_1.AbstractSigner {\n    constructor(passkey, safeWebAuthnSignerFactoryContract, safeWebAuthnSharedSignerContract, provider, chainId, signerAddress) {\n        super(provider);\n        const { rawId, coordinates, customVerifierAddress } = passkey;\n        this.chainId = chainId;\n        this.passkeyRawId = (0, extractPasskeyData_1.hexStringToUint8Array)(rawId);\n        this.coordinates = coordinates;\n        this.signerAddress = signerAddress;\n        this.safeWebAuthnSignerFactoryContract = safeWebAuthnSignerFactoryContract;\n        this.safeWebAuthnSharedSignerContract = safeWebAuthnSharedSignerContract;\n        this.verifierAddress = customVerifierAddress || (0, extractPasskeyData_1.getDefaultFCLP256VerifierAddress)(chainId);\n    }\n    static async init(passkey, safeWebAuthnSignerFactoryContract, safeWebAuthnSharedSignerContract, provider, safeAddress, owners, chainId) {\n        const { coordinates, customVerifierAddress } = passkey;\n        const verifierAddress = customVerifierAddress || (0, extractPasskeyData_1.getDefaultFCLP256VerifierAddress)(chainId);\n        let signerAddress;\n        const isPasskeySharedSigner = await (0, isSharedSigner_1.default)(passkey, safeWebAuthnSharedSignerContract, safeAddress, owners, chainId);\n        if (isPasskeySharedSigner) {\n            signerAddress = await safeWebAuthnSharedSignerContract.getAddress();\n        }\n        else {\n            ;\n            [signerAddress] = await safeWebAuthnSignerFactoryContract.getSigner([\n                BigInt(coordinates.x),\n                BigInt(coordinates.y),\n                BigInt(verifierAddress)\n            ]);\n        }\n        return new PasskeySigner(passkey, safeWebAuthnSignerFactoryContract, safeWebAuthnSharedSignerContract, provider, chainId, signerAddress);\n    }\n    /**\n     * Returns the address associated with the passkey signer.\n     * @returns {Promise<string>} A promise that resolves to the signer's address.\n     */\n    async getAddress() {\n        return this.signerAddress;\n    }\n    /**\n     * Encodes the createSigner contract function.\n     * @returns {string} The encoded data to create a signer.\n     */\n    encodeCreateSigner() {\n        return this.safeWebAuthnSignerFactoryContract.encode('createSigner', [\n            BigInt(this.coordinates.x),\n            BigInt(this.coordinates.y),\n            BigInt(this.verifierAddress)\n        ]);\n    }\n    /**\n     * Signs the provided data using the passkey.\n     * @param {Uint8Array} data - The data to be signed.\n     * @returns {Promise<string>} A promise that resolves to the signed data.\n     */\n    async sign(data) {\n        const assertion = (await navigator.credentials.get({\n            publicKey: {\n                challenge: data,\n                allowCredentials: [{ type: 'public-key', id: this.passkeyRawId }],\n                userVerification: 'required'\n            }\n        }));\n        if (!assertion?.response?.authenticatorData) {\n            throw new Error('Failed to sign data with passkey Signer');\n        }\n        const { authenticatorData, signature, clientDataJSON } = assertion.response;\n        return ethers_1.ethers.AbiCoder.defaultAbiCoder().encode(['bytes', 'bytes', 'uint256[2]'], [\n            new Uint8Array(authenticatorData),\n            extractClientDataFields(clientDataJSON),\n            extractSignature(signature)\n        ]);\n    }\n    connect(provider) {\n        const passkey = {\n            rawId: Buffer.from(this.passkeyRawId).toString('hex'),\n            coordinates: this.coordinates,\n            customVerifierAddress: this.verifierAddress\n        };\n        return new PasskeySigner(passkey, this.safeWebAuthnSignerFactoryContract, this.safeWebAuthnSharedSignerContract, provider, this.chainId, this.signerAddress);\n    }\n    signTransaction() {\n        throw new Error('Passkey Signers cannot sign transactions, they can only sign data.');\n    }\n    signMessage(message) {\n        if (typeof message === 'string') {\n            return this.sign(ethers_1.ethers.getBytes(message));\n        }\n        return this.sign(message);\n    }\n    signTypedData() {\n        throw new Error('Passkey Signers cannot sign signTypedData, they can only sign data.');\n    }\n}\nexports[\"default\"] = PasskeySigner;\n/**\n * Compute the additional client data JSON fields. This is the fields other than `type` and\n * `challenge` (including `origin` and any other additional client data fields that may be\n * added by the authenticator).\n *\n * See <https://w3c.github.io/webauthn/#clientdatajson-serialization>\n *\n * @param {ArrayBuffer} clientDataJSON - The client data JSON.\n * @returns {string} A hex string of the additional fields from the client data JSON.\n * @throws {Error} Throws an error if the client data JSON does not contain the expected 'challenge' field pattern.\n */\nfunction extractClientDataFields(clientDataJSON) {\n    const decodedClientDataJSON = new TextDecoder('utf-8').decode(clientDataJSON);\n    const match = decodedClientDataJSON.match(/^\\{\"type\":\"webauthn.get\",\"challenge\":\"[A-Za-z0-9\\-_]{43}\",(.*)\\}$/);\n    if (!match) {\n        throw new Error('challenge not found in client data JSON');\n    }\n    const [, fields] = match;\n    return ethers_1.ethers.hexlify(ethers_1.ethers.toUtf8Bytes(fields));\n}\n/**\n * Extracts the numeric values r and s from a DER-encoded ECDSA signature.\n * This function decodes the signature based on a specific format and validates the encoding at each step.\n *\n * @param {ArrayBuffer} signature - The DER-encoded signature to be decoded.\n * @returns {[bigint, bigint]} A tuple containing two BigInt values, r and s, which are the numeric values extracted from the signature.\n * @throws {Error} Throws an error if the signature encoding is invalid or does not meet expected conditions.\n */\nfunction extractSignature(signature) {\n    const check = (x) => {\n        if (!x) {\n            throw new Error('invalid signature encoding');\n        }\n    };\n    // Decode the DER signature. Note that we assume that all lengths fit into 8-bit integers,\n    // which is true for the kinds of signatures we are decoding but generally false. I.e. this\n    // code should not be used in any serious application.\n    const view = new DataView(signature);\n    // check that the sequence header is valid\n    check(view.getUint8(0) === 0x30);\n    check(view.getUint8(1) === view.byteLength - 2);\n    // read r and s\n    const readInt = (offset) => {\n        check(view.getUint8(offset) === 0x02);\n        const len = view.getUint8(offset + 1);\n        const start = offset + 2;\n        const end = start + len;\n        const n = BigInt(ethers_1.ethers.hexlify(new Uint8Array(view.buffer.slice(start, end))));\n        check(n < ethers_1.ethers.MaxUint256);\n        return [n, end];\n    };\n    const [r, sOffset] = readInt(2);\n    const [s] = readInt(sOffset);\n    return [r, s];\n}\n//# sourceMappingURL=PasskeySigner.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/PasskeySigner.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/createPasskeyDeploymentTransaction.js":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/createPasskeyDeploymentTransaction.js ***!
  \**********************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nconst SafeProvider_1 = __importDefault(__webpack_require__(/*! ../../SafeProvider */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js\"));\n/**\n * Creates the deployment transaction to create a passkey signer.\n *\n * @param {Safe} safe The protocol-kit instance of the current Safe\n * @param {PasskeyArgType} passkey The passkey object\n * @returns {Promise<{ to: string; value: string; data: string; }>} The deployment transaction to create a passkey signer.\n */\nasync function createPasskeyDeploymentTransaction(safe, passkey) {\n    const safeVersion = await safe.getContractVersion();\n    const safeAddress = await safe.getAddress();\n    const owners = await safe.getOwners();\n    const safePasskeyProvider = await SafeProvider_1.default.init(safe.getSafeProvider().provider, passkey, safeVersion, safe.getContractManager().contractNetworks, safeAddress, owners);\n    const passkeySigner = (await safePasskeyProvider.getExternalSigner());\n    const passkeyAddress = await passkeySigner.getAddress();\n    const provider = safe.getSafeProvider().getExternalProvider();\n    const isPasskeyDeployed = (await provider.getCode(passkeyAddress)) !== constants_1.EMPTY_DATA;\n    if (isPasskeyDeployed) {\n        throw new Error('Passkey Signer contract already deployed');\n    }\n    const passkeySignerDeploymentTransaction = {\n        to: await passkeySigner.safeWebAuthnSignerFactoryContract.getAddress(),\n        value: '0',\n        data: passkeySigner.encodeCreateSigner()\n    };\n    return passkeySignerDeploymentTransaction;\n}\nexports[\"default\"] = createPasskeyDeploymentTransaction;\n//# sourceMappingURL=createPasskeyDeploymentTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3Bhc3NrZXlzL2NyZWF0ZVBhc3NrZXlEZXBsb3ltZW50VHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsbUJBQU8sQ0FBQyxvS0FBYztBQUMxQyx1Q0FBdUMsbUJBQU8sQ0FBQyx1S0FBb0I7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsZ0JBQWdCO0FBQzNCLGFBQWEsVUFBVSxZQUFZLGVBQWUsZUFBZSxHQUFHO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdXRpbHMvcGFzc2tleXMvY3JlYXRlUGFzc2tleURlcGxveW1lbnRUcmFuc2FjdGlvbi5qcz9hOTA3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzXCIpO1xuY29uc3QgU2FmZVByb3ZpZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uLy4uL1NhZmVQcm92aWRlclwiKSk7XG4vKipcbiAqIENyZWF0ZXMgdGhlIGRlcGxveW1lbnQgdHJhbnNhY3Rpb24gdG8gY3JlYXRlIGEgcGFzc2tleSBzaWduZXIuXG4gKlxuICogQHBhcmFtIHtTYWZlfSBzYWZlIFRoZSBwcm90b2NvbC1raXQgaW5zdGFuY2Ugb2YgdGhlIGN1cnJlbnQgU2FmZVxuICogQHBhcmFtIHtQYXNza2V5QXJnVHlwZX0gcGFzc2tleSBUaGUgcGFzc2tleSBvYmplY3RcbiAqIEByZXR1cm5zIHtQcm9taXNlPHsgdG86IHN0cmluZzsgdmFsdWU6IHN0cmluZzsgZGF0YTogc3RyaW5nOyB9Pn0gVGhlIGRlcGxveW1lbnQgdHJhbnNhY3Rpb24gdG8gY3JlYXRlIGEgcGFzc2tleSBzaWduZXIuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVBhc3NrZXlEZXBsb3ltZW50VHJhbnNhY3Rpb24oc2FmZSwgcGFzc2tleSkge1xuICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gYXdhaXQgc2FmZS5nZXRDb250cmFjdFZlcnNpb24oKTtcbiAgICBjb25zdCBzYWZlQWRkcmVzcyA9IGF3YWl0IHNhZmUuZ2V0QWRkcmVzcygpO1xuICAgIGNvbnN0IG93bmVycyA9IGF3YWl0IHNhZmUuZ2V0T3duZXJzKCk7XG4gICAgY29uc3Qgc2FmZVBhc3NrZXlQcm92aWRlciA9IGF3YWl0IFNhZmVQcm92aWRlcl8xLmRlZmF1bHQuaW5pdChzYWZlLmdldFNhZmVQcm92aWRlcigpLnByb3ZpZGVyLCBwYXNza2V5LCBzYWZlVmVyc2lvbiwgc2FmZS5nZXRDb250cmFjdE1hbmFnZXIoKS5jb250cmFjdE5ldHdvcmtzLCBzYWZlQWRkcmVzcywgb3duZXJzKTtcbiAgICBjb25zdCBwYXNza2V5U2lnbmVyID0gKGF3YWl0IHNhZmVQYXNza2V5UHJvdmlkZXIuZ2V0RXh0ZXJuYWxTaWduZXIoKSk7XG4gICAgY29uc3QgcGFzc2tleUFkZHJlc3MgPSBhd2FpdCBwYXNza2V5U2lnbmVyLmdldEFkZHJlc3MoKTtcbiAgICBjb25zdCBwcm92aWRlciA9IHNhZmUuZ2V0U2FmZVByb3ZpZGVyKCkuZ2V0RXh0ZXJuYWxQcm92aWRlcigpO1xuICAgIGNvbnN0IGlzUGFzc2tleURlcGxveWVkID0gKGF3YWl0IHByb3ZpZGVyLmdldENvZGUocGFzc2tleUFkZHJlc3MpKSAhPT0gY29uc3RhbnRzXzEuRU1QVFlfREFUQTtcbiAgICBpZiAoaXNQYXNza2V5RGVwbG95ZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQYXNza2V5IFNpZ25lciBjb250cmFjdCBhbHJlYWR5IGRlcGxveWVkJyk7XG4gICAgfVxuICAgIGNvbnN0IHBhc3NrZXlTaWduZXJEZXBsb3ltZW50VHJhbnNhY3Rpb24gPSB7XG4gICAgICAgIHRvOiBhd2FpdCBwYXNza2V5U2lnbmVyLnNhZmVXZWJBdXRoblNpZ25lckZhY3RvcnlDb250cmFjdC5nZXRBZGRyZXNzKCksXG4gICAgICAgIHZhbHVlOiAnMCcsXG4gICAgICAgIGRhdGE6IHBhc3NrZXlTaWduZXIuZW5jb2RlQ3JlYXRlU2lnbmVyKClcbiAgICB9O1xuICAgIHJldHVybiBwYXNza2V5U2lnbmVyRGVwbG95bWVudFRyYW5zYWN0aW9uO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUGFzc2tleURlcGxveW1lbnRUcmFuc2FjdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZVBhc3NrZXlEZXBsb3ltZW50VHJhbnNhY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/createPasskeyDeploymentTransaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/extractPasskeyData.js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/extractPasskeyData.js ***!
  \******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getDefaultFCLP256VerifierAddress = exports.hexStringToUint8Array = exports.extractPasskeyCoordinates = exports.extractPasskeyData = void 0;\nconst safe_modules_deployments_1 = __webpack_require__(/*! @safe-global/safe-modules-deployments */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-modules-deployments@2.2.1/node_modules/@safe-global/safe-modules-deployments/dist/index.js\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\n/**\n * Extracts and returns the passkey data (coordinates and rawId) from a given passkey Credential.\n *\n * @param {Credential} passkeyCredential - The passkey credential generated via `navigator.credentials.create()` using correct parameters.\n * @returns {Promise<PasskeyArgType>} A promise that resolves to an object containing the coordinates and the rawId derived from the passkey.\n * @throws {Error} Throws an error if the coordinates could not be extracted\n */\nasync function extractPasskeyData(passkeyCredential) {\n    const passkey = passkeyCredential;\n    const attestationResponse = passkey.response;\n    const publicKey = attestationResponse.getPublicKey();\n    if (!publicKey) {\n        throw new Error('Failed to generate passkey Coordinates. getPublicKey() failed');\n    }\n    const coordinates = await extractPasskeyCoordinates(publicKey);\n    const rawId = buffer_1.Buffer.from(passkey.rawId).toString('hex');\n    return {\n        rawId,\n        coordinates\n    };\n}\nexports.extractPasskeyData = extractPasskeyData;\n/**\n * Extracts and returns coordinates from a given passkey public key.\n *\n * @param {ArrayBuffer} publicKey - The public key of the passkey from which coordinates will be extracted.\n * @returns {Promise<PasskeyCoordinates>} A promise that resolves to an object containing the coordinates derived from the public key of the passkey.\n * @throws {Error} Throws an error if the coordinates could not be extracted via `crypto.subtle.exportKey()`\n */\nasync function extractPasskeyCoordinates(publicKey) {\n    const algorithm = {\n        name: 'ECDSA',\n        namedCurve: 'P-256',\n        hash: { name: 'SHA-256' }\n    };\n    const key = await crypto.subtle.importKey('spki', publicKey, algorithm, true, ['verify']);\n    const { x, y } = await crypto.subtle.exportKey('jwk', key);\n    const isValidCoordinates = !!x && !!y;\n    if (!isValidCoordinates) {\n        throw new Error('Failed to generate passkey Coordinates. crypto.subtle.exportKey() failed');\n    }\n    return {\n        x: '0x' + buffer_1.Buffer.from(x, 'base64').toString('hex'),\n        y: '0x' + buffer_1.Buffer.from(y, 'base64').toString('hex')\n    };\n}\nexports.extractPasskeyCoordinates = extractPasskeyCoordinates;\n// FIXME use Viem `hexToBytes`\nfunction hexStringToUint8Array(hexString) {\n    const arr = [];\n    for (let i = 0; i < hexString.length; i += 2) {\n        arr.push(parseInt(hexString.substr(i, 2), 16));\n    }\n    return new Uint8Array(arr);\n}\nexports.hexStringToUint8Array = hexStringToUint8Array;\nfunction getDefaultFCLP256VerifierAddress(chainId) {\n    const network = BigInt(chainId).toString();\n    const FCLP256VerifierDeployment = (0, safe_modules_deployments_1.getFCLP256VerifierDeployment)({\n        version: '0.2.0',\n        released: true,\n        network\n    });\n    const verifierAddress = FCLP256VerifierDeployment?.networkAddresses[network];\n    if (!verifierAddress) {\n        throw new Error('FCLP256Verifier address not found');\n    }\n    return verifierAddress;\n}\nexports.getDefaultFCLP256VerifierAddress = getDefaultFCLP256VerifierAddress;\n//# sourceMappingURL=extractPasskeyData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3Bhc3NrZXlzL2V4dHJhY3RQYXNza2V5RGF0YS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3Q0FBd0MsR0FBRyw2QkFBNkIsR0FBRyxpQ0FBaUMsR0FBRywwQkFBMEI7QUFDekksbUNBQW1DLG1CQUFPLENBQUMsc0xBQXVDO0FBQ2xGLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhLHlCQUF5QjtBQUN0QyxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixhQUFhLDZCQUE2QjtBQUMxQyxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy9wYXNza2V5cy9leHRyYWN0UGFzc2tleURhdGEuanM/ZDI2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0RGVmYXVsdEZDTFAyNTZWZXJpZmllckFkZHJlc3MgPSBleHBvcnRzLmhleFN0cmluZ1RvVWludDhBcnJheSA9IGV4cG9ydHMuZXh0cmFjdFBhc3NrZXlDb29yZGluYXRlcyA9IGV4cG9ydHMuZXh0cmFjdFBhc3NrZXlEYXRhID0gdm9pZCAwO1xuY29uc3Qgc2FmZV9tb2R1bGVzX2RlcGxveW1lbnRzXzEgPSByZXF1aXJlKFwiQHNhZmUtZ2xvYmFsL3NhZmUtbW9kdWxlcy1kZXBsb3ltZW50c1wiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbi8qKlxuICogRXh0cmFjdHMgYW5kIHJldHVybnMgdGhlIHBhc3NrZXkgZGF0YSAoY29vcmRpbmF0ZXMgYW5kIHJhd0lkKSBmcm9tIGEgZ2l2ZW4gcGFzc2tleSBDcmVkZW50aWFsLlxuICpcbiAqIEBwYXJhbSB7Q3JlZGVudGlhbH0gcGFzc2tleUNyZWRlbnRpYWwgLSBUaGUgcGFzc2tleSBjcmVkZW50aWFsIGdlbmVyYXRlZCB2aWEgYG5hdmlnYXRvci5jcmVkZW50aWFscy5jcmVhdGUoKWAgdXNpbmcgY29ycmVjdCBwYXJhbWV0ZXJzLlxuICogQHJldHVybnMge1Byb21pc2U8UGFzc2tleUFyZ1R5cGU+fSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgY29vcmRpbmF0ZXMgYW5kIHRoZSByYXdJZCBkZXJpdmVkIGZyb20gdGhlIHBhc3NrZXkuXG4gKiBAdGhyb3dzIHtFcnJvcn0gVGhyb3dzIGFuIGVycm9yIGlmIHRoZSBjb29yZGluYXRlcyBjb3VsZCBub3QgYmUgZXh0cmFjdGVkXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RQYXNza2V5RGF0YShwYXNza2V5Q3JlZGVudGlhbCkge1xuICAgIGNvbnN0IHBhc3NrZXkgPSBwYXNza2V5Q3JlZGVudGlhbDtcbiAgICBjb25zdCBhdHRlc3RhdGlvblJlc3BvbnNlID0gcGFzc2tleS5yZXNwb25zZTtcbiAgICBjb25zdCBwdWJsaWNLZXkgPSBhdHRlc3RhdGlvblJlc3BvbnNlLmdldFB1YmxpY0tleSgpO1xuICAgIGlmICghcHVibGljS2V5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGdlbmVyYXRlIHBhc3NrZXkgQ29vcmRpbmF0ZXMuIGdldFB1YmxpY0tleSgpIGZhaWxlZCcpO1xuICAgIH1cbiAgICBjb25zdCBjb29yZGluYXRlcyA9IGF3YWl0IGV4dHJhY3RQYXNza2V5Q29vcmRpbmF0ZXMocHVibGljS2V5KTtcbiAgICBjb25zdCByYXdJZCA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHBhc3NrZXkucmF3SWQpLnRvU3RyaW5nKCdoZXgnKTtcbiAgICByZXR1cm4ge1xuICAgICAgICByYXdJZCxcbiAgICAgICAgY29vcmRpbmF0ZXNcbiAgICB9O1xufVxuZXhwb3J0cy5leHRyYWN0UGFzc2tleURhdGEgPSBleHRyYWN0UGFzc2tleURhdGE7XG4vKipcbiAqIEV4dHJhY3RzIGFuZCByZXR1cm5zIGNvb3JkaW5hdGVzIGZyb20gYSBnaXZlbiBwYXNza2V5IHB1YmxpYyBrZXkuXG4gKlxuICogQHBhcmFtIHtBcnJheUJ1ZmZlcn0gcHVibGljS2V5IC0gVGhlIHB1YmxpYyBrZXkgb2YgdGhlIHBhc3NrZXkgZnJvbSB3aGljaCBjb29yZGluYXRlcyB3aWxsIGJlIGV4dHJhY3RlZC5cbiAqIEByZXR1cm5zIHtQcm9taXNlPFBhc3NrZXlDb29yZGluYXRlcz59IEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBjb29yZGluYXRlcyBkZXJpdmVkIGZyb20gdGhlIHB1YmxpYyBrZXkgb2YgdGhlIHBhc3NrZXkuXG4gKiBAdGhyb3dzIHtFcnJvcn0gVGhyb3dzIGFuIGVycm9yIGlmIHRoZSBjb29yZGluYXRlcyBjb3VsZCBub3QgYmUgZXh0cmFjdGVkIHZpYSBgY3J5cHRvLnN1YnRsZS5leHBvcnRLZXkoKWBcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZXh0cmFjdFBhc3NrZXlDb29yZGluYXRlcyhwdWJsaWNLZXkpIHtcbiAgICBjb25zdCBhbGdvcml0aG0gPSB7XG4gICAgICAgIG5hbWU6ICdFQ0RTQScsXG4gICAgICAgIG5hbWVkQ3VydmU6ICdQLTI1NicsXG4gICAgICAgIGhhc2g6IHsgbmFtZTogJ1NIQS0yNTYnIH1cbiAgICB9O1xuICAgIGNvbnN0IGtleSA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KCdzcGtpJywgcHVibGljS2V5LCBhbGdvcml0aG0sIHRydWUsIFsndmVyaWZ5J10pO1xuICAgIGNvbnN0IHsgeCwgeSB9ID0gYXdhaXQgY3J5cHRvLnN1YnRsZS5leHBvcnRLZXkoJ2p3aycsIGtleSk7XG4gICAgY29uc3QgaXNWYWxpZENvb3JkaW5hdGVzID0gISF4ICYmICEheTtcbiAgICBpZiAoIWlzVmFsaWRDb29yZGluYXRlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBnZW5lcmF0ZSBwYXNza2V5IENvb3JkaW5hdGVzLiBjcnlwdG8uc3VidGxlLmV4cG9ydEtleSgpIGZhaWxlZCcpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB4OiAnMHgnICsgYnVmZmVyXzEuQnVmZmVyLmZyb20oeCwgJ2Jhc2U2NCcpLnRvU3RyaW5nKCdoZXgnKSxcbiAgICAgICAgeTogJzB4JyArIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHksICdiYXNlNjQnKS50b1N0cmluZygnaGV4JylcbiAgICB9O1xufVxuZXhwb3J0cy5leHRyYWN0UGFzc2tleUNvb3JkaW5hdGVzID0gZXh0cmFjdFBhc3NrZXlDb29yZGluYXRlcztcbi8vIEZJWE1FIHVzZSBWaWVtIGBoZXhUb0J5dGVzYFxuZnVuY3Rpb24gaGV4U3RyaW5nVG9VaW50OEFycmF5KGhleFN0cmluZykge1xuICAgIGNvbnN0IGFyciA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaGV4U3RyaW5nLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgICAgIGFyci5wdXNoKHBhcnNlSW50KGhleFN0cmluZy5zdWJzdHIoaSwgMiksIDE2KSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShhcnIpO1xufVxuZXhwb3J0cy5oZXhTdHJpbmdUb1VpbnQ4QXJyYXkgPSBoZXhTdHJpbmdUb1VpbnQ4QXJyYXk7XG5mdW5jdGlvbiBnZXREZWZhdWx0RkNMUDI1NlZlcmlmaWVyQWRkcmVzcyhjaGFpbklkKSB7XG4gICAgY29uc3QgbmV0d29yayA9IEJpZ0ludChjaGFpbklkKS50b1N0cmluZygpO1xuICAgIGNvbnN0IEZDTFAyNTZWZXJpZmllckRlcGxveW1lbnQgPSAoMCwgc2FmZV9tb2R1bGVzX2RlcGxveW1lbnRzXzEuZ2V0RkNMUDI1NlZlcmlmaWVyRGVwbG95bWVudCkoe1xuICAgICAgICB2ZXJzaW9uOiAnMC4yLjAnLFxuICAgICAgICByZWxlYXNlZDogdHJ1ZSxcbiAgICAgICAgbmV0d29ya1xuICAgIH0pO1xuICAgIGNvbnN0IHZlcmlmaWVyQWRkcmVzcyA9IEZDTFAyNTZWZXJpZmllckRlcGxveW1lbnQ/Lm5ldHdvcmtBZGRyZXNzZXNbbmV0d29ya107XG4gICAgaWYgKCF2ZXJpZmllckFkZHJlc3MpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGQ0xQMjU2VmVyaWZpZXIgYWRkcmVzcyBub3QgZm91bmQnKTtcbiAgICB9XG4gICAgcmV0dXJuIHZlcmlmaWVyQWRkcmVzcztcbn1cbmV4cG9ydHMuZ2V0RGVmYXVsdEZDTFAyNTZWZXJpZmllckFkZHJlc3MgPSBnZXREZWZhdWx0RkNMUDI1NlZlcmlmaWVyQWRkcmVzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4dHJhY3RQYXNza2V5RGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/extractPasskeyData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/getPasskeyOwnerAddress.js":
/*!**********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/getPasskeyOwnerAddress.js ***!
  \**********************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst SafeProvider_1 = __importDefault(__webpack_require__(/*! ../../SafeProvider */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js\"));\n/**\n * Returns the owner address associated with the specific passkey.\n *\n * @param {Safe} safe The protocol-kit instance of the current Safe\n * @param {PasskeyArgType} passkey The passkey to check the owner address\n * @returns {Promise<string>} Returns the passkey owner address associated with the passkey\n */\nasync function getPasskeyOwnerAddress(safe, passkey) {\n    const safeVersion = await safe.getContractVersion();\n    const safeAddress = await safe.getAddress();\n    const owners = await safe.getOwners();\n    const safePasskeyProvider = await SafeProvider_1.default.init(safe.getSafeProvider().provider, passkey, safeVersion, safe.getContractManager().contractNetworks, safeAddress, owners);\n    const passkeySigner = await safePasskeyProvider.getExternalSigner();\n    const passkeyOwnerAddress = await passkeySigner.getAddress();\n    return passkeyOwnerAddress;\n}\nexports[\"default\"] = getPasskeyOwnerAddress;\n//# sourceMappingURL=getPasskeyOwnerAddress.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3Bhc3NrZXlzL2dldFBhc3NrZXlPd25lckFkZHJlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUMsbUJBQU8sQ0FBQyx1S0FBb0I7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsZ0JBQWdCO0FBQzNCLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3Bhc3NrZXlzL2dldFBhc3NrZXlPd25lckFkZHJlc3MuanM/NjEyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFNhZmVQcm92aWRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9TYWZlUHJvdmlkZXJcIikpO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBvd25lciBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgc3BlY2lmaWMgcGFzc2tleS5cbiAqXG4gKiBAcGFyYW0ge1NhZmV9IHNhZmUgVGhlIHByb3RvY29sLWtpdCBpbnN0YW5jZSBvZiB0aGUgY3VycmVudCBTYWZlXG4gKiBAcGFyYW0ge1Bhc3NrZXlBcmdUeXBlfSBwYXNza2V5IFRoZSBwYXNza2V5IHRvIGNoZWNrIHRoZSBvd25lciBhZGRyZXNzXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSBSZXR1cm5zIHRoZSBwYXNza2V5IG93bmVyIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBwYXNza2V5XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGdldFBhc3NrZXlPd25lckFkZHJlc3Moc2FmZSwgcGFzc2tleSkge1xuICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gYXdhaXQgc2FmZS5nZXRDb250cmFjdFZlcnNpb24oKTtcbiAgICBjb25zdCBzYWZlQWRkcmVzcyA9IGF3YWl0IHNhZmUuZ2V0QWRkcmVzcygpO1xuICAgIGNvbnN0IG93bmVycyA9IGF3YWl0IHNhZmUuZ2V0T3duZXJzKCk7XG4gICAgY29uc3Qgc2FmZVBhc3NrZXlQcm92aWRlciA9IGF3YWl0IFNhZmVQcm92aWRlcl8xLmRlZmF1bHQuaW5pdChzYWZlLmdldFNhZmVQcm92aWRlcigpLnByb3ZpZGVyLCBwYXNza2V5LCBzYWZlVmVyc2lvbiwgc2FmZS5nZXRDb250cmFjdE1hbmFnZXIoKS5jb250cmFjdE5ldHdvcmtzLCBzYWZlQWRkcmVzcywgb3duZXJzKTtcbiAgICBjb25zdCBwYXNza2V5U2lnbmVyID0gYXdhaXQgc2FmZVBhc3NrZXlQcm92aWRlci5nZXRFeHRlcm5hbFNpZ25lcigpO1xuICAgIGNvbnN0IHBhc3NrZXlPd25lckFkZHJlc3MgPSBhd2FpdCBwYXNza2V5U2lnbmVyLmdldEFkZHJlc3MoKTtcbiAgICByZXR1cm4gcGFzc2tleU93bmVyQWRkcmVzcztcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGdldFBhc3NrZXlPd25lckFkZHJlc3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRQYXNza2V5T3duZXJBZGRyZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/getPasskeyOwnerAddress.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/index.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/index.js ***!
  \*****************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./extractPasskeyData */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/extractPasskeyData.js\"), exports);\n__exportStar(__webpack_require__(/*! ./PasskeySigner */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/PasskeySigner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./getPasskeyOwnerAddress */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/getPasskeyOwnerAddress.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3Bhc3NrZXlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyw4TEFBc0I7QUFDM0MsYUFBYSxtQkFBTyxDQUFDLG9MQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMsc01BQTBCO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdXRpbHMvcGFzc2tleXMvaW5kZXguanM/Y2FlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V4dHJhY3RQYXNza2V5RGF0YVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUGFzc2tleVNpZ25lclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZ2V0UGFzc2tleU93bmVyQWRkcmVzc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/isSharedSigner.js":
/*!**************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/isSharedSigner.js ***!
  \**************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst extractPasskeyData_1 = __webpack_require__(/*! ./extractPasskeyData */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/extractPasskeyData.js\");\n/**\n * Returns true if the passkey signer is a shared signer\n * @returns {Promise<string>} A promise that resolves to the signer's address.\n */\nasync function isSharedSigner(passkey, safeWebAuthnSharedSignerContract, safeAddress, owners, chainId) {\n    const sharedSignerContractAddress = await safeWebAuthnSharedSignerContract.getAddress();\n    // is a shared signer if the shared signer contract address is present in the owners and its configured in the Safe slot\n    if (safeAddress && owners.includes(sharedSignerContractAddress)) {\n        const [sharedSignerSlot] = await safeWebAuthnSharedSignerContract.getConfiguration([\n            safeAddress\n        ]);\n        const { x, y, verifiers } = sharedSignerSlot;\n        const passkeyVerifierAddress = passkey.customVerifierAddress || (0, extractPasskeyData_1.getDefaultFCLP256VerifierAddress)(chainId.toString());\n        const isSharedSigner = BigInt(passkey.coordinates.x) === x &&\n            BigInt(passkey.coordinates.y) === y &&\n            BigInt(passkeyVerifierAddress) === verifiers;\n        return isSharedSigner;\n    }\n    return false;\n}\nexports[\"default\"] = isSharedSigner;\n//# sourceMappingURL=isSharedSigner.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3Bhc3NrZXlzL2lzU2hhcmVkU2lnbmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QixtQkFBTyxDQUFDLDhMQUFzQjtBQUMzRDtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixrQkFBa0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy9wYXNza2V5cy9pc1NoYXJlZFNpZ25lci5qcz85NjU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXh0cmFjdFBhc3NrZXlEYXRhXzEgPSByZXF1aXJlKFwiLi9leHRyYWN0UGFzc2tleURhdGFcIik7XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgcGFzc2tleSBzaWduZXIgaXMgYSBzaGFyZWQgc2lnbmVyXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgc2lnbmVyJ3MgYWRkcmVzcy5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gaXNTaGFyZWRTaWduZXIocGFzc2tleSwgc2FmZVdlYkF1dGhuU2hhcmVkU2lnbmVyQ29udHJhY3QsIHNhZmVBZGRyZXNzLCBvd25lcnMsIGNoYWluSWQpIHtcbiAgICBjb25zdCBzaGFyZWRTaWduZXJDb250cmFjdEFkZHJlc3MgPSBhd2FpdCBzYWZlV2ViQXV0aG5TaGFyZWRTaWduZXJDb250cmFjdC5nZXRBZGRyZXNzKCk7XG4gICAgLy8gaXMgYSBzaGFyZWQgc2lnbmVyIGlmIHRoZSBzaGFyZWQgc2lnbmVyIGNvbnRyYWN0IGFkZHJlc3MgaXMgcHJlc2VudCBpbiB0aGUgb3duZXJzIGFuZCBpdHMgY29uZmlndXJlZCBpbiB0aGUgU2FmZSBzbG90XG4gICAgaWYgKHNhZmVBZGRyZXNzICYmIG93bmVycy5pbmNsdWRlcyhzaGFyZWRTaWduZXJDb250cmFjdEFkZHJlc3MpKSB7XG4gICAgICAgIGNvbnN0IFtzaGFyZWRTaWduZXJTbG90XSA9IGF3YWl0IHNhZmVXZWJBdXRoblNoYXJlZFNpZ25lckNvbnRyYWN0LmdldENvbmZpZ3VyYXRpb24oW1xuICAgICAgICAgICAgc2FmZUFkZHJlc3NcbiAgICAgICAgXSk7XG4gICAgICAgIGNvbnN0IHsgeCwgeSwgdmVyaWZpZXJzIH0gPSBzaGFyZWRTaWduZXJTbG90O1xuICAgICAgICBjb25zdCBwYXNza2V5VmVyaWZpZXJBZGRyZXNzID0gcGFzc2tleS5jdXN0b21WZXJpZmllckFkZHJlc3MgfHwgKDAsIGV4dHJhY3RQYXNza2V5RGF0YV8xLmdldERlZmF1bHRGQ0xQMjU2VmVyaWZpZXJBZGRyZXNzKShjaGFpbklkLnRvU3RyaW5nKCkpO1xuICAgICAgICBjb25zdCBpc1NoYXJlZFNpZ25lciA9IEJpZ0ludChwYXNza2V5LmNvb3JkaW5hdGVzLngpID09PSB4ICYmXG4gICAgICAgICAgICBCaWdJbnQocGFzc2tleS5jb29yZGluYXRlcy55KSA9PT0geSAmJlxuICAgICAgICAgICAgQmlnSW50KHBhc3NrZXlWZXJpZmllckFkZHJlc3MpID09PSB2ZXJpZmllcnM7XG4gICAgICAgIHJldHVybiBpc1NoYXJlZFNpZ25lcjtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gaXNTaGFyZWRTaWduZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1NoYXJlZFNpZ25lci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/passkeys/isSharedSigner.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/safeVersions.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/safeVersions.js ***!
  \***************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSafeContractCompatibleWithSimulateAndRevert = exports.isSafeContractCompatibleWithRequiredTxGas = exports.hasSafeFeature = exports.SAFE_FEATURES = void 0;\nconst satisfies_1 = __importDefault(__webpack_require__(/*! semver/functions/satisfies */ \"(ssr)/./node_modules/.pnpm/semver@7.6.2/node_modules/semver/functions/satisfies.js\"));\nvar SAFE_FEATURES;\n(function (SAFE_FEATURES) {\n    SAFE_FEATURES[\"SAFE_TX_GAS_OPTIONAL\"] = \"SAFE_TX_GAS_OPTIONAL\";\n    SAFE_FEATURES[\"SAFE_TX_GUARDS\"] = \"SAFE_TX_GUARDS\";\n    SAFE_FEATURES[\"SAFE_FALLBACK_HANDLER\"] = \"SAFE_FALLBACK_HANDLER\";\n    SAFE_FEATURES[\"ETH_SIGN\"] = \"ETH_SIGN\";\n    SAFE_FEATURES[\"ACCOUNT_ABSTRACTION\"] = \"ACCOUNT_ABSTRACTION\";\n    SAFE_FEATURES[\"REQUIRED_TXGAS\"] = \"REQUIRED_TXGAS\";\n    SAFE_FEATURES[\"SIMULATE_AND_REVERT\"] = \"SIMULATE_AND_REVERT\";\n    SAFE_FEATURES[\"PASSKEY_SIGNER\"] = \"PASSKEY_SIGNER\";\n    SAFE_FEATURES[\"SAFE_L2_CONTRACTS\"] = \"SAFE_L2_CONTRACTS\";\n})(SAFE_FEATURES || (exports.SAFE_FEATURES = SAFE_FEATURES = {}));\nconst SAFE_FEATURES_BY_VERSION = {\n    [SAFE_FEATURES.SAFE_TX_GAS_OPTIONAL]: '>=1.3.0',\n    [SAFE_FEATURES.SAFE_TX_GUARDS]: '>=1.3.0',\n    [SAFE_FEATURES.SAFE_FALLBACK_HANDLER]: '>=1.1.1',\n    [SAFE_FEATURES.ETH_SIGN]: '>=1.1.0',\n    [SAFE_FEATURES.ACCOUNT_ABSTRACTION]: '>=1.3.0',\n    [SAFE_FEATURES.REQUIRED_TXGAS]: '<=1.2.0',\n    [SAFE_FEATURES.SIMULATE_AND_REVERT]: '>=1.3.0',\n    [SAFE_FEATURES.PASSKEY_SIGNER]: '>=1.3.0',\n    [SAFE_FEATURES.SAFE_L2_CONTRACTS]: '>=1.3.0'\n};\nconst hasSafeFeature = (feature, version) => {\n    if (!(feature in SAFE_FEATURES_BY_VERSION)) {\n        return false;\n    }\n    return (0, satisfies_1.default)(version, SAFE_FEATURES_BY_VERSION[feature]);\n};\nexports.hasSafeFeature = hasSafeFeature;\nasync function isSafeContractCompatibleWithRequiredTxGas(safeContract) {\n    const safeVersion = await safeContract.getVersion();\n    if (!(0, exports.hasSafeFeature)(SAFE_FEATURES.REQUIRED_TXGAS, safeVersion)) {\n        throw new Error('Current version of the Safe does not support the requiredTxGas functionality');\n    }\n    return safeContract;\n}\nexports.isSafeContractCompatibleWithRequiredTxGas = isSafeContractCompatibleWithRequiredTxGas;\nasync function isSafeContractCompatibleWithSimulateAndRevert(safeContract) {\n    const safeVersion = await safeContract.getVersion();\n    if (!(0, exports.hasSafeFeature)(SAFE_FEATURES.SIMULATE_AND_REVERT, safeVersion)) {\n        throw new Error('Current version of the Safe does not support the simulateAndRevert functionality');\n    }\n    return safeContract;\n}\nexports.isSafeContractCompatibleWithSimulateAndRevert = isSafeContractCompatibleWithSimulateAndRevert;\n//# sourceMappingURL=safeVersions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3NhZmVWZXJzaW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFEQUFxRCxHQUFHLGlEQUFpRCxHQUFHLHNCQUFzQixHQUFHLHFCQUFxQjtBQUMxSixvQ0FBb0MsbUJBQU8sQ0FBQyxzSEFBNEI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0JBQW9CLHFCQUFxQixxQkFBcUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3NhZmVWZXJzaW9ucy5qcz8yZjcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1NhZmVDb250cmFjdENvbXBhdGlibGVXaXRoU2ltdWxhdGVBbmRSZXZlcnQgPSBleHBvcnRzLmlzU2FmZUNvbnRyYWN0Q29tcGF0aWJsZVdpdGhSZXF1aXJlZFR4R2FzID0gZXhwb3J0cy5oYXNTYWZlRmVhdHVyZSA9IGV4cG9ydHMuU0FGRV9GRUFUVVJFUyA9IHZvaWQgMDtcbmNvbnN0IHNhdGlzZmllc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzZW12ZXIvZnVuY3Rpb25zL3NhdGlzZmllc1wiKSk7XG52YXIgU0FGRV9GRUFUVVJFUztcbihmdW5jdGlvbiAoU0FGRV9GRUFUVVJFUykge1xuICAgIFNBRkVfRkVBVFVSRVNbXCJTQUZFX1RYX0dBU19PUFRJT05BTFwiXSA9IFwiU0FGRV9UWF9HQVNfT1BUSU9OQUxcIjtcbiAgICBTQUZFX0ZFQVRVUkVTW1wiU0FGRV9UWF9HVUFSRFNcIl0gPSBcIlNBRkVfVFhfR1VBUkRTXCI7XG4gICAgU0FGRV9GRUFUVVJFU1tcIlNBRkVfRkFMTEJBQ0tfSEFORExFUlwiXSA9IFwiU0FGRV9GQUxMQkFDS19IQU5ETEVSXCI7XG4gICAgU0FGRV9GRUFUVVJFU1tcIkVUSF9TSUdOXCJdID0gXCJFVEhfU0lHTlwiO1xuICAgIFNBRkVfRkVBVFVSRVNbXCJBQ0NPVU5UX0FCU1RSQUNUSU9OXCJdID0gXCJBQ0NPVU5UX0FCU1RSQUNUSU9OXCI7XG4gICAgU0FGRV9GRUFUVVJFU1tcIlJFUVVJUkVEX1RYR0FTXCJdID0gXCJSRVFVSVJFRF9UWEdBU1wiO1xuICAgIFNBRkVfRkVBVFVSRVNbXCJTSU1VTEFURV9BTkRfUkVWRVJUXCJdID0gXCJTSU1VTEFURV9BTkRfUkVWRVJUXCI7XG4gICAgU0FGRV9GRUFUVVJFU1tcIlBBU1NLRVlfU0lHTkVSXCJdID0gXCJQQVNTS0VZX1NJR05FUlwiO1xuICAgIFNBRkVfRkVBVFVSRVNbXCJTQUZFX0wyX0NPTlRSQUNUU1wiXSA9IFwiU0FGRV9MMl9DT05UUkFDVFNcIjtcbn0pKFNBRkVfRkVBVFVSRVMgfHwgKGV4cG9ydHMuU0FGRV9GRUFUVVJFUyA9IFNBRkVfRkVBVFVSRVMgPSB7fSkpO1xuY29uc3QgU0FGRV9GRUFUVVJFU19CWV9WRVJTSU9OID0ge1xuICAgIFtTQUZFX0ZFQVRVUkVTLlNBRkVfVFhfR0FTX09QVElPTkFMXTogJz49MS4zLjAnLFxuICAgIFtTQUZFX0ZFQVRVUkVTLlNBRkVfVFhfR1VBUkRTXTogJz49MS4zLjAnLFxuICAgIFtTQUZFX0ZFQVRVUkVTLlNBRkVfRkFMTEJBQ0tfSEFORExFUl06ICc+PTEuMS4xJyxcbiAgICBbU0FGRV9GRUFUVVJFUy5FVEhfU0lHTl06ICc+PTEuMS4wJyxcbiAgICBbU0FGRV9GRUFUVVJFUy5BQ0NPVU5UX0FCU1RSQUNUSU9OXTogJz49MS4zLjAnLFxuICAgIFtTQUZFX0ZFQVRVUkVTLlJFUVVJUkVEX1RYR0FTXTogJzw9MS4yLjAnLFxuICAgIFtTQUZFX0ZFQVRVUkVTLlNJTVVMQVRFX0FORF9SRVZFUlRdOiAnPj0xLjMuMCcsXG4gICAgW1NBRkVfRkVBVFVSRVMuUEFTU0tFWV9TSUdORVJdOiAnPj0xLjMuMCcsXG4gICAgW1NBRkVfRkVBVFVSRVMuU0FGRV9MMl9DT05UUkFDVFNdOiAnPj0xLjMuMCdcbn07XG5jb25zdCBoYXNTYWZlRmVhdHVyZSA9IChmZWF0dXJlLCB2ZXJzaW9uKSA9PiB7XG4gICAgaWYgKCEoZmVhdHVyZSBpbiBTQUZFX0ZFQVRVUkVTX0JZX1ZFUlNJT04pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBzYXRpc2ZpZXNfMS5kZWZhdWx0KSh2ZXJzaW9uLCBTQUZFX0ZFQVRVUkVTX0JZX1ZFUlNJT05bZmVhdHVyZV0pO1xufTtcbmV4cG9ydHMuaGFzU2FmZUZlYXR1cmUgPSBoYXNTYWZlRmVhdHVyZTtcbmFzeW5jIGZ1bmN0aW9uIGlzU2FmZUNvbnRyYWN0Q29tcGF0aWJsZVdpdGhSZXF1aXJlZFR4R2FzKHNhZmVDb250cmFjdCkge1xuICAgIGNvbnN0IHNhZmVWZXJzaW9uID0gYXdhaXQgc2FmZUNvbnRyYWN0LmdldFZlcnNpb24oKTtcbiAgICBpZiAoISgwLCBleHBvcnRzLmhhc1NhZmVGZWF0dXJlKShTQUZFX0ZFQVRVUkVTLlJFUVVJUkVEX1RYR0FTLCBzYWZlVmVyc2lvbikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDdXJyZW50IHZlcnNpb24gb2YgdGhlIFNhZmUgZG9lcyBub3Qgc3VwcG9ydCB0aGUgcmVxdWlyZWRUeEdhcyBmdW5jdGlvbmFsaXR5Jyk7XG4gICAgfVxuICAgIHJldHVybiBzYWZlQ29udHJhY3Q7XG59XG5leHBvcnRzLmlzU2FmZUNvbnRyYWN0Q29tcGF0aWJsZVdpdGhSZXF1aXJlZFR4R2FzID0gaXNTYWZlQ29udHJhY3RDb21wYXRpYmxlV2l0aFJlcXVpcmVkVHhHYXM7XG5hc3luYyBmdW5jdGlvbiBpc1NhZmVDb250cmFjdENvbXBhdGlibGVXaXRoU2ltdWxhdGVBbmRSZXZlcnQoc2FmZUNvbnRyYWN0KSB7XG4gICAgY29uc3Qgc2FmZVZlcnNpb24gPSBhd2FpdCBzYWZlQ29udHJhY3QuZ2V0VmVyc2lvbigpO1xuICAgIGlmICghKDAsIGV4cG9ydHMuaGFzU2FmZUZlYXR1cmUpKFNBRkVfRkVBVFVSRVMuU0lNVUxBVEVfQU5EX1JFVkVSVCwgc2FmZVZlcnNpb24pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ3VycmVudCB2ZXJzaW9uIG9mIHRoZSBTYWZlIGRvZXMgbm90IHN1cHBvcnQgdGhlIHNpbXVsYXRlQW5kUmV2ZXJ0IGZ1bmN0aW9uYWxpdHknKTtcbiAgICB9XG4gICAgcmV0dXJuIHNhZmVDb250cmFjdDtcbn1cbmV4cG9ydHMuaXNTYWZlQ29udHJhY3RDb21wYXRpYmxlV2l0aFNpbXVsYXRlQW5kUmV2ZXJ0ID0gaXNTYWZlQ29udHJhY3RDb21wYXRpYmxlV2l0aFNpbXVsYXRlQW5kUmV2ZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FmZVZlcnNpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/safeVersions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js ***!
  \***************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EthSafeSignature = void 0;\nclass EthSafeSignature {\n    /**\n     * Creates an instance of a Safe signature.\n     *\n     * @param signer - Ethers signer\n     * @param signature - The Safe signature\n     * @returns The Safe signature instance\n     */\n    constructor(signer, signature, isContractSignature = false) {\n        this.signer = signer;\n        this.data = signature;\n        this.isContractSignature = isContractSignature;\n    }\n    /**\n     * Returns the static part of the Safe signature.\n     *\n     * @returns The static part of the Safe signature\n     */\n    staticPart(dynamicOffset) {\n        if (this.isContractSignature) {\n            return `${this.signer.slice(2).padStart(64, '0')}${dynamicOffset || ''}00`;\n        }\n        return this.data;\n    }\n    /**\n     * Returns the dynamic part of the Safe signature.\n     *\n     * @returns The dynamic part of the Safe signature\n     */\n    dynamicPart() {\n        if (this.isContractSignature) {\n            const dynamicPartLength = (this.data.slice(2).length / 2).toString(16).padStart(64, '0');\n            return `${dynamicPartLength}${this.data.slice(2)}`;\n        }\n        return '';\n    }\n}\nexports.EthSafeSignature = EthSafeSignature;\n//# sourceMappingURL=SafeSignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3NpZ25hdHVyZXMvU2FmZVNpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix1Q0FBdUMsRUFBRSxvQkFBb0I7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixrQkFBa0IsRUFBRSxtQkFBbUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy9zaWduYXR1cmVzL1NhZmVTaWduYXR1cmUuanM/ZjFhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXRoU2FmZVNpZ25hdHVyZSA9IHZvaWQgMDtcbmNsYXNzIEV0aFNhZmVTaWduYXR1cmUge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBTYWZlIHNpZ25hdHVyZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzaWduZXIgLSBFdGhlcnMgc2lnbmVyXG4gICAgICogQHBhcmFtIHNpZ25hdHVyZSAtIFRoZSBTYWZlIHNpZ25hdHVyZVxuICAgICAqIEByZXR1cm5zIFRoZSBTYWZlIHNpZ25hdHVyZSBpbnN0YW5jZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNpZ25lciwgc2lnbmF0dXJlLCBpc0NvbnRyYWN0U2lnbmF0dXJlID0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5zaWduZXIgPSBzaWduZXI7XG4gICAgICAgIHRoaXMuZGF0YSA9IHNpZ25hdHVyZTtcbiAgICAgICAgdGhpcy5pc0NvbnRyYWN0U2lnbmF0dXJlID0gaXNDb250cmFjdFNpZ25hdHVyZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgc3RhdGljIHBhcnQgb2YgdGhlIFNhZmUgc2lnbmF0dXJlLlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIHN0YXRpYyBwYXJ0IG9mIHRoZSBTYWZlIHNpZ25hdHVyZVxuICAgICAqL1xuICAgIHN0YXRpY1BhcnQoZHluYW1pY09mZnNldCkge1xuICAgICAgICBpZiAodGhpcy5pc0NvbnRyYWN0U2lnbmF0dXJlKSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7dGhpcy5zaWduZXIuc2xpY2UoMikucGFkU3RhcnQoNjQsICcwJyl9JHtkeW5hbWljT2Zmc2V0IHx8ICcnfTAwYDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5kYXRhO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBkeW5hbWljIHBhcnQgb2YgdGhlIFNhZmUgc2lnbmF0dXJlLlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIGR5bmFtaWMgcGFydCBvZiB0aGUgU2FmZSBzaWduYXR1cmVcbiAgICAgKi9cbiAgICBkeW5hbWljUGFydCgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNDb250cmFjdFNpZ25hdHVyZSkge1xuICAgICAgICAgICAgY29uc3QgZHluYW1pY1BhcnRMZW5ndGggPSAodGhpcy5kYXRhLnNsaWNlKDIpLmxlbmd0aCAvIDIpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg2NCwgJzAnKTtcbiAgICAgICAgICAgIHJldHVybiBgJHtkeW5hbWljUGFydExlbmd0aH0ke3RoaXMuZGF0YS5zbGljZSgyKX1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG59XG5leHBvcnRzLkV0aFNhZmVTaWduYXR1cmUgPSBFdGhTYWZlU2lnbmF0dXJlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2FmZVNpZ25hdHVyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/index.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/index.js ***!
  \*******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./SafeSignature */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/utils.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3NpZ25hdHVyZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLHNMQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMsc0tBQVM7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy9zaWduYXR1cmVzL2luZGV4LmpzP2U4NzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9TYWZlU2lnbmF0dXJlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/utils.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/utils.js ***!
  \*******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateSafeMessageHash = exports.calculateSafeTransactionHash = exports.preimageSafeMessageHash = exports.preimageSafeTransactionHash = exports.buildSignatureBytes = exports.buildContractSignature = exports.generateEIP712Signature = exports.generateSignature = exports.adjustVInSignature = exports.isTxHashSignedWithPrefix = exports.generatePreValidatedSignature = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"(ssr)/./node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist/index.js\");\nconst satisfies_1 = __importDefault(__webpack_require__(/*! semver/functions/satisfies */ \"(ssr)/./node_modules/.pnpm/semver@7.6.2/node_modules/semver/functions/satisfies.js\"));\nconst address_1 = __webpack_require__(/*! ../address */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/address.js\");\nconst SafeSignature_1 = __webpack_require__(/*! ./SafeSignature */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js\");\nconst eip_712_1 = __webpack_require__(/*! ../eip-712 */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-712/index.js\");\nconst types_1 = __webpack_require__(/*! ../../types */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/types/index.js\");\nfunction generatePreValidatedSignature(ownerAddress) {\n    const signature = '0x000000000000000000000000' +\n        ownerAddress.slice(2) +\n        '0000000000000000000000000000000000000000000000000000000000000000' +\n        '01';\n    return new SafeSignature_1.EthSafeSignature(ownerAddress, signature);\n}\nexports.generatePreValidatedSignature = generatePreValidatedSignature;\nfunction isTxHashSignedWithPrefix(txHash, signature, ownerAddress) {\n    let hasPrefix;\n    try {\n        const rsvSig = {\n            r: Buffer.from(signature.slice(2, 66), 'hex'),\n            s: Buffer.from(signature.slice(66, 130), 'hex'),\n            v: parseInt(signature.slice(130, 132), 16)\n        };\n        const recoveredData = (0, ethereumjs_util_1.ecrecover)(Buffer.from(txHash.slice(2), 'hex'), rsvSig.v, rsvSig.r, rsvSig.s);\n        const recoveredAddress = (0, ethereumjs_util_1.bufferToHex)((0, ethereumjs_util_1.pubToAddress)(recoveredData));\n        hasPrefix = !(0, address_1.sameString)(recoveredAddress, ownerAddress);\n    }\n    catch (e) {\n        hasPrefix = true;\n    }\n    return hasPrefix;\n}\nexports.isTxHashSignedWithPrefix = isTxHashSignedWithPrefix;\nconst adjustVInSignature = (signingMethod, signature, safeTxHash, signerAddress) => {\n    const ETHEREUM_V_VALUES = [0, 1, 27, 28];\n    const MIN_VALID_V_VALUE_FOR_SAFE_ECDSA = 27;\n    let signatureV = parseInt(signature.slice(-2), 16);\n    if (!ETHEREUM_V_VALUES.includes(signatureV)) {\n        throw new Error('Invalid signature');\n    }\n    if (signingMethod === types_1.SigningMethod.ETH_SIGN) {\n        /*\n          The Safe's expected V value for ECDSA signature is:\n          - 27 or 28\n          - 31 or 32 if the message was signed with a EIP-191 prefix. Should be calculated as ECDSA V value + 4\n          Some wallets do that, some wallets don't, V > 30 is used by contracts to differentiate between\n          prefixed and non-prefixed messages. The only way to know if the message was signed with a\n          prefix is to check if the signer address is the same as the recovered address.\n    \n          More info:\n          https://docs.safe.global/safe-core-protocol/signatures\n        */\n        if (signatureV < MIN_VALID_V_VALUE_FOR_SAFE_ECDSA) {\n            signatureV += MIN_VALID_V_VALUE_FOR_SAFE_ECDSA;\n        }\n        const adjustedSignature = signature.slice(0, -2) + signatureV.toString(16);\n        const signatureHasPrefix = isTxHashSignedWithPrefix(safeTxHash, adjustedSignature, signerAddress);\n        if (signatureHasPrefix) {\n            signatureV += 4;\n        }\n    }\n    if (signingMethod === types_1.SigningMethod.ETH_SIGN_TYPED_DATA) {\n        // Metamask with ledger returns V=0/1 here too, we need to adjust it to be ethereum's valid value (27 or 28)\n        if (signatureV < MIN_VALID_V_VALUE_FOR_SAFE_ECDSA) {\n            signatureV += MIN_VALID_V_VALUE_FOR_SAFE_ECDSA;\n        }\n    }\n    signature = signature.slice(0, -2) + signatureV.toString(16);\n    return signature;\n};\nexports.adjustVInSignature = adjustVInSignature;\nasync function generateSignature(safeProvider, hash) {\n    const signerAddress = await safeProvider.getSignerAddress();\n    if (!signerAddress) {\n        throw new Error('SafeProvider must be initialized with a signer to use this method');\n    }\n    let signature = await safeProvider.signMessage(hash);\n    signature = (0, exports.adjustVInSignature)(types_1.SigningMethod.ETH_SIGN, signature, hash, signerAddress);\n    return new SafeSignature_1.EthSafeSignature(signerAddress, signature);\n}\nexports.generateSignature = generateSignature;\nasync function generateEIP712Signature(safeProvider, safeEIP712Args, methodVersion) {\n    const signerAddress = await safeProvider.getSignerAddress();\n    if (!signerAddress) {\n        throw new Error('SafeProvider must be initialized with a signer to use this method');\n    }\n    //@ts-expect-error: Evaluate removal of methodVersion and use v4\n    let signature = await safeProvider.signTypedData(safeEIP712Args, methodVersion);\n    signature = (0, exports.adjustVInSignature)(types_1.SigningMethod.ETH_SIGN_TYPED_DATA, signature);\n    return new SafeSignature_1.EthSafeSignature(signerAddress, signature);\n}\nexports.generateEIP712Signature = generateEIP712Signature;\nconst buildContractSignature = async (signatures, signerSafeAddress) => {\n    const contractSignature = new SafeSignature_1.EthSafeSignature(signerSafeAddress, (0, exports.buildSignatureBytes)(signatures), true);\n    return contractSignature;\n};\nexports.buildContractSignature = buildContractSignature;\nconst buildSignatureBytes = (signatures) => {\n    const SIGNATURE_LENGTH_BYTES = 65;\n    signatures.sort((left, right) => left.signer.toLowerCase().localeCompare(right.signer.toLowerCase()));\n    let signatureBytes = '0x';\n    let dynamicBytes = '';\n    for (const signature of signatures) {\n        if (signature.isContractSignature) {\n            /*\n              A contract signature has a static part of 65 bytes and the dynamic part that needs to be appended\n              at the end of signature bytes.\n              The signature format is\n              Signature type == 0\n              Constant part: 65 bytes\n              {32-bytes signature verifier}{32-bytes dynamic data position}{1-byte signature type}\n              Dynamic part (solidity bytes): 32 bytes + signature data length\n              {32-bytes signature length}{bytes signature data}\n            */\n            const dynamicPartPosition = (signatures.length * SIGNATURE_LENGTH_BYTES +\n                dynamicBytes.length / 2)\n                .toString(16)\n                .padStart(64, '0');\n            signatureBytes += signature.staticPart(dynamicPartPosition);\n            dynamicBytes += signature.dynamicPart();\n        }\n        else {\n            signatureBytes += signature.data.slice(2);\n        }\n    }\n    return signatureBytes + dynamicBytes;\n};\nexports.buildSignatureBytes = buildSignatureBytes;\nconst preimageSafeTransactionHash = (safeAddress, safeTx, safeVersion, chainId) => {\n    const safeTxTypes = (0, eip_712_1.getEip712TxTypes)(safeVersion);\n    return ethers_1.ethers.TypedDataEncoder.encode({ verifyingContract: safeAddress, chainId }, { SafeTx: safeTxTypes.SafeTx }, safeTx);\n};\nexports.preimageSafeTransactionHash = preimageSafeTransactionHash;\nconst preimageSafeMessageHash = (safeAddress, message, safeVersion, chainId) => {\n    const safeMessageTypes = (0, eip_712_1.getEip712MessageTypes)(safeVersion);\n    return ethers_1.ethers.TypedDataEncoder.encode({ verifyingContract: safeAddress, chainId }, { SafeMessage: safeMessageTypes.SafeMessage }, { message });\n};\nexports.preimageSafeMessageHash = preimageSafeMessageHash;\nconst EQ_OR_GT_1_3_0 = '>=1.3.0';\nconst calculateSafeTransactionHash = (safeAddress, safeTx, safeVersion, chainId) => {\n    const safeTxTypes = (0, eip_712_1.getEip712TxTypes)(safeVersion);\n    const domain = { verifyingContract: safeAddress };\n    if ((0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_3_0)) {\n        domain.chainId = chainId;\n    }\n    return ethers_1.ethers.TypedDataEncoder.hash(domain, { SafeTx: safeTxTypes.SafeTx }, safeTx);\n};\nexports.calculateSafeTransactionHash = calculateSafeTransactionHash;\nconst calculateSafeMessageHash = (safeAddress, message, safeVersion, chainId) => {\n    const safeMessageTypes = (0, eip_712_1.getEip712MessageTypes)(safeVersion);\n    return ethers_1.ethers.TypedDataEncoder.hash({ verifyingContract: safeAddress, chainId }, { SafeMessage: safeMessageTypes.SafeMessage }, { message });\n};\nexports.calculateSafeMessageHash = calculateSafeMessageHash;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/SafeTransaction.js":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/SafeTransaction.js ***!
  \*******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst signatures_1 = __webpack_require__(/*! ../signatures */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/index.js\");\nclass EthSafeTransaction {\n    constructor(data) {\n        this.signatures = new Map();\n        this.data = data;\n    }\n    getSignature(signer) {\n        return this.signatures.get(signer.toLowerCase());\n    }\n    addSignature(signature) {\n        this.signatures.set(signature.signer.toLowerCase(), signature);\n    }\n    encodedSignatures() {\n        return (0, signatures_1.buildSignatureBytes)(Array.from(this.signatures.values()));\n    }\n}\nexports[\"default\"] = EthSafeTransaction;\n//# sourceMappingURL=SafeTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3RyYW5zYWN0aW9ucy9TYWZlVHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLG1CQUFPLENBQUMsNEtBQWU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3RyYW5zYWN0aW9ucy9TYWZlVHJhbnNhY3Rpb24uanM/ZDgxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHNpZ25hdHVyZXNfMSA9IHJlcXVpcmUoXCIuLi9zaWduYXR1cmVzXCIpO1xuY2xhc3MgRXRoU2FmZVRyYW5zYWN0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgICAgIHRoaXMuc2lnbmF0dXJlcyA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG4gICAgZ2V0U2lnbmF0dXJlKHNpZ25lcikge1xuICAgICAgICByZXR1cm4gdGhpcy5zaWduYXR1cmVzLmdldChzaWduZXIudG9Mb3dlckNhc2UoKSk7XG4gICAgfVxuICAgIGFkZFNpZ25hdHVyZShzaWduYXR1cmUpIHtcbiAgICAgICAgdGhpcy5zaWduYXR1cmVzLnNldChzaWduYXR1cmUuc2lnbmVyLnRvTG93ZXJDYXNlKCksIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIGVuY29kZWRTaWduYXR1cmVzKCkge1xuICAgICAgICByZXR1cm4gKDAsIHNpZ25hdHVyZXNfMS5idWlsZFNpZ25hdHVyZUJ5dGVzKShBcnJheS5mcm9tKHRoaXMuc2lnbmF0dXJlcy52YWx1ZXMoKSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEV0aFNhZmVUcmFuc2FjdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNhZmVUcmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/SafeTransaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/gas.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/gas.js ***!
  \*******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.estimateSafeDeploymentGas = exports.estimateSafeTxGas = exports.estimateTxBaseGas = exports.estimateTxGas = exports.estimateGas = void 0;\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\nconst satisfies_1 = __importDefault(__webpack_require__(/*! semver/functions/satisfies */ \"(ssr)/./node_modules/.pnpm/semver@7.6.2/node_modules/semver/functions/satisfies.js\"));\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nconst safeDeploymentContracts_1 = __webpack_require__(/*! ../../contracts/safeDeploymentContracts */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts.js\");\nconst safeVersions_1 = __webpack_require__(/*! ../safeVersions */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/safeVersions.js\");\n// Every byte == 00 -> 4  Gas cost\nconst CALL_DATA_ZERO_BYTE_GAS_COST = 4;\n// Every byte != 00 -> 16 Gas cost (68 before Istanbul)\nconst CALL_DATA_BYTE_GAS_COST = 16;\n// gas cost initialization of a Safe\nconst INITIZATION_GAS_COST = 20000;\n// increment nonce gas cost\nconst INCREMENT_NONCE_GAS_COST = 5000;\n// Keccak gas cost for the hash of the Safe transaction\nconst HASH_GENERATION_GAS_COST = 1500;\n// ecrecover gas cost for ecdsa ~= 4K gas, we use 6K\nconst ECRECOVER_GAS_COST = 6000;\n// transfer gas cost\nconst TRANSAFER_GAS_COST = 32000;\n// numbers < 256 (0x00(31*2)..ff) are 192 -> 31 * 4 + 1 * CALL_DATA_BYTE_GAS_COST\n// numbers < 65535 (0x(30*2)..ffff) are 256 -> 30 * 4 + 2 * CALL_DATA_BYTE_GAS_COST\n// Calculate gas for signatures\n// (array count (3 -> r, s, v) + ecrecover costs) * signature count\nconst GAS_COST_PER_SIGNATURE = 1 * CALL_DATA_BYTE_GAS_COST + 2 * 32 * CALL_DATA_BYTE_GAS_COST + ECRECOVER_GAS_COST;\nfunction estimateDataGasCosts(data) {\n    const bytes = data.match(/.{2}/g);\n    return bytes.reduce((gasCost, currentByte) => {\n        if (currentByte === '0x') {\n            return gasCost + 0;\n        }\n        if (currentByte === '00') {\n            return gasCost + CALL_DATA_ZERO_BYTE_GAS_COST;\n        }\n        return gasCost + CALL_DATA_BYTE_GAS_COST;\n    }, 0);\n}\nasync function estimateGas(safeVersion, safeContract, safeProvider, to, valueInWei, data, operation, customContracts) {\n    const chainId = await safeProvider.getChainId();\n    const simulateTxAccessorContract = await (0, safeDeploymentContracts_1.getSimulateTxAccessorContract)({\n        safeProvider,\n        safeVersion,\n        customContracts: customContracts?.[chainId.toString()]\n    });\n    const transactionDataToEstimate = simulateTxAccessorContract.encode('simulate', [\n        to,\n        BigInt(valueInWei),\n        data,\n        operation\n    ]);\n    const safeContractContractCompatibleWithSimulateAndRevert = await (0, safeVersions_1.isSafeContractCompatibleWithSimulateAndRevert)(safeContract);\n    const safeFunctionToEstimate = safeContractContractCompatibleWithSimulateAndRevert.encode('simulateAndRevert', [await simulateTxAccessorContract.getAddress(), transactionDataToEstimate]);\n    const safeAddress = await safeContract.getAddress();\n    const transactionToEstimateGas = {\n        to: safeAddress,\n        value: '0',\n        data: safeFunctionToEstimate,\n        from: safeAddress\n    };\n    try {\n        const encodedResponse = await safeProvider.call(transactionToEstimateGas);\n        return decodeSafeTxGas(encodedResponse);\n    }\n    catch (error) {\n        return parseSafeTxGasErrorResponse(error);\n    }\n}\nexports.estimateGas = estimateGas;\nasync function estimateTxGas(safeContract, safeProvider, to, valueInWei, data, operation) {\n    let txGasEstimation = 0;\n    const safeAddress = await safeContract.getAddress();\n    const safeContractCompatibleWithRequiredTxGas = await (0, safeVersions_1.isSafeContractCompatibleWithRequiredTxGas)(safeContract);\n    const estimateData = safeContractCompatibleWithRequiredTxGas.encode('requiredTxGas', [\n        to,\n        BigInt(valueInWei),\n        data,\n        operation\n    ]);\n    try {\n        const estimateResponse = await safeProvider.estimateGas({\n            to: safeAddress,\n            from: safeAddress,\n            data: estimateData\n        });\n        txGasEstimation = Number('0x' + estimateResponse.substring(138)) + 10000;\n    }\n    catch (error) { }\n    if (txGasEstimation > 0) {\n        const dataGasEstimation = estimateDataGasCosts(estimateData);\n        let additionalGas = 10000;\n        for (let i = 0; i < 10; i++) {\n            try {\n                const estimateResponse = await safeProvider.call({\n                    to: safeAddress,\n                    from: safeAddress,\n                    data: estimateData,\n                    gasPrice: '0',\n                    gasLimit: (txGasEstimation + dataGasEstimation + additionalGas).toString()\n                });\n                if (estimateResponse !== '0x') {\n                    break;\n                }\n            }\n            catch (error) { }\n            txGasEstimation = txGasEstimation + additionalGas;\n            additionalGas *= 2;\n        }\n        return (txGasEstimation + additionalGas).toString();\n    }\n    try {\n        const estimateGas = await safeProvider.estimateGas({\n            to,\n            from: safeAddress,\n            value: valueInWei,\n            data\n        });\n        return estimateGas;\n    }\n    catch (error) {\n        if (operation === safe_core_sdk_types_1.OperationType.DelegateCall) {\n            return '0';\n        }\n        return Promise.reject(error);\n    }\n}\nexports.estimateTxGas = estimateTxGas;\n/**\n * This function estimates the baseGas of a Safe transaction.\n * The baseGas includes costs for:\n * - Generation of the Safe transaction hash (txHash)\n * - Increasing the nonce of the Safe\n * - Verifying the signatures of the Safe transaction\n * - Payment to relayers for executing the transaction\n * - Emitting events ExecutionSuccess or ExecutionFailure\n *\n * Note: it does not include the transaction execution cost (safeTxGas)\n *\n * @async\n * @function estimateTxBaseGas\n * @param {Safe} safe - The Safe instance containing all the information about the safe.\n * @param {SafeTransaction} safeTransaction - The transaction for which the baseGas is to be estimated.\n * @returns {Promise<string>} A Promise that resolves with the estimated baseGas as a string.\n */\nasync function estimateTxBaseGas(safe, safeTransaction) {\n    const safeTransactionData = safeTransaction.data;\n    const { to, value, data, operation, safeTxGas, gasToken, refundReceiver } = safeTransactionData;\n    const safeThreshold = await safe.getThreshold();\n    const safeNonce = await safe.getNonce();\n    const signaturesGasCost = safeThreshold * GAS_COST_PER_SIGNATURE;\n    const encodeSafeTxGas = safeTxGas || 0;\n    const encodeBaseGas = 0;\n    const gasPrice = 1;\n    const encodeGasToken = gasToken || constants_1.ZERO_ADDRESS;\n    const encodeRefundReceiver = refundReceiver || constants_1.ZERO_ADDRESS;\n    const signatures = '0x';\n    const safeVersion = await safe.getContractVersion();\n    const safeProvider = safe.getSafeProvider();\n    const isL1SafeSingleton = safe.getContractManager().isL1SafeSingleton;\n    const chainId = await safe.getChainId();\n    const customContracts = safe.getContractManager().contractNetworks?.[chainId.toString()];\n    const safeSingletonContract = await (0, safeDeploymentContracts_1.getSafeContract)({\n        safeProvider,\n        safeVersion,\n        isL1SafeSingleton,\n        customContracts\n    });\n    //TODO: We should explore contract versions and map to the correct types\n    //@ts-expect-error: Type too complex to represent.\n    const execTransactionData = safeSingletonContract.encode('execTransaction', [\n        to,\n        BigInt(value),\n        data,\n        operation,\n        encodeSafeTxGas,\n        encodeBaseGas,\n        gasPrice,\n        encodeGasToken,\n        encodeRefundReceiver,\n        signatures\n    ]);\n    // If nonce == 0, nonce storage has to be initialized\n    const isSafeInitialized = safeNonce !== 0;\n    const incrementNonceGasCost = isSafeInitialized ? INCREMENT_NONCE_GAS_COST : INITIZATION_GAS_COST;\n    let baseGas = signaturesGasCost +\n        estimateDataGasCosts(execTransactionData) +\n        incrementNonceGasCost +\n        HASH_GENERATION_GAS_COST;\n    // Add additional gas costs\n    baseGas > 65536 ? (baseGas += 64) : (baseGas += 128);\n    // Base tx costs, transfer costs...\n    baseGas += TRANSAFER_GAS_COST;\n    return baseGas.toString();\n}\nexports.estimateTxBaseGas = estimateTxBaseGas;\n/**\n * This function estimates the safeTxGas of a Safe transaction.\n * The safeTxGas value represents the amount of gas required to execute the Safe transaction itself.\n * It does not include costs such as signature verification, transaction hash generation, nonce incrementing, and so on.\n *\n * The estimation method differs based on the version of the Safe:\n * - For versions >= 1.3.0, the simulate function defined in the simulateTxAccessor.sol Contract is used.\n * - For versions < 1.3.0, the deprecated requiredTxGas method defined in the GnosisSafe.sol contract is used.\n *\n * @async\n * @function estimateSafeTxGas\n * @param {Safe} safe - The Safe instance containing all the necessary information about the safe.\n * @param {SafeTransaction} safeTransaction - The transaction for which the safeTxGas is to be estimated.\n * @returns {Promise<string>} A Promise that resolves with the estimated safeTxGas as a string.\n *\n */\nasync function estimateSafeTxGas(safe, safeTransaction) {\n    const safeVersion = await safe.getContractVersion();\n    if ((0, satisfies_1.default)(safeVersion, '>=1.3.0')) {\n        const safeTxGas = await estimateSafeTxGasWithSimulate(safe, safeTransaction);\n        return addExtraGasForSafety(safeTxGas);\n    }\n    // deprecated method to estimate the safeTxGas of a Safe transaction\n    const safeTxGas = await estimateSafeTxGasWithRequiredTxGas(safe, safeTransaction);\n    return addExtraGasForSafety(safeTxGas);\n}\nexports.estimateSafeTxGas = estimateSafeTxGas;\n/**\n * Increase the given safeTxGas gas amount by 5% as a security margin to avoid running out of gas.\n * In some contexts, the safeTxGas might be underestimated, leading to 'out of gas' errors during the Safe transaction execution\n *\n * @param {string} safeTxGas - The original safeTxGas gas amount.\n * @returns {string} The new safeTxGas gas amount, increased by 5% rounded.\n */\nfunction addExtraGasForSafety(safeTxGas) {\n    const INCREASE_GAS_FACTOR = 1.05; // increase the gas by 5% as a security margin\n    return Math.round(Number(safeTxGas) * INCREASE_GAS_FACTOR).toString();\n}\n/**\n * This function estimates the safeTxGas of a Safe transaction.\n * Using the deprecated method of requiredTxGas defined in the GnosisSafe contract. This method is meant to be used for Safe versions < 1.3.0.\n * see: https://github.com/safe-global/safe-contracts/blob/v1.2.0/contracts/GnosisSafe.sol#L276\n *\n * @async\n * @function estimateSafeTxGasWithRequiredTxGas\n * @param {Safe} safe - The Safe instance containing all the necessary information about the safe.\n * @param {SafeTransaction} safeTransaction - The transaction for which the safeTxGas is to be estimated.\n * @returns {Promise<string>} A Promise that resolves with the estimated safeTxGas as a string.\n *\n */\nasync function estimateSafeTxGasWithRequiredTxGas(safe, safeTransaction) {\n    const isSafeDeployed = await safe.isSafeDeployed();\n    const safeAddress = await safe.getAddress();\n    const safeVersion = await safe.getContractVersion();\n    const safeProvider = safe.getSafeProvider();\n    const isL1SafeSingleton = safe.getContractManager().isL1SafeSingleton;\n    const chainId = await safe.getChainId();\n    const customContracts = safe.getContractManager().contractNetworks?.[chainId.toString()];\n    const safeSingletonContract = await (0, safeDeploymentContracts_1.getSafeContract)({\n        safeProvider,\n        safeVersion,\n        isL1SafeSingleton,\n        customContracts\n    });\n    const safeContractCompatibleWithRequiredTxGas = await (0, safeVersions_1.isSafeContractCompatibleWithRequiredTxGas)(safeSingletonContract);\n    const transactionDataToEstimate = safeContractCompatibleWithRequiredTxGas.encode('requiredTxGas', [\n        safeTransaction.data.to,\n        BigInt(safeTransaction.data.value),\n        safeTransaction.data.data,\n        safeTransaction.data.operation\n    ]);\n    const to = isSafeDeployed ? safeAddress : await safeSingletonContract.getAddress();\n    const transactionToEstimateGas = {\n        to,\n        value: '0',\n        data: transactionDataToEstimate,\n        from: safeAddress\n    };\n    try {\n        const encodedResponse = await safeProvider.call(transactionToEstimateGas);\n        const safeTxGas = '0x' + encodedResponse.slice(-32);\n        return safeTxGas;\n        // if the call throws an error we try to parse the returned value\n    }\n    catch (error) {\n        try {\n            const revertData = error?.info?.error?.data;\n            if (revertData && revertData.startsWith('Reverted ')) {\n                const [, safeTxGas] = revertData.split('Reverted ');\n                return Number(safeTxGas).toString();\n            }\n        }\n        catch {\n            return '0';\n        }\n    }\n    return '0';\n}\n// TO-DO: Improve decoding\n/*\n  const simulateAndRevertResponse = safeProvider.decodeParameters(\n    ['bool', 'bytes'],\n    encodedResponse\n  )\n  const returnedData = safeProvider.decodeParameters(['uint256', 'bool', 'bytes'], simulateAndRevertResponse[1])\n  */\nfunction decodeSafeTxGas(encodedDataResponse) {\n    const [, encodedSafeTxGas] = encodedDataResponse.split('0x');\n    const data = '0x' + encodedSafeTxGas;\n    return Number('0x' + data.slice(184).slice(0, 10)).toString();\n}\n/**\n * Parses the SafeTxGas estimation response from different providers.\n * It extracts and decodes the SafeTxGas value from the Error object.\n *\n * @param {ProviderEstimationError} error - The estimation object with the estimation data.\n * @returns {string} The SafeTxGas value.\n * @throws It Will throw an error if the SafeTxGas cannot be parsed.\n */\nfunction parseSafeTxGasErrorResponse(error) {\n    // Ethers v6\n    const ethersData = error?.data;\n    if (ethersData) {\n        return decodeSafeTxGas(ethersData);\n    }\n    // viem\n    const viemError = error?.info?.error?.message;\n    if (viemError) {\n        return decodeSafeTxGas(viemError);\n    }\n    // gnosis-chain\n    const gnosisChainProviderData = error?.info?.error?.data;\n    if (gnosisChainProviderData) {\n        const isString = typeof gnosisChainProviderData === 'string';\n        const encodedDataResponse = isString ? gnosisChainProviderData : gnosisChainProviderData.data;\n        return decodeSafeTxGas(encodedDataResponse);\n    }\n    // Error message\n    const isEncodedDataPresent = error?.message?.includes('0x');\n    if (isEncodedDataPresent) {\n        return decodeSafeTxGas(error?.message);\n    }\n    throw new Error('Could not parse SafeTxGas from Estimation response, Details: ' + error?.message);\n}\n/**\n * This function estimates the safeTxGas of a Safe transaction.\n * It uses the simulate function defined in the SimulateTxAccessor contract. This method is meant to be used for Safe versions >= 1.3.0.\n *\n * @async\n * @function estimateSafeTxGasWithSimulate\n * @param {Safe} safe - The Safe instance containing all the necessary information about the safe.\n * @param {SafeTransaction} safeTransaction - The transaction for which the safeTxGas is to be estimated.\n * @returns {Promise<string>} A Promise that resolves with the estimated safeTxGas as a string.\n *\n */\nasync function estimateSafeTxGasWithSimulate(safe, safeTransaction) {\n    const isSafeDeployed = await safe.isSafeDeployed();\n    const safeAddress = await safe.getAddress();\n    const safeVersion = await safe.getContractVersion();\n    const safeProvider = safe.getSafeProvider();\n    const chainId = await safe.getChainId();\n    const customContracts = safe.getContractManager().contractNetworks?.[chainId.toString()];\n    const isL1SafeSingleton = safe.getContractManager().isL1SafeSingleton;\n    const safeSingletonContract = await (0, safeDeploymentContracts_1.getSafeContract)({\n        safeProvider,\n        safeVersion,\n        isL1SafeSingleton,\n        customContracts\n    });\n    // new version of the estimation\n    const simulateTxAccessorContract = await (0, safeDeploymentContracts_1.getSimulateTxAccessorContract)({\n        safeProvider,\n        safeVersion,\n        customContracts\n    });\n    const transactionDataToEstimate = simulateTxAccessorContract.encode('simulate', [\n        safeTransaction.data.to,\n        BigInt(safeTransaction.data.value),\n        safeTransaction.data.data,\n        safeTransaction.data.operation\n    ]);\n    // if the Safe is not deployed we can use the singleton address to simulate\n    const to = isSafeDeployed ? safeAddress : await safeSingletonContract.getAddress();\n    const SafeContractCompatibleWithSimulateAndRevert = await (0, safeVersions_1.isSafeContractCompatibleWithSimulateAndRevert)(safeSingletonContract);\n    const safeFunctionToEstimate = SafeContractCompatibleWithSimulateAndRevert.encode('simulateAndRevert', [await simulateTxAccessorContract.getAddress(), transactionDataToEstimate]);\n    const transactionToEstimateGas = {\n        to,\n        value: '0',\n        data: safeFunctionToEstimate,\n        from: safeAddress\n    };\n    try {\n        const encodedResponse = await safeProvider.call(transactionToEstimateGas);\n        const safeTxGas = decodeSafeTxGas(encodedResponse);\n        return safeTxGas;\n        // if the call throws an error we try to parse the returned value\n    }\n    catch (error) {\n        return parseSafeTxGasErrorResponse(error);\n    }\n}\n/**\n * This function estimates the gas cost of deploying a Safe.\n * It considers also the costs of the Safe setup call.\n * The setup call includes tasks such as setting up initial owners, defining the threshold, and initializing the salt nonce used for address generation.\n *\n * @async\n * @function estimateSafeDeploymentGas\n * @param {Safe} safe - The Safe object containing all necessary information about the safe, including owners, threshold, and saltNonce.\n * @returns {Promise<string>} A Promise that resolves with the estimated gas cost of the safe deployment as a string.\n */\nasync function estimateSafeDeploymentGas(safe) {\n    const isSafeDeployed = await safe.isSafeDeployed();\n    if (isSafeDeployed) {\n        return '0';\n    }\n    const safeProvider = safe.getSafeProvider();\n    const safeDeploymentTransaction = await safe.createSafeDeploymentTransaction();\n    const estimation = await safeProvider.estimateGas({\n        ...safeDeploymentTransaction,\n        from: constants_1.ZERO_ADDRESS // if we use the Safe address the estimation always fails due to CREATE2\n    });\n    return estimation;\n}\nexports.estimateSafeDeploymentGas = estimateSafeDeploymentGas;\n//# sourceMappingURL=gas.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/gas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/index.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/index.js ***!
  \*********************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./gas */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/gas.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SafeTransaction */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/SafeTransaction.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/utils.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3RyYW5zYWN0aW9ucy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsb0tBQU87QUFDNUIsYUFBYSxtQkFBTyxDQUFDLDRMQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsd0tBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLHdLQUFTO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmZS1wYXNza2V5cy10dXRvcmlhbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2FmZS1nbG9iYWwrcHJvdG9jb2wta2l0QDQuMS4wX3R5cGVzY3JpcHRANS41LjMvbm9kZV9tb2R1bGVzL0BzYWZlLWdsb2JhbC9wcm90b2NvbC1raXQvZGlzdC9zcmMvdXRpbHMvdHJhbnNhY3Rpb25zL2luZGV4LmpzP2JhN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9nYXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1NhZmVUcmFuc2FjdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/types.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/types.js ***!
  \*********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3RyYW5zYWN0aW9ucy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmUtcGFzc2tleXMtdHV0b3JpYWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3RyYW5zYWN0aW9ucy90eXBlcy5qcz8wYzBjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/utils.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/utils.js ***!
  \*********************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isNewOwnerPasskey = exports.isOldOwnerPasskey = exports.isPasskeyParam = exports.isSafeMultisigTransactionResponse = exports.decodeMultiSendData = exports.encodeMultiSendData = exports.standardizeSafeTransactionData = exports.standardizeMetaTransactionData = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/.pnpm/ethers@6.13.1/node_modules/ethers/lib.commonjs/index.js\");\nconst SafeProvider_1 = __importDefault(__webpack_require__(/*! ../../SafeProvider */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/SafeProvider.js\"));\nconst config_1 = __webpack_require__(/*! ../../contracts/config */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/contracts/config.js\");\nconst utils_1 = __webpack_require__(/*! ../../utils */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/index.js\");\nconst constants_1 = __webpack_require__(/*! ../../utils/constants */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/constants.js\");\nconst safe_core_sdk_types_1 = __webpack_require__(/*! @safe-global/safe-core-sdk-types */ \"(ssr)/./node_modules/.pnpm/@safe-global+safe-core-sdk-types@5.1.0_typescript@5.5.3/node_modules/@safe-global/safe-core-sdk-types/dist/src/index.js\");\nconst satisfies_1 = __importDefault(__webpack_require__(/*! semver/functions/satisfies */ \"(ssr)/./node_modules/.pnpm/semver@7.6.2/node_modules/semver/functions/satisfies.js\"));\nconst gas_1 = __webpack_require__(/*! ./gas */ \"(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/gas.js\");\nfunction standardizeMetaTransactionData(tx) {\n    const standardizedTxs = {\n        ...tx,\n        operation: tx.operation ?? safe_core_sdk_types_1.OperationType.Call\n    };\n    return standardizedTxs;\n}\nexports.standardizeMetaTransactionData = standardizeMetaTransactionData;\nasync function standardizeSafeTransactionData({ safeContract, predictedSafe, provider, tx, contractNetworks }) {\n    const standardizedTxs = {\n        to: tx.to,\n        value: tx.value,\n        data: tx.data,\n        operation: tx.operation ?? safe_core_sdk_types_1.OperationType.Call,\n        baseGas: tx.baseGas ?? '0',\n        gasPrice: tx.gasPrice ?? '0',\n        gasToken: tx.gasToken || constants_1.ZERO_ADDRESS,\n        refundReceiver: tx.refundReceiver || constants_1.ZERO_ADDRESS,\n        nonce: tx.nonce ?? (safeContract ? Number(await safeContract.getNonce()) : 0)\n    };\n    if (typeof tx.safeTxGas !== 'undefined') {\n        return {\n            ...standardizedTxs,\n            safeTxGas: tx.safeTxGas\n        };\n    }\n    let safeVersion;\n    if (predictedSafe) {\n        safeVersion = predictedSafe?.safeDeploymentConfig?.safeVersion || config_1.DEFAULT_SAFE_VERSION;\n    }\n    else {\n        if (!safeContract) {\n            throw new Error('Safe is not deployed');\n        }\n        safeVersion = await safeContract.getVersion();\n    }\n    const hasSafeTxGasOptional = (0, utils_1.hasSafeFeature)(utils_1.SAFE_FEATURES.SAFE_TX_GAS_OPTIONAL, safeVersion);\n    if ((hasSafeTxGasOptional && standardizedTxs.gasPrice === '0') ||\n        (hasSafeTxGasOptional && predictedSafe)) {\n        return {\n            ...standardizedTxs,\n            safeTxGas: '0'\n        };\n    }\n    if (!safeContract) {\n        throw new Error('Safe is not deployed');\n    }\n    let safeTxGas;\n    const safeProvider = new SafeProvider_1.default({ provider });\n    if ((0, satisfies_1.default)(safeVersion, '>=1.3.0')) {\n        safeTxGas = await (0, gas_1.estimateGas)(safeVersion, safeContract, safeProvider, standardizedTxs.to, standardizedTxs.value, standardizedTxs.data, standardizedTxs.operation, contractNetworks);\n    }\n    else {\n        safeTxGas = await (0, gas_1.estimateTxGas)(safeContract, safeProvider, standardizedTxs.to, standardizedTxs.value, standardizedTxs.data, standardizedTxs.operation);\n    }\n    return {\n        ...standardizedTxs,\n        safeTxGas\n    };\n}\nexports.standardizeSafeTransactionData = standardizeSafeTransactionData;\nfunction encodeMetaTransaction(tx) {\n    const data = (0, ethers_1.getBytes)(tx.data);\n    const encoded = (0, ethers_1.solidityPacked)(['uint8', 'address', 'uint256', 'uint256', 'bytes'], [tx.operation, tx.to, tx.value, data.length, data]);\n    return encoded.slice(2);\n}\nfunction encodeMultiSendData(txs) {\n    return '0x' + txs.map((tx) => encodeMetaTransaction(tx)).join('');\n}\nexports.encodeMultiSendData = encodeMultiSendData;\nfunction decodeMultiSendData(encodedData) {\n    const multiSendInterface = new ethers_1.Interface([\n        'function multiSend(bytes memory transactions) public payable'\n    ]);\n    const [decodedData] = multiSendInterface.decodeFunctionData('multiSend', encodedData);\n    const txs = [];\n    // Decode after 0x\n    let index = 2;\n    while (index < decodedData.length) {\n        // As we are decoding hex encoded bytes calldata, each byte is represented by 2 chars\n        // uint8 operation, address to, value uint256, dataLength uint256\n        const operation = `0x${decodedData.slice(index, (index += 2))}`;\n        const to = `0x${decodedData.slice(index, (index += 40))}`;\n        const value = `0x${decodedData.slice(index, (index += 64))}`;\n        const dataLength = parseInt(decodedData.slice(index, (index += 64)), 16) * 2;\n        const data = `0x${decodedData.slice(index, (index += dataLength))}`;\n        txs.push({\n            operation: Number(operation),\n            to: ethers_1.ethers.getAddress(to),\n            value: BigInt(value).toString(),\n            data\n        });\n    }\n    return txs;\n}\nexports.decodeMultiSendData = decodeMultiSendData;\nfunction isSafeMultisigTransactionResponse(safeTransaction) {\n    return safeTransaction.isExecuted !== undefined;\n}\nexports.isSafeMultisigTransactionResponse = isSafeMultisigTransactionResponse;\nfunction isPasskeyParam(params) {\n    return params.passkey !== undefined;\n}\nexports.isPasskeyParam = isPasskeyParam;\nfunction isOldOwnerPasskey(params) {\n    return params.oldOwnerPasskey !== undefined;\n}\nexports.isOldOwnerPasskey = isOldOwnerPasskey;\nfunction isNewOwnerPasskey(params) {\n    return params.newOwnerPasskey !== undefined;\n}\nexports.isNewOwnerPasskey = isNewOwnerPasskey;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/transactions/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/types.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/types.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSafeConfigWithPredictedSafe = void 0;\nfunction isSafeConfigWithPredictedSafe(config) {\n    return config.predictedSafe !== undefined;\n}\nexports.isSafeConfigWithPredictedSafe = isSafeConfigWithPredictedSafe;\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhZmUtZ2xvYmFsK3Byb3RvY29sLWtpdEA0LjEuMF90eXBlc2NyaXB0QDUuNS4zL25vZGVfbW9kdWxlcy9Ac2FmZS1nbG9iYWwvcHJvdG9jb2wta2l0L2Rpc3Qvc3JjL3V0aWxzL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZlLXBhc3NrZXlzLXR1dG9yaWFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzYWZlLWdsb2JhbCtwcm90b2NvbC1raXRANC4xLjBfdHlwZXNjcmlwdEA1LjUuMy9ub2RlX21vZHVsZXMvQHNhZmUtZ2xvYmFsL3Byb3RvY29sLWtpdC9kaXN0L3NyYy91dGlscy90eXBlcy5qcz8xYWY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1NhZmVDb25maWdXaXRoUHJlZGljdGVkU2FmZSA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzU2FmZUNvbmZpZ1dpdGhQcmVkaWN0ZWRTYWZlKGNvbmZpZykge1xuICAgIHJldHVybiBjb25maWcucHJlZGljdGVkU2FmZSAhPT0gdW5kZWZpbmVkO1xufVxuZXhwb3J0cy5pc1NhZmVDb25maWdXaXRoUHJlZGljdGVkU2FmZSA9IGlzU2FmZUNvbmZpZ1dpdGhQcmVkaWN0ZWRTYWZlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@safe-global+protocol-kit@4.1.0_typescript@5.5.3/node_modules/@safe-global/protocol-kit/dist/src/utils/types.js\n");

/***/ })

};
;